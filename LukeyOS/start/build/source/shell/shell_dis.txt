
/home/alvin/workspace/LukeyOS/LukeyOS/start/build/source/shell/shell.elf:     file format elf32-i386
/home/alvin/workspace/LukeyOS/LukeyOS/start/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000090

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00003cd0 memsz 0x00003d50 flags rwx
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003441  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       00000028  81003444  81003444  00004444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         00000850  81003480  81003480  00004480  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          00000070  81003ce0  81003ce0  00004cd0  2**5
                  ALLOC
  4 .debug_info   00010517  00000000  00000000  00004cd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  5 .debug_abbrev 00003923  00000000  00000000  000151e7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_aranges 000003d8  00000000  00000000  00018b10  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_line   0000269c  00000000  00000000  00018ee8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_str    00000f11  00000000  00000000  0001b584  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .comment      0000003d  00000000  00000000  0001c495  2**0
                  CONTENTS, READONLY
 10 .debug_frame  00000ad8  00000000  00000000  0001c4d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000777  00000000  00000000  0001cfac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_rnglists 00000022  00000000  00000000  0001d723  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81003444 l    d  .rodata	00000000 .rodata
81003480 l    d  .data	00000000 .data
81003ce0 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
810000be l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81000476 l       .text	00000000 L5
810004ae l       .text	00000000 L15
81000480 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 findfp.c
810004b9 l     F .text	000000ad std
81000566 l     F .text	0000001b stdin_init
81000581 l     F .text	0000001b stdout_init
8100059c l     F .text	0000001b stderr_init
81003ce0 l     O .bss	00000004 __sfp_recursive_mutex
81003ce4 l     O .bss	00000004 __sinit_recursive_mutex
8100085f l     F .text	0000000a __fp_lock
81000869 l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
81003480 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 mallocr.c
81000e2c l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
8100197d l       .text	00000000 L20
81001934 l       .text	00000000 L5
8100197a l       .text	00000000 L15
81001940 l       .text	00000000 L8
81001961 l       .text	00000000 L9
81001970 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 mlock.c
81003d48 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
81003401 g     F .text	00000040 _isatty_r
81003227 g     F .text	00000037 cleanup_glue
8100034e g     F .text	000000d6 _puts_r
8100301b g     F .text	00000046 _lseek_r
810001d7 g     F .text	0000001f yield
810024b4 g     F .text	0000004a __sseek
810007ae g     F .text	00000099 __sinit
810005b7 g     F .text	0000006f __sfmoreglue
81001aeb g     F .text	00000006 __malloc_unlock
810019d0 g       .text	00000000 memmove
81000794 g     F .text	0000001a _cleanup
810033be g     F .text	00000043 _fstat_r
81003d4c g     O .bss	00000004 errno
8100244f g     F .text	0000000a __seofread
810001a6 g     F .text	00000031 execve
8100013c g     F .text	0000001f getpid
81001988 g       .text	00000000 memcpy
81000773 g     F .text	00000021 _cleanup_r
81000424 g     F .text	0000001c puts
810002d9 g     F .text	00000025 isatty
81003d00 g     O .bss	00000004 __malloc_top_pad
81003ce0 g       .bss	00000000 __bss_start__
810008bb g     F .text	0000049e __sfvwrite_r
810023cb g     F .text	00000040 _sbrk_r
810031e1 g     F .text	00000046 _read_r
81002704 g     F .text	00000107 _fclose_r
81002aa6 g     F .text	00000039 fflush
81003d04 g     O .bss	00000004 __malloc_max_sbrked_mem
810002a8 g     F .text	00000031 lseek
81003468 g     O .rodata	00000004 _global_impure_ptr
81001af1 g     F .text	000008da _realloc_r
81000873 g     F .text	00000024 __fp_lock_all
8100325e g     F .text	00000160 _reclaim_reent
81000252 g     F .text	00000031 write
810002fe g     F .text	0000002b fstat
81000847 g     F .text	00000006 __sfp_lock_acquire
810018f0 g       .text	00000000 memchr
81003d50 g       .bss	00000000 __bss_end__
81002adf g     F .text	000003db _free_r
81003ccc g     O .data	00000004 __malloc_sbrk_base
81000090 g       .text	00000000 _start
81000221 g     F .text	00000031 read
81003d20 g     O .bss	00000028 __malloc_current_mallinfo
810026c4 g     F .text	00000040 _close_r
81000186 g     F .text	00000020 fork
81002569 g     F .text	0000015b __swsetup_r
81000626 g     F .text	0000014d __sfp
810038c0 g     O .data	00000408 __malloc_av_
81000859 g     F .text	00000006 __sinit_lock_release
8100240b g     F .text	00000044 __sread
81001ae5 g     F .text	00000006 __malloc_lock
81000329 g     F .text	00000025 sbrk
81002a4e g     F .text	00000058 _fflush_r
810000a0 g     F .text	0000001e cstart
81001a5d g       .text	00000000 memset
81000000 g     F .text	00000090 main
81003d08 g     O .bss	00000004 __malloc_max_total_mem
810024fe g     F .text	00000025 __sclose
8100280b g     F .text	0000001d fclose
810010bf g     F .text	00000822 _malloc_r
81000d59 g     F .text	00000068 _fwalk
81002eba g     F .text	00000161 _malloc_trim_r
81002523 g     F .text	00000046 _write_r
810038a4 g     O .data	00000004 _impure_ptr
81002828 g     F .text	00000226 __sflush_r
81000897 g     F .text	00000024 __fp_unlock_all
8100015b g     F .text	0000002b print_msg
8100314e g     F .text	00000093 __swhatbuf_r
81002459 g     F .text	0000005b __swrite
81003cc8 g     O .data	00000004 __malloc_trim_threshold
81000dc1 g     F .text	0000006b _fwalk_reent
8100084d g     F .text	00000006 __sfp_lock_release
81003061 g     F .text	000000ed __smakebuf_r
81000440 g       .text	00000000 strlen
810001f6 g     F .text	0000002b open
8100010a g     F .text	00000032 msleep
81000283 g     F .text	00000025 close
81000853 g     F .text	00000006 __sinit_lock_acquire



Disassembly of section .text:

81000000 <main>:
 * @LastEditTime: 2023-05-27 10:04:05
 */
#include "lib_syscall.h"
#include <stdio.h>

int main (int argc, char **argv) {
81000000:	f3 0f 1e fb          	endbr32 
81000004:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000008:	83 e4 f0             	and    $0xfffffff0,%esp
8100000b:	ff 71 fc             	pushl  -0x4(%ecx)
8100000e:	55                   	push   %ebp
8100000f:	89 e5                	mov    %esp,%ebp
81000011:	53                   	push   %ebx
81000012:	51                   	push   %ecx
81000013:	83 ec 10             	sub    $0x10,%esp
81000016:	89 cb                	mov    %ecx,%ebx

    printf("Hello from shell\n");
81000018:	83 ec 0c             	sub    $0xc,%esp
8100001b:	68 44 34 00 81       	push   $0x81003444
81000020:	e8 ff 03 00 00       	call   81000424 <puts>
81000025:	83 c4 10             	add    $0x10,%esp
    
    for (int i = 0; i < argc; i++) {
81000028:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100002f:	eb 26                	jmp    81000057 <main+0x57>
        print_msg("arg: %s", (int)argv[i]);
81000031:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000034:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100003b:	8b 43 04             	mov    0x4(%ebx),%eax
8100003e:	01 d0                	add    %edx,%eax
81000040:	8b 00                	mov    (%eax),%eax
81000042:	83 ec 08             	sub    $0x8,%esp
81000045:	50                   	push   %eax
81000046:	68 55 34 00 81       	push   $0x81003455
8100004b:	e8 0b 01 00 00       	call   8100015b <print_msg>
81000050:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < argc; i++) {
81000053:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81000057:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100005a:	3b 03                	cmp    (%ebx),%eax
8100005c:	7c d3                	jl     81000031 <main+0x31>
    }
    
    // 创建一个自己的副本
    fork();
8100005e:	e8 23 01 00 00       	call   81000186 <fork>

    yield();
81000063:	e8 6f 01 00 00       	call   810001d7 <yield>

    for (;;) {
        print_msg("pid=%d", getpid());
81000068:	e8 cf 00 00 00       	call   8100013c <getpid>
8100006d:	83 ec 08             	sub    $0x8,%esp
81000070:	50                   	push   %eax
81000071:	68 5d 34 00 81       	push   $0x8100345d
81000076:	e8 e0 00 00 00       	call   8100015b <print_msg>
8100007b:	83 c4 10             	add    $0x10,%esp
        msleep(1000);
8100007e:	83 ec 0c             	sub    $0xc,%esp
81000081:	68 e8 03 00 00       	push   $0x3e8
81000086:	e8 7f 00 00 00       	call   8100010a <msleep>
8100008b:	83 c4 10             	add    $0x10,%esp
        print_msg("pid=%d", getpid());
8100008e:	eb d8                	jmp    81000068 <main+0x68>

81000090 <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
81000090:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
81000093:	8e d8                	mov    %eax,%ds
    mov %ax, %es
81000095:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000097:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
81000099:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
8100009b:	e9 00 00 00 00       	jmp    810000a0 <cstart>

810000a0 <cstart>:
int main (int argc, char ** argv);


extern uint8_t __bss_start__[], __bss_end__[];

/**
810000a0:	f3 0f 1e fb          	endbr32 
810000a4:	55                   	push   %ebp
810000a5:	89 e5                	mov    %esp,%ebp
810000a7:	83 ec 08             	sub    $0x8,%esp
 * @brief 应用的初始化，C部分
 */
810000aa:	83 ec 08             	sub    $0x8,%esp
810000ad:	ff 75 0c             	pushl  0xc(%ebp)
810000b0:	ff 75 08             	pushl  0x8(%ebp)
810000b3:	e8 48 ff ff ff       	call   81000000 <main>
810000b8:	83 c4 10             	add    $0x10,%esp
void cstart (int argc, char ** argv) {
810000bb:	90                   	nop
810000bc:	c9                   	leave  
810000bd:	c3                   	ret    

810000be <sys_call>:
 * 通用系统调用接口，用于执行系统调用
 * @param {syscall_args_t *} args 系统调用参数
 * @return {*} 返回执行结果
 */
static inline int sys_call(syscall_args_t *args)
{
810000be:	55                   	push   %ebp
810000bf:	89 e5                	mov    %esp,%ebp
810000c1:	57                   	push   %edi
810000c2:	56                   	push   %esi
810000c3:	53                   	push   %ebx
810000c4:	83 ec 10             	sub    $0x10,%esp

    // 使用调用门的方式进行系统调用
    // 偏移量为0; SELECTOR_SYSCALL是一个常量，它的值为0x40，表示选择了内核的syscall段,
    // | 0是为了清除低三位，保持段选择器的格式正确。
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0};
810000c7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
810000ce:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
        "push %[arg0]\n\t"
        "push %[id]\n\t"
        "lcalll *(%[gate])\n\n" // 调用系统调用门
        : "=a"(ret)             // 将返回值存入ret中
        // 将参数和系统调用门的地址传递给汇编语句
        : [arg3] "r"(args->arg3),
810000d5:	8b 45 08             	mov    0x8(%ebp),%eax
810000d8:	8b 40 10             	mov    0x10(%eax),%eax
          [arg2] "r"(args->arg2),
810000db:	8b 55 08             	mov    0x8(%ebp),%edx
810000de:	8b 52 0c             	mov    0xc(%edx),%edx
          [arg1] "r"(args->arg1),
810000e1:	8b 4d 08             	mov    0x8(%ebp),%ecx
810000e4:	8b 49 08             	mov    0x8(%ecx),%ecx
          [arg0] "r"(args->arg0),
810000e7:	8b 5d 08             	mov    0x8(%ebp),%ebx
810000ea:	8b 5b 04             	mov    0x4(%ebx),%ebx
          [id] "r"(args->id),
810000ed:	8b 75 08             	mov    0x8(%ebp),%esi
810000f0:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
810000f2:	8d 7d e8             	lea    -0x18(%ebp),%edi
810000f5:	50                   	push   %eax
810000f6:	52                   	push   %edx
810000f7:	51                   	push   %ecx
810000f8:	53                   	push   %ebx
810000f9:	56                   	push   %esi
810000fa:	ff 1f                	lcall  *(%edi)
810000fc:	89 45 f0             	mov    %eax,-0x10(%ebp)
          [gate] "r"(sys_gate_addr));
    return ret; // 返回执行结果
810000ff:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000102:	83 c4 10             	add    $0x10,%esp
81000105:	5b                   	pop    %ebx
81000106:	5e                   	pop    %esi
81000107:	5f                   	pop    %edi
81000108:	5d                   	pop    %ebp
81000109:	c3                   	ret    

8100010a <msleep>:
 * 休眠函数,调用系统的 sys_sleep函数
 * @param ms 休眠时间，单位为毫秒
 * @return 返回休眠的剩余时间，单位为毫秒
 */
int msleep(int ms)
{
8100010a:	f3 0f 1e fb          	endbr32 
8100010e:	55                   	push   %ebp
8100010f:	89 e5                	mov    %esp,%ebp
81000111:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0)
81000114:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000118:	7f 07                	jg     81000121 <msleep+0x17>
    {
        return 0;
8100011a:	b8 00 00 00 00       	mov    $0x0,%eax
8100011f:	eb 19                	jmp    8100013a <msleep+0x30>
    }

    syscall_args_t args;    // 创建一个系统调用参数结构体
    args.id = SYS_msleep;   // 设置系统调用号为SYS_msleep
81000121:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;         // 设置休眠时间为第一个参数
81000128:	8b 45 08             	mov    0x8(%ebp),%eax
8100012b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args); // 调用sys_call函数，执行系统调用
8100012e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000131:	50                   	push   %eax
81000132:	e8 87 ff ff ff       	call   810000be <sys_call>
81000137:	83 c4 04             	add    $0x4,%esp
}
8100013a:	c9                   	leave  
8100013b:	c3                   	ret    

8100013c <getpid>:
/**
 * 获取当前进程的pid
 * @return {*}
 */
int getpid(void)
{
8100013c:	f3 0f 1e fb          	endbr32 
81000140:	55                   	push   %ebp
81000141:	89 e5                	mov    %esp,%ebp
81000143:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;    // 创建一个系统调用参数结构体
    args.id = SYS_getpid;   // 设置系统调用号为SYS_msleep
81000146:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args); // 调用sys_call函数，执行系统调用
8100014d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000150:	50                   	push   %eax
81000151:	e8 68 ff ff ff       	call   810000be <sys_call>
81000156:	83 c4 04             	add    $0x4,%esp
}
81000159:	c9                   	leave  
8100015a:	c3                   	ret    

8100015b <print_msg>:

// 临时使用的打印函数，只允许传递两个参数 后续使用文件系统
int print_msg(char * fmt, int arg) {
8100015b:	f3 0f 1e fb          	endbr32 
8100015f:	55                   	push   %ebp
81000160:	89 e5                	mov    %esp,%ebp
81000162:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000165:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
8100016c:	8b 45 08             	mov    0x8(%ebp),%eax
8100016f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000172:	8b 45 0c             	mov    0xc(%ebp),%eax
81000175:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000178:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100017b:	50                   	push   %eax
8100017c:	e8 3d ff ff ff       	call   810000be <sys_call>
81000181:	83 c4 04             	add    $0x4,%esp
}
81000184:	c9                   	leave  
81000185:	c3                   	ret    

81000186 <fork>:
int fork()
{
81000186:	f3 0f 1e fb          	endbr32 
8100018a:	55                   	push   %ebp
8100018b:	89 e5                	mov    %esp,%ebp
8100018d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;    
81000190:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    sys_call(&args);
81000197:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100019a:	50                   	push   %eax
8100019b:	e8 1e ff ff ff       	call   810000be <sys_call>
810001a0:	83 c4 04             	add    $0x4,%esp
}
810001a3:	90                   	nop
810001a4:	c9                   	leave  
810001a5:	c3                   	ret    

810001a6 <execve>:
 * @param {char} *name 要执行的程序的路径名。
 * @param {char} *  要执行的程序的命令行参数
 * @param {char} *  要执行的程序的环境变量
 * @return {*}
 */
int execve(const char *filename, char * const *argv, char * const *env) {
810001a6:	f3 0f 1e fb          	endbr32 
810001aa:	55                   	push   %ebp
810001ab:	89 e5                	mov    %esp,%ebp
810001ad:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execv;
810001b0:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)filename;
810001b7:	8b 45 08             	mov    0x8(%ebp),%eax
810001ba:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
810001bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810001c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
810001c3:	8b 45 10             	mov    0x10(%ebp),%eax
810001c6:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
810001c9:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001cc:	50                   	push   %eax
810001cd:	e8 ec fe ff ff       	call   810000be <sys_call>
810001d2:	83 c4 04             	add    $0x4,%esp
}
810001d5:	c9                   	leave  
810001d6:	c3                   	ret    

810001d7 <yield>:

int yield (void) {
810001d7:	f3 0f 1e fb          	endbr32 
810001db:	55                   	push   %ebp
810001dc:	89 e5                	mov    %esp,%ebp
810001de:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
810001e1:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
810001e8:	8d 45 ec             	lea    -0x14(%ebp),%eax
810001eb:	50                   	push   %eax
810001ec:	e8 cd fe ff ff       	call   810000be <sys_call>
810001f1:	83 c4 04             	add    $0x4,%esp
}
810001f4:	c9                   	leave  
810001f5:	c3                   	ret    

810001f6 <open>:
int open(const char *name, int flags, ...) {
810001f6:	f3 0f 1e fb          	endbr32 
810001fa:	55                   	push   %ebp
810001fb:	89 e5                	mov    %esp,%ebp
810001fd:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
81000200:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000207:	8b 45 08             	mov    0x8(%ebp),%eax
8100020a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
8100020d:	8b 45 0c             	mov    0xc(%ebp),%eax
81000210:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000213:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000216:	50                   	push   %eax
81000217:	e8 a2 fe ff ff       	call   810000be <sys_call>
8100021c:	83 c4 04             	add    $0x4,%esp
}
8100021f:	c9                   	leave  
81000220:	c3                   	ret    

81000221 <read>:

int read(int file, char *ptr, int len) {
81000221:	f3 0f 1e fb          	endbr32 
81000225:	55                   	push   %ebp
81000226:	89 e5                	mov    %esp,%ebp
81000228:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
8100022b:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
81000232:	8b 45 08             	mov    0x8(%ebp),%eax
81000235:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000238:	8b 45 0c             	mov    0xc(%ebp),%eax
8100023b:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100023e:	8b 45 10             	mov    0x10(%ebp),%eax
81000241:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000244:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000247:	50                   	push   %eax
81000248:	e8 71 fe ff ff       	call   810000be <sys_call>
8100024d:	83 c4 04             	add    $0x4,%esp
}
81000250:	c9                   	leave  
81000251:	c3                   	ret    

81000252 <write>:

int write(int file, char *ptr, int len) {
81000252:	f3 0f 1e fb          	endbr32 
81000256:	55                   	push   %ebp
81000257:	89 e5                	mov    %esp,%ebp
81000259:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
8100025c:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
81000263:	8b 45 08             	mov    0x8(%ebp),%eax
81000266:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000269:	8b 45 0c             	mov    0xc(%ebp),%eax
8100026c:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
8100026f:	8b 45 10             	mov    0x10(%ebp),%eax
81000272:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000275:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000278:	50                   	push   %eax
81000279:	e8 40 fe ff ff       	call   810000be <sys_call>
8100027e:	83 c4 04             	add    $0x4,%esp
}
81000281:	c9                   	leave  
81000282:	c3                   	ret    

81000283 <close>:

int close(int file) {
81000283:	f3 0f 1e fb          	endbr32 
81000287:	55                   	push   %ebp
81000288:	89 e5                	mov    %esp,%ebp
8100028a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
8100028d:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000294:	8b 45 08             	mov    0x8(%ebp),%eax
81000297:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
8100029a:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100029d:	50                   	push   %eax
8100029e:	e8 1b fe ff ff       	call   810000be <sys_call>
810002a3:	83 c4 04             	add    $0x4,%esp
}
810002a6:	c9                   	leave  
810002a7:	c3                   	ret    

810002a8 <lseek>:

int lseek(int file, int ptr, int dir) {
810002a8:	f3 0f 1e fb          	endbr32 
810002ac:	55                   	push   %ebp
810002ad:	89 e5                	mov    %esp,%ebp
810002af:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
810002b2:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
810002b9:	8b 45 08             	mov    0x8(%ebp),%eax
810002bc:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
810002bf:	8b 45 0c             	mov    0xc(%ebp),%eax
810002c2:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
810002c5:	8b 45 10             	mov    0x10(%ebp),%eax
810002c8:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
810002cb:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002ce:	50                   	push   %eax
810002cf:	e8 ea fd ff ff       	call   810000be <sys_call>
810002d4:	83 c4 04             	add    $0x4,%esp
}
810002d7:	c9                   	leave  
810002d8:	c3                   	ret    

810002d9 <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file) {
810002d9:	f3 0f 1e fb          	endbr32 
810002dd:	55                   	push   %ebp
810002de:	89 e5                	mov    %esp,%ebp
810002e0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
810002e3:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
810002ea:	8b 45 08             	mov    0x8(%ebp),%eax
810002ed:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
810002f0:	8d 45 ec             	lea    -0x14(%ebp),%eax
810002f3:	50                   	push   %eax
810002f4:	e8 c5 fd ff ff       	call   810000be <sys_call>
810002f9:	83 c4 04             	add    $0x4,%esp
}
810002fc:	c9                   	leave  
810002fd:	c3                   	ret    

810002fe <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st) {
810002fe:	f3 0f 1e fb          	endbr32 
81000302:	55                   	push   %ebp
81000303:	89 e5                	mov    %esp,%ebp
81000305:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000308:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
8100030f:	8b 45 08             	mov    0x8(%ebp),%eax
81000312:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000315:	8b 45 0c             	mov    0xc(%ebp),%eax
81000318:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
8100031b:	8d 45 ec             	lea    -0x14(%ebp),%eax
8100031e:	50                   	push   %eax
8100031f:	e8 9a fd ff ff       	call   810000be <sys_call>
81000324:	83 c4 04             	add    $0x4,%esp
}
81000327:	c9                   	leave  
81000328:	c3                   	ret    

81000329 <sbrk>:


void * sbrk(ptrdiff_t incr) {
81000329:	f3 0f 1e fb          	endbr32 
8100032d:	55                   	push   %ebp
8100032e:	89 e5                	mov    %esp,%ebp
81000330:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000333:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
8100033a:	8b 45 08             	mov    0x8(%ebp),%eax
8100033d:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000340:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000343:	50                   	push   %eax
81000344:	e8 75 fd ff ff       	call   810000be <sys_call>
81000349:	83 c4 04             	add    $0x4,%esp
}
8100034c:	c9                   	leave  
8100034d:	c3                   	ret    

8100034e <_puts_r>:
8100034e:	55                   	push   %ebp
8100034f:	89 e5                	mov    %esp,%ebp
81000351:	83 ec 38             	sub    $0x38,%esp
81000354:	83 ec 0c             	sub    $0xc,%esp
81000357:	ff 75 0c             	pushl  0xc(%ebp)
8100035a:	e8 e1 00 00 00       	call   81000440 <strlen>
8100035f:	83 c4 10             	add    $0x10,%esp
81000362:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000365:	8b 45 0c             	mov    0xc(%ebp),%eax
81000368:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100036b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100036e:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000371:	c7 45 d4 64 34 00 81 	movl   $0x81003464,-0x2c(%ebp)
81000378:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
8100037f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000382:	83 c0 01             	add    $0x1,%eax
81000385:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81000388:	8d 45 cc             	lea    -0x34(%ebp),%eax
8100038b:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100038e:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
81000395:	8b 45 08             	mov    0x8(%ebp),%eax
81000398:	8b 40 08             	mov    0x8(%eax),%eax
8100039b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100039e:	8b 45 08             	mov    0x8(%ebp),%eax
810003a1:	89 45 ec             	mov    %eax,-0x14(%ebp)
810003a4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810003a8:	74 18                	je     810003c2 <_puts_r+0x74>
810003aa:	8b 45 ec             	mov    -0x14(%ebp),%eax
810003ad:	8b 40 38             	mov    0x38(%eax),%eax
810003b0:	85 c0                	test   %eax,%eax
810003b2:	75 0e                	jne    810003c2 <_puts_r+0x74>
810003b4:	83 ec 0c             	sub    $0xc,%esp
810003b7:	ff 75 ec             	pushl  -0x14(%ebp)
810003ba:	e8 ef 03 00 00       	call   810007ae <__sinit>
810003bf:	83 c4 10             	add    $0x10,%esp
810003c2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003c5:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003c9:	98                   	cwtl   
810003ca:	25 00 20 00 00       	and    $0x2000,%eax
810003cf:	85 c0                	test   %eax,%eax
810003d1:	75 24                	jne    810003f7 <_puts_r+0xa9>
810003d3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003d6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810003da:	80 cc 20             	or     $0x20,%ah
810003dd:	89 c2                	mov    %eax,%edx
810003df:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003e2:	66 89 50 0c          	mov    %dx,0xc(%eax)
810003e6:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003e9:	8b 40 64             	mov    0x64(%eax),%eax
810003ec:	80 e4 df             	and    $0xdf,%ah
810003ef:	89 c2                	mov    %eax,%edx
810003f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
810003f4:	89 50 64             	mov    %edx,0x64(%eax)
810003f7:	83 ec 04             	sub    $0x4,%esp
810003fa:	8d 45 dc             	lea    -0x24(%ebp),%eax
810003fd:	50                   	push   %eax
810003fe:	ff 75 f0             	pushl  -0x10(%ebp)
81000401:	ff 75 08             	pushl  0x8(%ebp)
81000404:	e8 b2 04 00 00       	call   810008bb <__sfvwrite_r>
81000409:	83 c4 10             	add    $0x10,%esp
8100040c:	85 c0                	test   %eax,%eax
8100040e:	74 07                	je     81000417 <_puts_r+0xc9>
81000410:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000415:	eb 05                	jmp    8100041c <_puts_r+0xce>
81000417:	b8 0a 00 00 00       	mov    $0xa,%eax
8100041c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100041f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000422:	c9                   	leave  
81000423:	c3                   	ret    

81000424 <puts>:
81000424:	55                   	push   %ebp
81000425:	89 e5                	mov    %esp,%ebp
81000427:	83 ec 08             	sub    $0x8,%esp
8100042a:	a1 a4 38 00 81       	mov    0x810038a4,%eax
8100042f:	83 ec 08             	sub    $0x8,%esp
81000432:	ff 75 08             	pushl  0x8(%ebp)
81000435:	50                   	push   %eax
81000436:	e8 13 ff ff ff       	call   8100034e <_puts_r>
8100043b:	83 c4 10             	add    $0x10,%esp
8100043e:	c9                   	leave  
8100043f:	c3                   	ret    

81000440 <strlen>:
81000440:	55                   	push   %ebp
81000441:	89 e5                	mov    %esp,%ebp
81000443:	57                   	push   %edi
81000444:	8b 55 08             	mov    0x8(%ebp),%edx
81000447:	89 d7                	mov    %edx,%edi
81000449:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100044f:	74 25                	je     81000476 <L5>
81000451:	8a 0f                	mov    (%edi),%cl
81000453:	47                   	inc    %edi
81000454:	84 c9                	test   %cl,%cl
81000456:	74 56                	je     810004ae <L15>
81000458:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100045e:	74 16                	je     81000476 <L5>
81000460:	8a 0f                	mov    (%edi),%cl
81000462:	47                   	inc    %edi
81000463:	84 c9                	test   %cl,%cl
81000465:	74 47                	je     810004ae <L15>
81000467:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100046d:	74 07                	je     81000476 <L5>
8100046f:	8a 0f                	mov    (%edi),%cl
81000471:	47                   	inc    %edi
81000472:	84 c9                	test   %cl,%cl
81000474:	74 38                	je     810004ae <L15>

81000476 <L5>:
81000476:	83 ef 04             	sub    $0x4,%edi
81000479:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81000480 <L10>:
81000480:	83 c7 04             	add    $0x4,%edi
81000483:	8b 0f                	mov    (%edi),%ecx
81000485:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
8100048b:	f7 d1                	not    %ecx
8100048d:	21 c8                	and    %ecx,%eax
8100048f:	a9 80 80 80 80       	test   $0x80808080,%eax
81000494:	74 ea                	je     81000480 <L10>
81000496:	f7 d1                	not    %ecx
81000498:	47                   	inc    %edi
81000499:	84 c9                	test   %cl,%cl
8100049b:	74 11                	je     810004ae <L15>
8100049d:	47                   	inc    %edi
8100049e:	c1 e9 08             	shr    $0x8,%ecx
810004a1:	84 c9                	test   %cl,%cl
810004a3:	74 09                	je     810004ae <L15>
810004a5:	47                   	inc    %edi
810004a6:	c1 e9 08             	shr    $0x8,%ecx
810004a9:	84 c9                	test   %cl,%cl
810004ab:	74 01                	je     810004ae <L15>
810004ad:	47                   	inc    %edi

810004ae <L15>:
810004ae:	29 d7                	sub    %edx,%edi
810004b0:	8d 47 ff             	lea    -0x1(%edi),%eax
810004b3:	8d 65 fc             	lea    -0x4(%ebp),%esp
810004b6:	5f                   	pop    %edi
810004b7:	c9                   	leave  
810004b8:	c3                   	ret    

810004b9 <std>:
810004b9:	55                   	push   %ebp
810004ba:	89 e5                	mov    %esp,%ebp
810004bc:	83 ec 08             	sub    $0x8,%esp
810004bf:	8b 45 08             	mov    0x8(%ebp),%eax
810004c2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810004c8:	8b 45 08             	mov    0x8(%ebp),%eax
810004cb:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810004d2:	8b 45 08             	mov    0x8(%ebp),%eax
810004d5:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810004dc:	8b 45 0c             	mov    0xc(%ebp),%eax
810004df:	89 c2                	mov    %eax,%edx
810004e1:	8b 45 08             	mov    0x8(%ebp),%eax
810004e4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810004e8:	8b 45 08             	mov    0x8(%ebp),%eax
810004eb:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810004f2:	8b 45 10             	mov    0x10(%ebp),%eax
810004f5:	89 c2                	mov    %eax,%edx
810004f7:	8b 45 08             	mov    0x8(%ebp),%eax
810004fa:	66 89 50 0e          	mov    %dx,0xe(%eax)
810004fe:	8b 45 08             	mov    0x8(%ebp),%eax
81000501:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81000508:	8b 45 08             	mov    0x8(%ebp),%eax
8100050b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000512:	8b 45 08             	mov    0x8(%ebp),%eax
81000515:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
8100051c:	8b 45 08             	mov    0x8(%ebp),%eax
8100051f:	83 c0 5c             	add    $0x5c,%eax
81000522:	83 ec 04             	sub    $0x4,%esp
81000525:	6a 08                	push   $0x8
81000527:	6a 00                	push   $0x0
81000529:	50                   	push   %eax
8100052a:	e8 2e 15 00 00       	call   81001a5d <memset>
8100052f:	83 c4 10             	add    $0x10,%esp
81000532:	8b 45 08             	mov    0x8(%ebp),%eax
81000535:	8b 55 08             	mov    0x8(%ebp),%edx
81000538:	89 50 1c             	mov    %edx,0x1c(%eax)
8100053b:	8b 45 08             	mov    0x8(%ebp),%eax
8100053e:	c7 40 20 0b 24 00 81 	movl   $0x8100240b,0x20(%eax)
81000545:	8b 45 08             	mov    0x8(%ebp),%eax
81000548:	c7 40 24 59 24 00 81 	movl   $0x81002459,0x24(%eax)
8100054f:	8b 45 08             	mov    0x8(%ebp),%eax
81000552:	c7 40 28 b4 24 00 81 	movl   $0x810024b4,0x28(%eax)
81000559:	8b 45 08             	mov    0x8(%ebp),%eax
8100055c:	c7 40 2c fe 24 00 81 	movl   $0x810024fe,0x2c(%eax)
81000563:	90                   	nop
81000564:	c9                   	leave  
81000565:	c3                   	ret    

81000566 <stdin_init>:
81000566:	55                   	push   %ebp
81000567:	89 e5                	mov    %esp,%ebp
81000569:	83 ec 08             	sub    $0x8,%esp
8100056c:	83 ec 04             	sub    $0x4,%esp
8100056f:	6a 00                	push   $0x0
81000571:	6a 04                	push   $0x4
81000573:	ff 75 08             	pushl  0x8(%ebp)
81000576:	e8 3e ff ff ff       	call   810004b9 <std>
8100057b:	83 c4 10             	add    $0x10,%esp
8100057e:	90                   	nop
8100057f:	c9                   	leave  
81000580:	c3                   	ret    

81000581 <stdout_init>:
81000581:	55                   	push   %ebp
81000582:	89 e5                	mov    %esp,%ebp
81000584:	83 ec 08             	sub    $0x8,%esp
81000587:	83 ec 04             	sub    $0x4,%esp
8100058a:	6a 01                	push   $0x1
8100058c:	6a 09                	push   $0x9
8100058e:	ff 75 08             	pushl  0x8(%ebp)
81000591:	e8 23 ff ff ff       	call   810004b9 <std>
81000596:	83 c4 10             	add    $0x10,%esp
81000599:	90                   	nop
8100059a:	c9                   	leave  
8100059b:	c3                   	ret    

8100059c <stderr_init>:
8100059c:	55                   	push   %ebp
8100059d:	89 e5                	mov    %esp,%ebp
8100059f:	83 ec 08             	sub    $0x8,%esp
810005a2:	83 ec 04             	sub    $0x4,%esp
810005a5:	6a 02                	push   $0x2
810005a7:	6a 12                	push   $0x12
810005a9:	ff 75 08             	pushl  0x8(%ebp)
810005ac:	e8 08 ff ff ff       	call   810004b9 <std>
810005b1:	83 c4 10             	add    $0x10,%esp
810005b4:	90                   	nop
810005b5:	c9                   	leave  
810005b6:	c3                   	ret    

810005b7 <__sfmoreglue>:
810005b7:	55                   	push   %ebp
810005b8:	89 e5                	mov    %esp,%ebp
810005ba:	53                   	push   %ebx
810005bb:	83 ec 14             	sub    $0x14,%esp
810005be:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810005c1:	8d 43 ff             	lea    -0x1(%ebx),%eax
810005c4:	6b c0 68             	imul   $0x68,%eax,%eax
810005c7:	83 c0 74             	add    $0x74,%eax
810005ca:	83 ec 08             	sub    $0x8,%esp
810005cd:	50                   	push   %eax
810005ce:	ff 75 08             	pushl  0x8(%ebp)
810005d1:	e8 e9 0a 00 00       	call   810010bf <_malloc_r>
810005d6:	83 c4 10             	add    $0x10,%esp
810005d9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810005dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810005e0:	75 07                	jne    810005e9 <__sfmoreglue+0x32>
810005e2:	b8 00 00 00 00       	mov    $0x0,%eax
810005e7:	eb 38                	jmp    81000621 <__sfmoreglue+0x6a>
810005e9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005ec:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810005f2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005f5:	89 58 04             	mov    %ebx,0x4(%eax)
810005f8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810005fb:	8d 50 0c             	lea    0xc(%eax),%edx
810005fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000601:	89 50 08             	mov    %edx,0x8(%eax)
81000604:	89 d8                	mov    %ebx,%eax
81000606:	6b c0 68             	imul   $0x68,%eax,%eax
81000609:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100060c:	83 c2 0c             	add    $0xc,%edx
8100060f:	83 ec 04             	sub    $0x4,%esp
81000612:	50                   	push   %eax
81000613:	6a 00                	push   $0x0
81000615:	52                   	push   %edx
81000616:	e8 42 14 00 00       	call   81001a5d <memset>
8100061b:	83 c4 10             	add    $0x10,%esp
8100061e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000621:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81000624:	c9                   	leave  
81000625:	c3                   	ret    

81000626 <__sfp>:
81000626:	55                   	push   %ebp
81000627:	89 e5                	mov    %esp,%ebp
81000629:	83 ec 18             	sub    $0x18,%esp
8100062c:	e8 16 02 00 00       	call   81000847 <__sfp_lock_acquire>
81000631:	a1 68 34 00 81       	mov    0x81003468,%eax
81000636:	8b 40 38             	mov    0x38(%eax),%eax
81000639:	85 c0                	test   %eax,%eax
8100063b:	75 11                	jne    8100064e <__sfp+0x28>
8100063d:	a1 68 34 00 81       	mov    0x81003468,%eax
81000642:	83 ec 0c             	sub    $0xc,%esp
81000645:	50                   	push   %eax
81000646:	e8 63 01 00 00       	call   810007ae <__sinit>
8100064b:	83 c4 10             	add    $0x10,%esp
8100064e:	a1 68 34 00 81       	mov    0x81003468,%eax
81000653:	05 e0 02 00 00       	add    $0x2e0,%eax
81000658:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100065b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100065e:	8b 40 08             	mov    0x8(%eax),%eax
81000661:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000664:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000667:	8b 40 04             	mov    0x4(%eax),%eax
8100066a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100066d:	eb 10                	jmp    8100067f <__sfp+0x59>
8100066f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000672:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81000676:	66 85 c0             	test   %ax,%ax
81000679:	74 58                	je     810006d3 <__sfp+0xad>
8100067b:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
8100067f:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81000683:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000687:	79 e6                	jns    8100066f <__sfp+0x49>
81000689:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100068c:	8b 00                	mov    (%eax),%eax
8100068e:	85 c0                	test   %eax,%eax
81000690:	75 1e                	jne    810006b0 <__sfp+0x8a>
81000692:	83 ec 08             	sub    $0x8,%esp
81000695:	6a 04                	push   $0x4
81000697:	ff 75 08             	pushl  0x8(%ebp)
8100069a:	e8 18 ff ff ff       	call   810005b7 <__sfmoreglue>
8100069f:	83 c4 10             	add    $0x10,%esp
810006a2:	8b 55 ec             	mov    -0x14(%ebp),%edx
810006a5:	89 02                	mov    %eax,(%edx)
810006a7:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006aa:	8b 00                	mov    (%eax),%eax
810006ac:	85 c0                	test   %eax,%eax
810006ae:	74 0a                	je     810006ba <__sfp+0x94>
810006b0:	8b 45 ec             	mov    -0x14(%ebp),%eax
810006b3:	8b 00                	mov    (%eax),%eax
810006b5:	89 45 ec             	mov    %eax,-0x14(%ebp)
810006b8:	eb a1                	jmp    8100065b <__sfp+0x35>
810006ba:	90                   	nop
810006bb:	e8 8d 01 00 00       	call   8100084d <__sfp_lock_release>
810006c0:	8b 45 08             	mov    0x8(%ebp),%eax
810006c3:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810006c9:	b8 00 00 00 00       	mov    $0x0,%eax
810006ce:	e9 9e 00 00 00       	jmp    81000771 <__sfp+0x14b>
810006d3:	90                   	nop
810006d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006d7:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810006dd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e0:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810006e6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006e9:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
810006f0:	e8 58 01 00 00       	call   8100084d <__sfp_lock_release>
810006f5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810006f8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810006fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000701:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
81000708:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100070b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81000712:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000715:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100071c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100071f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81000726:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000729:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81000730:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000733:	83 c0 5c             	add    $0x5c,%eax
81000736:	83 ec 04             	sub    $0x4,%esp
81000739:	6a 08                	push   $0x8
8100073b:	6a 00                	push   $0x0
8100073d:	50                   	push   %eax
8100073e:	e8 1a 13 00 00       	call   81001a5d <memset>
81000743:	83 c4 10             	add    $0x10,%esp
81000746:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000749:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81000750:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000753:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
8100075a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100075d:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
81000764:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000767:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
8100076e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000771:	c9                   	leave  
81000772:	c3                   	ret    

81000773 <_cleanup_r>:
81000773:	55                   	push   %ebp
81000774:	89 e5                	mov    %esp,%ebp
81000776:	83 ec 18             	sub    $0x18,%esp
81000779:	c7 45 f4 04 27 00 81 	movl   $0x81002704,-0xc(%ebp)
81000780:	83 ec 08             	sub    $0x8,%esp
81000783:	ff 75 f4             	pushl  -0xc(%ebp)
81000786:	ff 75 08             	pushl  0x8(%ebp)
81000789:	e8 33 06 00 00       	call   81000dc1 <_fwalk_reent>
8100078e:	83 c4 10             	add    $0x10,%esp
81000791:	90                   	nop
81000792:	c9                   	leave  
81000793:	c3                   	ret    

81000794 <_cleanup>:
81000794:	55                   	push   %ebp
81000795:	89 e5                	mov    %esp,%ebp
81000797:	83 ec 08             	sub    $0x8,%esp
8100079a:	a1 68 34 00 81       	mov    0x81003468,%eax
8100079f:	83 ec 0c             	sub    $0xc,%esp
810007a2:	50                   	push   %eax
810007a3:	e8 cb ff ff ff       	call   81000773 <_cleanup_r>
810007a8:	83 c4 10             	add    $0x10,%esp
810007ab:	90                   	nop
810007ac:	c9                   	leave  
810007ad:	c3                   	ret    

810007ae <__sinit>:
810007ae:	55                   	push   %ebp
810007af:	89 e5                	mov    %esp,%ebp
810007b1:	83 ec 08             	sub    $0x8,%esp
810007b4:	e8 9a 00 00 00       	call   81000853 <__sinit_lock_acquire>
810007b9:	8b 45 08             	mov    0x8(%ebp),%eax
810007bc:	8b 40 38             	mov    0x38(%eax),%eax
810007bf:	85 c0                	test   %eax,%eax
810007c1:	74 07                	je     810007ca <__sinit+0x1c>
810007c3:	e8 91 00 00 00       	call   81000859 <__sinit_lock_release>
810007c8:	eb 7b                	jmp    81000845 <__sinit+0x97>
810007ca:	8b 45 08             	mov    0x8(%ebp),%eax
810007cd:	c7 40 3c 73 07 00 81 	movl   $0x81000773,0x3c(%eax)
810007d4:	8b 45 08             	mov    0x8(%ebp),%eax
810007d7:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810007de:	00 00 00 
810007e1:	8b 45 08             	mov    0x8(%ebp),%eax
810007e4:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
810007eb:	00 00 00 
810007ee:	8b 45 08             	mov    0x8(%ebp),%eax
810007f1:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
810007f7:	8b 45 08             	mov    0x8(%ebp),%eax
810007fa:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81000800:	8b 45 08             	mov    0x8(%ebp),%eax
81000803:	8b 40 04             	mov    0x4(%eax),%eax
81000806:	83 ec 0c             	sub    $0xc,%esp
81000809:	50                   	push   %eax
8100080a:	e8 57 fd ff ff       	call   81000566 <stdin_init>
8100080f:	83 c4 10             	add    $0x10,%esp
81000812:	8b 45 08             	mov    0x8(%ebp),%eax
81000815:	8b 40 08             	mov    0x8(%eax),%eax
81000818:	83 ec 0c             	sub    $0xc,%esp
8100081b:	50                   	push   %eax
8100081c:	e8 60 fd ff ff       	call   81000581 <stdout_init>
81000821:	83 c4 10             	add    $0x10,%esp
81000824:	8b 45 08             	mov    0x8(%ebp),%eax
81000827:	8b 40 0c             	mov    0xc(%eax),%eax
8100082a:	83 ec 0c             	sub    $0xc,%esp
8100082d:	50                   	push   %eax
8100082e:	e8 69 fd ff ff       	call   8100059c <stderr_init>
81000833:	83 c4 10             	add    $0x10,%esp
81000836:	8b 45 08             	mov    0x8(%ebp),%eax
81000839:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81000840:	e8 14 00 00 00       	call   81000859 <__sinit_lock_release>
81000845:	c9                   	leave  
81000846:	c3                   	ret    

81000847 <__sfp_lock_acquire>:
81000847:	55                   	push   %ebp
81000848:	89 e5                	mov    %esp,%ebp
8100084a:	90                   	nop
8100084b:	5d                   	pop    %ebp
8100084c:	c3                   	ret    

8100084d <__sfp_lock_release>:
8100084d:	55                   	push   %ebp
8100084e:	89 e5                	mov    %esp,%ebp
81000850:	90                   	nop
81000851:	5d                   	pop    %ebp
81000852:	c3                   	ret    

81000853 <__sinit_lock_acquire>:
81000853:	55                   	push   %ebp
81000854:	89 e5                	mov    %esp,%ebp
81000856:	90                   	nop
81000857:	5d                   	pop    %ebp
81000858:	c3                   	ret    

81000859 <__sinit_lock_release>:
81000859:	55                   	push   %ebp
8100085a:	89 e5                	mov    %esp,%ebp
8100085c:	90                   	nop
8100085d:	5d                   	pop    %ebp
8100085e:	c3                   	ret    

8100085f <__fp_lock>:
8100085f:	55                   	push   %ebp
81000860:	89 e5                	mov    %esp,%ebp
81000862:	b8 00 00 00 00       	mov    $0x0,%eax
81000867:	5d                   	pop    %ebp
81000868:	c3                   	ret    

81000869 <__fp_unlock>:
81000869:	55                   	push   %ebp
8100086a:	89 e5                	mov    %esp,%ebp
8100086c:	b8 00 00 00 00       	mov    $0x0,%eax
81000871:	5d                   	pop    %ebp
81000872:	c3                   	ret    

81000873 <__fp_lock_all>:
81000873:	55                   	push   %ebp
81000874:	89 e5                	mov    %esp,%ebp
81000876:	83 ec 08             	sub    $0x8,%esp
81000879:	e8 c9 ff ff ff       	call   81000847 <__sfp_lock_acquire>
8100087e:	a1 a4 38 00 81       	mov    0x810038a4,%eax
81000883:	83 ec 08             	sub    $0x8,%esp
81000886:	68 5f 08 00 81       	push   $0x8100085f
8100088b:	50                   	push   %eax
8100088c:	e8 c8 04 00 00       	call   81000d59 <_fwalk>
81000891:	83 c4 10             	add    $0x10,%esp
81000894:	90                   	nop
81000895:	c9                   	leave  
81000896:	c3                   	ret    

81000897 <__fp_unlock_all>:
81000897:	55                   	push   %ebp
81000898:	89 e5                	mov    %esp,%ebp
8100089a:	83 ec 08             	sub    $0x8,%esp
8100089d:	a1 a4 38 00 81       	mov    0x810038a4,%eax
810008a2:	83 ec 08             	sub    $0x8,%esp
810008a5:	68 69 08 00 81       	push   $0x81000869
810008aa:	50                   	push   %eax
810008ab:	e8 a9 04 00 00       	call   81000d59 <_fwalk>
810008b0:	83 c4 10             	add    $0x10,%esp
810008b3:	e8 95 ff ff ff       	call   8100084d <__sfp_lock_release>
810008b8:	90                   	nop
810008b9:	c9                   	leave  
810008ba:	c3                   	ret    

810008bb <__sfvwrite_r>:
810008bb:	55                   	push   %ebp
810008bc:	89 e5                	mov    %esp,%ebp
810008be:	57                   	push   %edi
810008bf:	56                   	push   %esi
810008c0:	53                   	push   %ebx
810008c1:	83 ec 3c             	sub    $0x3c,%esp
810008c4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810008c7:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
810008ce:	8b 45 10             	mov    0x10(%ebp),%eax
810008d1:	8b 78 08             	mov    0x8(%eax),%edi
810008d4:	85 ff                	test   %edi,%edi
810008d6:	75 0a                	jne    810008e2 <__sfvwrite_r+0x27>
810008d8:	b8 00 00 00 00       	mov    $0x0,%eax
810008dd:	e9 6f 04 00 00       	jmp    81000d51 <__sfvwrite_r+0x496>
810008e2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810008e6:	98                   	cwtl   
810008e7:	83 e0 08             	and    $0x8,%eax
810008ea:	85 c0                	test   %eax,%eax
810008ec:	74 07                	je     810008f5 <__sfvwrite_r+0x3a>
810008ee:	8b 43 10             	mov    0x10(%ebx),%eax
810008f1:	85 c0                	test   %eax,%eax
810008f3:	75 1d                	jne    81000912 <__sfvwrite_r+0x57>
810008f5:	83 ec 08             	sub    $0x8,%esp
810008f8:	53                   	push   %ebx
810008f9:	ff 75 08             	pushl  0x8(%ebp)
810008fc:	e8 68 1c 00 00       	call   81002569 <__swsetup_r>
81000901:	83 c4 10             	add    $0x10,%esp
81000904:	85 c0                	test   %eax,%eax
81000906:	74 0a                	je     81000912 <__sfvwrite_r+0x57>
81000908:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100090d:	e9 3f 04 00 00       	jmp    81000d51 <__sfvwrite_r+0x496>
81000912:	8b 45 10             	mov    0x10(%ebp),%eax
81000915:	8b 00                	mov    (%eax),%eax
81000917:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100091a:	bf 00 00 00 00       	mov    $0x0,%edi
8100091f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000923:	98                   	cwtl   
81000924:	83 e0 02             	and    $0x2,%eax
81000927:	85 c0                	test   %eax,%eax
81000929:	74 68                	je     81000993 <__sfvwrite_r+0xd8>
8100092b:	eb 11                	jmp    8100093e <__sfvwrite_r+0x83>
8100092d:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000930:	8b 08                	mov    (%eax),%ecx
81000932:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000935:	8b 78 04             	mov    0x4(%eax),%edi
81000938:	83 c0 08             	add    $0x8,%eax
8100093b:	89 45 c0             	mov    %eax,-0x40(%ebp)
8100093e:	85 ff                	test   %edi,%edi
81000940:	74 eb                	je     8100092d <__sfvwrite_r+0x72>
81000942:	8b 4b 24             	mov    0x24(%ebx),%ecx
81000945:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
8100094a:	39 c7                	cmp    %eax,%edi
8100094c:	0f 46 c7             	cmovbe %edi,%eax
8100094f:	89 c2                	mov    %eax,%edx
81000951:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000954:	52                   	push   %edx
81000955:	ff 75 c4             	pushl  -0x3c(%ebp)
81000958:	50                   	push   %eax
81000959:	ff 75 08             	pushl  0x8(%ebp)
8100095c:	ff d1                	call   *%ecx
8100095e:	83 c4 10             	add    $0x10,%esp
81000961:	89 c6                	mov    %eax,%esi
81000963:	85 f6                	test   %esi,%esi
81000965:	0f 8e cf 03 00 00    	jle    81000d3a <__sfvwrite_r+0x47f>
8100096b:	89 f0                	mov    %esi,%eax
8100096d:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000970:	89 f0                	mov    %esi,%eax
81000972:	29 c7                	sub    %eax,%edi
81000974:	8b 45 10             	mov    0x10(%ebp),%eax
81000977:	8b 40 08             	mov    0x8(%eax),%eax
8100097a:	89 f2                	mov    %esi,%edx
8100097c:	29 d0                	sub    %edx,%eax
8100097e:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000981:	89 41 08             	mov    %eax,0x8(%ecx)
81000984:	8b 45 10             	mov    0x10(%ebp),%eax
81000987:	8b 40 08             	mov    0x8(%eax),%eax
8100098a:	85 c0                	test   %eax,%eax
8100098c:	75 b0                	jne    8100093e <__sfvwrite_r+0x83>
8100098e:	e9 a0 03 00 00       	jmp    81000d33 <__sfvwrite_r+0x478>
81000993:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000997:	98                   	cwtl   
81000998:	83 e0 01             	and    $0x1,%eax
8100099b:	85 c0                	test   %eax,%eax
8100099d:	0f 85 44 02 00 00    	jne    81000be7 <__sfvwrite_r+0x32c>
810009a3:	eb 11                	jmp    810009b6 <__sfvwrite_r+0xfb>
810009a5:	8b 45 c0             	mov    -0x40(%ebp),%eax
810009a8:	8b 08                	mov    (%eax),%ecx
810009aa:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810009ad:	8b 78 04             	mov    0x4(%eax),%edi
810009b0:	83 c0 08             	add    $0x8,%eax
810009b3:	89 45 c0             	mov    %eax,-0x40(%ebp)
810009b6:	85 ff                	test   %edi,%edi
810009b8:	74 eb                	je     810009a5 <__sfvwrite_r+0xea>
810009ba:	8b 73 08             	mov    0x8(%ebx),%esi
810009bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009c1:	98                   	cwtl   
810009c2:	25 00 02 00 00       	and    $0x200,%eax
810009c7:	85 c0                	test   %eax,%eax
810009c9:	0f 84 4f 01 00 00    	je     81000b1e <__sfvwrite_r+0x263>
810009cf:	89 f0                	mov    %esi,%eax
810009d1:	39 c7                	cmp    %eax,%edi
810009d3:	0f 82 12 01 00 00    	jb     81000aeb <__sfvwrite_r+0x230>
810009d9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810009dd:	98                   	cwtl   
810009de:	25 80 04 00 00       	and    $0x480,%eax
810009e3:	85 c0                	test   %eax,%eax
810009e5:	0f 84 00 01 00 00    	je     81000aeb <__sfvwrite_r+0x230>
810009eb:	8b 03                	mov    (%ebx),%eax
810009ed:	8b 53 10             	mov    0x10(%ebx),%edx
810009f0:	29 d0                	sub    %edx,%eax
810009f2:	89 45 d0             	mov    %eax,-0x30(%ebp)
810009f5:	8b 53 14             	mov    0x14(%ebx),%edx
810009f8:	89 d0                	mov    %edx,%eax
810009fa:	01 c0                	add    %eax,%eax
810009fc:	01 d0                	add    %edx,%eax
810009fe:	89 c2                	mov    %eax,%edx
81000a00:	c1 ea 1f             	shr    $0x1f,%edx
81000a03:	01 d0                	add    %edx,%eax
81000a05:	d1 f8                	sar    %eax
81000a07:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a0a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000a0d:	01 f8                	add    %edi,%eax
81000a0f:	8d 50 01             	lea    0x1(%eax),%edx
81000a12:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000a15:	39 c2                	cmp    %eax,%edx
81000a17:	76 0b                	jbe    81000a24 <__sfvwrite_r+0x169>
81000a19:	8b 45 d0             	mov    -0x30(%ebp),%eax
81000a1c:	01 f8                	add    %edi,%eax
81000a1e:	83 c0 01             	add    $0x1,%eax
81000a21:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000a24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a28:	98                   	cwtl   
81000a29:	25 00 04 00 00       	and    $0x400,%eax
81000a2e:	85 c0                	test   %eax,%eax
81000a30:	74 4f                	je     81000a81 <__sfvwrite_r+0x1c6>
81000a32:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000a35:	83 ec 08             	sub    $0x8,%esp
81000a38:	50                   	push   %eax
81000a39:	ff 75 08             	pushl  0x8(%ebp)
81000a3c:	e8 7e 06 00 00       	call   810010bf <_malloc_r>
81000a41:	83 c4 10             	add    $0x10,%esp
81000a44:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000a47:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a4b:	75 0e                	jne    81000a5b <__sfvwrite_r+0x1a0>
81000a4d:	8b 45 08             	mov    0x8(%ebp),%eax
81000a50:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000a56:	e9 e6 02 00 00       	jmp    81000d41 <__sfvwrite_r+0x486>
81000a5b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000a5e:	8b 43 10             	mov    0x10(%ebx),%eax
81000a61:	83 ec 04             	sub    $0x4,%esp
81000a64:	52                   	push   %edx
81000a65:	50                   	push   %eax
81000a66:	ff 75 dc             	pushl  -0x24(%ebp)
81000a69:	e8 1a 0f 00 00       	call   81001988 <memcpy>
81000a6e:	83 c4 10             	add    $0x10,%esp
81000a71:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000a75:	66 25 7f fb          	and    $0xfb7f,%ax
81000a79:	0c 80                	or     $0x80,%al
81000a7b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000a7f:	eb 49                	jmp    81000aca <__sfvwrite_r+0x20f>
81000a81:	8b 55 d8             	mov    -0x28(%ebp),%edx
81000a84:	8b 43 10             	mov    0x10(%ebx),%eax
81000a87:	83 ec 04             	sub    $0x4,%esp
81000a8a:	52                   	push   %edx
81000a8b:	50                   	push   %eax
81000a8c:	ff 75 08             	pushl  0x8(%ebp)
81000a8f:	e8 5d 10 00 00       	call   81001af1 <_realloc_r>
81000a94:	83 c4 10             	add    $0x10,%esp
81000a97:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000a9a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a9e:	75 2a                	jne    81000aca <__sfvwrite_r+0x20f>
81000aa0:	8b 43 10             	mov    0x10(%ebx),%eax
81000aa3:	83 ec 08             	sub    $0x8,%esp
81000aa6:	50                   	push   %eax
81000aa7:	ff 75 08             	pushl  0x8(%ebp)
81000aaa:	e8 30 20 00 00       	call   81002adf <_free_r>
81000aaf:	83 c4 10             	add    $0x10,%esp
81000ab2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000ab6:	24 7f                	and    $0x7f,%al
81000ab8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000abc:	8b 45 08             	mov    0x8(%ebp),%eax
81000abf:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81000ac5:	e9 77 02 00 00       	jmp    81000d41 <__sfvwrite_r+0x486>
81000aca:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000acd:	89 43 10             	mov    %eax,0x10(%ebx)
81000ad0:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000ad3:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ad6:	01 d0                	add    %edx,%eax
81000ad8:	89 03                	mov    %eax,(%ebx)
81000ada:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000add:	89 43 14             	mov    %eax,0x14(%ebx)
81000ae0:	89 fe                	mov    %edi,%esi
81000ae2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000ae5:	2b 45 d0             	sub    -0x30(%ebp),%eax
81000ae8:	89 43 08             	mov    %eax,0x8(%ebx)
81000aeb:	89 f0                	mov    %esi,%eax
81000aed:	39 c7                	cmp    %eax,%edi
81000aef:	73 02                	jae    81000af3 <__sfvwrite_r+0x238>
81000af1:	89 fe                	mov    %edi,%esi
81000af3:	89 f2                	mov    %esi,%edx
81000af5:	8b 03                	mov    (%ebx),%eax
81000af7:	83 ec 04             	sub    $0x4,%esp
81000afa:	52                   	push   %edx
81000afb:	ff 75 c4             	pushl  -0x3c(%ebp)
81000afe:	50                   	push   %eax
81000aff:	e8 cc 0e 00 00       	call   810019d0 <memmove>
81000b04:	83 c4 10             	add    $0x10,%esp
81000b07:	8b 43 08             	mov    0x8(%ebx),%eax
81000b0a:	29 f0                	sub    %esi,%eax
81000b0c:	89 43 08             	mov    %eax,0x8(%ebx)
81000b0f:	8b 03                	mov    (%ebx),%eax
81000b11:	89 f2                	mov    %esi,%edx
81000b13:	01 d0                	add    %edx,%eax
81000b15:	89 03                	mov    %eax,(%ebx)
81000b17:	89 fe                	mov    %edi,%esi
81000b19:	e9 9d 00 00 00       	jmp    81000bbb <__sfvwrite_r+0x300>
81000b1e:	8b 13                	mov    (%ebx),%edx
81000b20:	8b 43 10             	mov    0x10(%ebx),%eax
81000b23:	39 c2                	cmp    %eax,%edx
81000b25:	77 07                	ja     81000b2e <__sfvwrite_r+0x273>
81000b27:	8b 43 14             	mov    0x14(%ebx),%eax
81000b2a:	39 c7                	cmp    %eax,%edi
81000b2c:	73 4c                	jae    81000b7a <__sfvwrite_r+0x2bf>
81000b2e:	89 f0                	mov    %esi,%eax
81000b30:	39 c7                	cmp    %eax,%edi
81000b32:	0f 46 c7             	cmovbe %edi,%eax
81000b35:	89 c6                	mov    %eax,%esi
81000b37:	89 f2                	mov    %esi,%edx
81000b39:	8b 03                	mov    (%ebx),%eax
81000b3b:	83 ec 04             	sub    $0x4,%esp
81000b3e:	52                   	push   %edx
81000b3f:	ff 75 c4             	pushl  -0x3c(%ebp)
81000b42:	50                   	push   %eax
81000b43:	e8 88 0e 00 00       	call   810019d0 <memmove>
81000b48:	83 c4 10             	add    $0x10,%esp
81000b4b:	8b 43 08             	mov    0x8(%ebx),%eax
81000b4e:	29 f0                	sub    %esi,%eax
81000b50:	89 43 08             	mov    %eax,0x8(%ebx)
81000b53:	8b 03                	mov    (%ebx),%eax
81000b55:	89 f2                	mov    %esi,%edx
81000b57:	01 d0                	add    %edx,%eax
81000b59:	89 03                	mov    %eax,(%ebx)
81000b5b:	8b 43 08             	mov    0x8(%ebx),%eax
81000b5e:	85 c0                	test   %eax,%eax
81000b60:	75 58                	jne    81000bba <__sfvwrite_r+0x2ff>
81000b62:	83 ec 08             	sub    $0x8,%esp
81000b65:	53                   	push   %ebx
81000b66:	ff 75 08             	pushl  0x8(%ebp)
81000b69:	e8 e0 1e 00 00       	call   81002a4e <_fflush_r>
81000b6e:	83 c4 10             	add    $0x10,%esp
81000b71:	85 c0                	test   %eax,%eax
81000b73:	74 45                	je     81000bba <__sfvwrite_r+0x2ff>
81000b75:	e9 c7 01 00 00       	jmp    81000d41 <__sfvwrite_r+0x486>
81000b7a:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81000b80:	77 04                	ja     81000b86 <__sfvwrite_r+0x2cb>
81000b82:	89 f8                	mov    %edi,%eax
81000b84:	eb 05                	jmp    81000b8b <__sfvwrite_r+0x2d0>
81000b86:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81000b8b:	8b 4b 14             	mov    0x14(%ebx),%ecx
81000b8e:	99                   	cltd   
81000b8f:	f7 f9                	idiv   %ecx
81000b91:	89 c2                	mov    %eax,%edx
81000b93:	8b 43 14             	mov    0x14(%ebx),%eax
81000b96:	89 d6                	mov    %edx,%esi
81000b98:	0f af f0             	imul   %eax,%esi
81000b9b:	8b 53 24             	mov    0x24(%ebx),%edx
81000b9e:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000ba1:	56                   	push   %esi
81000ba2:	ff 75 c4             	pushl  -0x3c(%ebp)
81000ba5:	50                   	push   %eax
81000ba6:	ff 75 08             	pushl  0x8(%ebp)
81000ba9:	ff d2                	call   *%edx
81000bab:	83 c4 10             	add    $0x10,%esp
81000bae:	89 c6                	mov    %eax,%esi
81000bb0:	85 f6                	test   %esi,%esi
81000bb2:	0f 8e 85 01 00 00    	jle    81000d3d <__sfvwrite_r+0x482>
81000bb8:	eb 01                	jmp    81000bbb <__sfvwrite_r+0x300>
81000bba:	90                   	nop
81000bbb:	89 f0                	mov    %esi,%eax
81000bbd:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000bc0:	89 f0                	mov    %esi,%eax
81000bc2:	29 c7                	sub    %eax,%edi
81000bc4:	8b 45 10             	mov    0x10(%ebp),%eax
81000bc7:	8b 40 08             	mov    0x8(%eax),%eax
81000bca:	89 f2                	mov    %esi,%edx
81000bcc:	29 d0                	sub    %edx,%eax
81000bce:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000bd1:	89 41 08             	mov    %eax,0x8(%ecx)
81000bd4:	8b 45 10             	mov    0x10(%ebp),%eax
81000bd7:	8b 40 08             	mov    0x8(%eax),%eax
81000bda:	85 c0                	test   %eax,%eax
81000bdc:	0f 85 d4 fd ff ff    	jne    810009b6 <__sfvwrite_r+0xfb>
81000be2:	e9 4c 01 00 00       	jmp    81000d33 <__sfvwrite_r+0x478>
81000be7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000bee:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81000bf5:	eb 18                	jmp    81000c0f <__sfvwrite_r+0x354>
81000bf7:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000bfe:	8b 45 c0             	mov    -0x40(%ebp),%eax
81000c01:	8b 08                	mov    (%eax),%ecx
81000c03:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81000c06:	8b 78 04             	mov    0x4(%eax),%edi
81000c09:	83 c0 08             	add    $0x8,%eax
81000c0c:	89 45 c0             	mov    %eax,-0x40(%ebp)
81000c0f:	85 ff                	test   %edi,%edi
81000c11:	74 e4                	je     81000bf7 <__sfvwrite_r+0x33c>
81000c13:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81000c17:	75 32                	jne    81000c4b <__sfvwrite_r+0x390>
81000c19:	83 ec 04             	sub    $0x4,%esp
81000c1c:	57                   	push   %edi
81000c1d:	6a 0a                	push   $0xa
81000c1f:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81000c22:	56                   	push   %esi
81000c23:	e8 c8 0c 00 00       	call   810018f0 <memchr>
81000c28:	83 c4 10             	add    $0x10,%esp
81000c2b:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81000c2e:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81000c32:	74 0a                	je     81000c3e <__sfvwrite_r+0x383>
81000c34:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000c37:	83 c0 01             	add    $0x1,%eax
81000c3a:	29 f0                	sub    %esi,%eax
81000c3c:	eb 03                	jmp    81000c41 <__sfvwrite_r+0x386>
81000c3e:	8d 47 01             	lea    0x1(%edi),%eax
81000c41:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000c44:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000c4b:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000c4e:	39 c7                	cmp    %eax,%edi
81000c50:	0f 46 c7             	cmovbe %edi,%eax
81000c53:	89 c1                	mov    %eax,%ecx
81000c55:	8b 53 08             	mov    0x8(%ebx),%edx
81000c58:	8b 43 14             	mov    0x14(%ebx),%eax
81000c5b:	8d 34 02             	lea    (%edx,%eax,1),%esi
81000c5e:	8b 13                	mov    (%ebx),%edx
81000c60:	8b 43 10             	mov    0x10(%ebx),%eax
81000c63:	39 c2                	cmp    %eax,%edx
81000c65:	76 38                	jbe    81000c9f <__sfvwrite_r+0x3e4>
81000c67:	39 f1                	cmp    %esi,%ecx
81000c69:	7e 34                	jle    81000c9f <__sfvwrite_r+0x3e4>
81000c6b:	89 f2                	mov    %esi,%edx
81000c6d:	8b 03                	mov    (%ebx),%eax
81000c6f:	83 ec 04             	sub    $0x4,%esp
81000c72:	52                   	push   %edx
81000c73:	ff 75 c4             	pushl  -0x3c(%ebp)
81000c76:	50                   	push   %eax
81000c77:	e8 54 0d 00 00       	call   810019d0 <memmove>
81000c7c:	83 c4 10             	add    $0x10,%esp
81000c7f:	8b 03                	mov    (%ebx),%eax
81000c81:	89 f2                	mov    %esi,%edx
81000c83:	01 d0                	add    %edx,%eax
81000c85:	89 03                	mov    %eax,(%ebx)
81000c87:	83 ec 08             	sub    $0x8,%esp
81000c8a:	53                   	push   %ebx
81000c8b:	ff 75 08             	pushl  0x8(%ebp)
81000c8e:	e8 bb 1d 00 00       	call   81002a4e <_fflush_r>
81000c93:	83 c4 10             	add    $0x10,%esp
81000c96:	85 c0                	test   %eax,%eax
81000c98:	74 4f                	je     81000ce9 <__sfvwrite_r+0x42e>
81000c9a:	e9 a2 00 00 00       	jmp    81000d41 <__sfvwrite_r+0x486>
81000c9f:	8b 73 14             	mov    0x14(%ebx),%esi
81000ca2:	89 c8                	mov    %ecx,%eax
81000ca4:	39 c6                	cmp    %eax,%esi
81000ca6:	7f 1b                	jg     81000cc3 <__sfvwrite_r+0x408>
81000ca8:	8b 53 24             	mov    0x24(%ebx),%edx
81000cab:	8b 43 1c             	mov    0x1c(%ebx),%eax
81000cae:	56                   	push   %esi
81000caf:	ff 75 c4             	pushl  -0x3c(%ebp)
81000cb2:	50                   	push   %eax
81000cb3:	ff 75 08             	pushl  0x8(%ebp)
81000cb6:	ff d2                	call   *%edx
81000cb8:	83 c4 10             	add    $0x10,%esp
81000cbb:	89 c6                	mov    %eax,%esi
81000cbd:	85 f6                	test   %esi,%esi
81000cbf:	7f 28                	jg     81000ce9 <__sfvwrite_r+0x42e>
81000cc1:	eb 7e                	jmp    81000d41 <__sfvwrite_r+0x486>
81000cc3:	89 ce                	mov    %ecx,%esi
81000cc5:	89 f2                	mov    %esi,%edx
81000cc7:	8b 03                	mov    (%ebx),%eax
81000cc9:	83 ec 04             	sub    $0x4,%esp
81000ccc:	52                   	push   %edx
81000ccd:	ff 75 c4             	pushl  -0x3c(%ebp)
81000cd0:	50                   	push   %eax
81000cd1:	e8 fa 0c 00 00       	call   810019d0 <memmove>
81000cd6:	83 c4 10             	add    $0x10,%esp
81000cd9:	8b 43 08             	mov    0x8(%ebx),%eax
81000cdc:	29 f0                	sub    %esi,%eax
81000cde:	89 43 08             	mov    %eax,0x8(%ebx)
81000ce1:	8b 03                	mov    (%ebx),%eax
81000ce3:	89 f2                	mov    %esi,%edx
81000ce5:	01 d0                	add    %edx,%eax
81000ce7:	89 03                	mov    %eax,(%ebx)
81000ce9:	29 75 e0             	sub    %esi,-0x20(%ebp)
81000cec:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000cf0:	75 1a                	jne    81000d0c <__sfvwrite_r+0x451>
81000cf2:	83 ec 08             	sub    $0x8,%esp
81000cf5:	53                   	push   %ebx
81000cf6:	ff 75 08             	pushl  0x8(%ebp)
81000cf9:	e8 50 1d 00 00       	call   81002a4e <_fflush_r>
81000cfe:	83 c4 10             	add    $0x10,%esp
81000d01:	85 c0                	test   %eax,%eax
81000d03:	75 3b                	jne    81000d40 <__sfvwrite_r+0x485>
81000d05:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d0c:	89 f0                	mov    %esi,%eax
81000d0e:	01 45 c4             	add    %eax,-0x3c(%ebp)
81000d11:	89 f0                	mov    %esi,%eax
81000d13:	29 c7                	sub    %eax,%edi
81000d15:	8b 45 10             	mov    0x10(%ebp),%eax
81000d18:	8b 40 08             	mov    0x8(%eax),%eax
81000d1b:	89 f2                	mov    %esi,%edx
81000d1d:	29 d0                	sub    %edx,%eax
81000d1f:	8b 4d 10             	mov    0x10(%ebp),%ecx
81000d22:	89 41 08             	mov    %eax,0x8(%ecx)
81000d25:	8b 45 10             	mov    0x10(%ebp),%eax
81000d28:	8b 40 08             	mov    0x8(%eax),%eax
81000d2b:	85 c0                	test   %eax,%eax
81000d2d:	0f 85 dc fe ff ff    	jne    81000c0f <__sfvwrite_r+0x354>
81000d33:	b8 00 00 00 00       	mov    $0x0,%eax
81000d38:	eb 17                	jmp    81000d51 <__sfvwrite_r+0x496>
81000d3a:	90                   	nop
81000d3b:	eb 04                	jmp    81000d41 <__sfvwrite_r+0x486>
81000d3d:	90                   	nop
81000d3e:	eb 01                	jmp    81000d41 <__sfvwrite_r+0x486>
81000d40:	90                   	nop
81000d41:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d45:	83 c8 40             	or     $0x40,%eax
81000d48:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81000d4c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000d51:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000d54:	5b                   	pop    %ebx
81000d55:	5e                   	pop    %esi
81000d56:	5f                   	pop    %edi
81000d57:	5d                   	pop    %ebp
81000d58:	c3                   	ret    

81000d59 <_fwalk>:
81000d59:	55                   	push   %ebp
81000d5a:	89 e5                	mov    %esp,%ebp
81000d5c:	57                   	push   %edi
81000d5d:	56                   	push   %esi
81000d5e:	53                   	push   %ebx
81000d5f:	83 ec 1c             	sub    $0x1c,%esp
81000d62:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000d69:	8b 45 08             	mov    0x8(%ebp),%eax
81000d6c:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000d72:	eb 3e                	jmp    81000db2 <_fwalk+0x59>
81000d74:	8b 5e 08             	mov    0x8(%esi),%ebx
81000d77:	8b 7e 04             	mov    0x4(%esi),%edi
81000d7a:	eb 2d                	jmp    81000da9 <_fwalk+0x50>
81000d7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d80:	66 85 c0             	test   %ax,%ax
81000d83:	74 21                	je     81000da6 <_fwalk+0x4d>
81000d85:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000d89:	66 83 f8 01          	cmp    $0x1,%ax
81000d8d:	74 17                	je     81000da6 <_fwalk+0x4d>
81000d8f:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000d93:	66 83 f8 ff          	cmp    $0xffff,%ax
81000d97:	74 0d                	je     81000da6 <_fwalk+0x4d>
81000d99:	83 ec 0c             	sub    $0xc,%esp
81000d9c:	53                   	push   %ebx
81000d9d:	ff 55 0c             	call   *0xc(%ebp)
81000da0:	83 c4 10             	add    $0x10,%esp
81000da3:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000da6:	83 c3 68             	add    $0x68,%ebx
81000da9:	83 ef 01             	sub    $0x1,%edi
81000dac:	85 ff                	test   %edi,%edi
81000dae:	79 cc                	jns    81000d7c <_fwalk+0x23>
81000db0:	8b 36                	mov    (%esi),%esi
81000db2:	85 f6                	test   %esi,%esi
81000db4:	75 be                	jne    81000d74 <_fwalk+0x1b>
81000db6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000db9:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000dbc:	5b                   	pop    %ebx
81000dbd:	5e                   	pop    %esi
81000dbe:	5f                   	pop    %edi
81000dbf:	5d                   	pop    %ebp
81000dc0:	c3                   	ret    

81000dc1 <_fwalk_reent>:
81000dc1:	55                   	push   %ebp
81000dc2:	89 e5                	mov    %esp,%ebp
81000dc4:	57                   	push   %edi
81000dc5:	56                   	push   %esi
81000dc6:	53                   	push   %ebx
81000dc7:	83 ec 1c             	sub    $0x1c,%esp
81000dca:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000dd1:	8b 45 08             	mov    0x8(%ebp),%eax
81000dd4:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81000dda:	eb 41                	jmp    81000e1d <_fwalk_reent+0x5c>
81000ddc:	8b 5e 08             	mov    0x8(%esi),%ebx
81000ddf:	8b 7e 04             	mov    0x4(%esi),%edi
81000de2:	eb 30                	jmp    81000e14 <_fwalk_reent+0x53>
81000de4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000de8:	66 85 c0             	test   %ax,%ax
81000deb:	74 24                	je     81000e11 <_fwalk_reent+0x50>
81000ded:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000df1:	66 83 f8 01          	cmp    $0x1,%ax
81000df5:	74 1a                	je     81000e11 <_fwalk_reent+0x50>
81000df7:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81000dfb:	66 83 f8 ff          	cmp    $0xffff,%ax
81000dff:	74 10                	je     81000e11 <_fwalk_reent+0x50>
81000e01:	83 ec 08             	sub    $0x8,%esp
81000e04:	53                   	push   %ebx
81000e05:	ff 75 08             	pushl  0x8(%ebp)
81000e08:	ff 55 0c             	call   *0xc(%ebp)
81000e0b:	83 c4 10             	add    $0x10,%esp
81000e0e:	09 45 e4             	or     %eax,-0x1c(%ebp)
81000e11:	83 c3 68             	add    $0x68,%ebx
81000e14:	83 ef 01             	sub    $0x1,%edi
81000e17:	85 ff                	test   %edi,%edi
81000e19:	79 c9                	jns    81000de4 <_fwalk_reent+0x23>
81000e1b:	8b 36                	mov    (%esi),%esi
81000e1d:	85 f6                	test   %esi,%esi
81000e1f:	75 bb                	jne    81000ddc <_fwalk_reent+0x1b>
81000e21:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81000e24:	8d 65 f4             	lea    -0xc(%ebp),%esp
81000e27:	5b                   	pop    %ebx
81000e28:	5e                   	pop    %esi
81000e29:	5f                   	pop    %edi
81000e2a:	5d                   	pop    %ebp
81000e2b:	c3                   	ret    

81000e2c <malloc_extend_top>:
81000e2c:	55                   	push   %ebp
81000e2d:	89 e5                	mov    %esp,%ebp
81000e2f:	83 ec 38             	sub    $0x38,%esp
81000e32:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81000e39:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81000e3e:	8b 40 08             	mov    0x8(%eax),%eax
81000e41:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000e44:	8b 45 e0             	mov    -0x20(%ebp),%eax
81000e47:	8b 40 04             	mov    0x4(%eax),%eax
81000e4a:	83 e0 fc             	and    $0xfffffffc,%eax
81000e4d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81000e50:	8b 55 e0             	mov    -0x20(%ebp),%edx
81000e53:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000e56:	01 d0                	add    %edx,%eax
81000e58:	89 45 d8             	mov    %eax,-0x28(%ebp)
81000e5b:	8b 15 00 3d 00 81    	mov    0x81003d00,%edx
81000e61:	8b 45 0c             	mov    0xc(%ebp),%eax
81000e64:	01 d0                	add    %edx,%eax
81000e66:	83 c0 10             	add    $0x10,%eax
81000e69:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000e6c:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81000e73:	a1 cc 3c 00 81       	mov    0x81003ccc,%eax
81000e78:	83 f8 ff             	cmp    $0xffffffff,%eax
81000e7b:	74 15                	je     81000e92 <malloc_extend_top+0x66>
81000e7d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81000e80:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e83:	01 d0                	add    %edx,%eax
81000e85:	8d 50 ff             	lea    -0x1(%eax),%edx
81000e88:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000e8b:	f7 d8                	neg    %eax
81000e8d:	21 d0                	and    %edx,%eax
81000e8f:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000e92:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000e95:	83 ec 08             	sub    $0x8,%esp
81000e98:	50                   	push   %eax
81000e99:	ff 75 08             	pushl  0x8(%ebp)
81000e9c:	e8 2a 15 00 00       	call   810023cb <_sbrk_r>
81000ea1:	83 c4 10             	add    $0x10,%esp
81000ea4:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000ea7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81000eab:	0f 84 0b 02 00 00    	je     810010bc <malloc_extend_top+0x290>
81000eb1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000eb4:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000eb7:	73 0e                	jae    81000ec7 <malloc_extend_top+0x9b>
81000eb9:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81000ebe:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81000ec1:	0f 85 f5 01 00 00    	jne    810010bc <malloc_extend_top+0x290>
81000ec7:	a1 20 3d 00 81       	mov    0x81003d20,%eax
81000ecc:	89 c2                	mov    %eax,%edx
81000ece:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000ed1:	01 d0                	add    %edx,%eax
81000ed3:	a3 20 3d 00 81       	mov    %eax,0x81003d20
81000ed8:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000edb:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81000ede:	75 30                	jne    81000f10 <malloc_extend_top+0xe4>
81000ee0:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000ee3:	8d 50 ff             	lea    -0x1(%eax),%edx
81000ee6:	8b 45 d8             	mov    -0x28(%ebp),%eax
81000ee9:	21 d0                	and    %edx,%eax
81000eeb:	85 c0                	test   %eax,%eax
81000eed:	75 21                	jne    81000f10 <malloc_extend_top+0xe4>
81000eef:	8b 55 e8             	mov    -0x18(%ebp),%edx
81000ef2:	8b 45 dc             	mov    -0x24(%ebp),%eax
81000ef5:	01 d0                	add    %edx,%eax
81000ef7:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000efa:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81000eff:	8b 40 08             	mov    0x8(%eax),%eax
81000f02:	8b 55 d0             	mov    -0x30(%ebp),%edx
81000f05:	83 ca 01             	or     $0x1,%edx
81000f08:	89 50 04             	mov    %edx,0x4(%eax)
81000f0b:	e9 76 01 00 00       	jmp    81001086 <malloc_extend_top+0x25a>
81000f10:	a1 cc 3c 00 81       	mov    0x81003ccc,%eax
81000f15:	83 f8 ff             	cmp    $0xffffffff,%eax
81000f18:	75 0a                	jne    81000f24 <malloc_extend_top+0xf8>
81000f1a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f1d:	a3 cc 3c 00 81       	mov    %eax,0x81003ccc
81000f22:	eb 13                	jmp    81000f37 <malloc_extend_top+0x10b>
81000f24:	8b 15 20 3d 00 81    	mov    0x81003d20,%edx
81000f2a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f2d:	2b 45 d8             	sub    -0x28(%ebp),%eax
81000f30:	01 d0                	add    %edx,%eax
81000f32:	a3 20 3d 00 81       	mov    %eax,0x81003d20
81000f37:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000f3a:	83 c0 08             	add    $0x8,%eax
81000f3d:	83 e0 07             	and    $0x7,%eax
81000f40:	89 45 cc             	mov    %eax,-0x34(%ebp)
81000f43:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81000f47:	74 13                	je     81000f5c <malloc_extend_top+0x130>
81000f49:	b8 08 00 00 00       	mov    $0x8,%eax
81000f4e:	2b 45 cc             	sub    -0x34(%ebp),%eax
81000f51:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000f54:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f57:	01 45 f4             	add    %eax,-0xc(%ebp)
81000f5a:	eb 07                	jmp    81000f63 <malloc_extend_top+0x137>
81000f5c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000f63:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000f66:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000f69:	01 d0                	add    %edx,%eax
81000f6b:	89 c2                	mov    %eax,%edx
81000f6d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f70:	83 e8 01             	sub    $0x1,%eax
81000f73:	21 c2                	and    %eax,%edx
81000f75:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f78:	29 d0                	sub    %edx,%eax
81000f7a:	01 45 f0             	add    %eax,-0x10(%ebp)
81000f7d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81000f80:	83 e8 01             	sub    $0x1,%eax
81000f83:	21 45 f0             	and    %eax,-0x10(%ebp)
81000f86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000f89:	83 ec 08             	sub    $0x8,%esp
81000f8c:	50                   	push   %eax
81000f8d:	ff 75 08             	pushl  0x8(%ebp)
81000f90:	e8 36 14 00 00       	call   810023cb <_sbrk_r>
81000f95:	83 c4 10             	add    $0x10,%esp
81000f98:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000f9b:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
81000f9f:	75 28                	jne    81000fc9 <malloc_extend_top+0x19d>
81000fa1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81000fa8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81000faf:	8b 55 f4             	mov    -0xc(%ebp),%edx
81000fb2:	8b 45 e8             	mov    -0x18(%ebp),%eax
81000fb5:	01 d0                	add    %edx,%eax
81000fb7:	89 45 ec             	mov    %eax,-0x14(%ebp)
81000fba:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81000fbe:	74 09                	je     81000fc9 <malloc_extend_top+0x19d>
81000fc0:	8b 45 cc             	mov    -0x34(%ebp),%eax
81000fc3:	83 e8 08             	sub    $0x8,%eax
81000fc6:	01 45 ec             	add    %eax,-0x14(%ebp)
81000fc9:	a1 20 3d 00 81       	mov    0x81003d20,%eax
81000fce:	89 c2                	mov    %eax,%edx
81000fd0:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fd3:	01 d0                	add    %edx,%eax
81000fd5:	a3 20 3d 00 81       	mov    %eax,0x81003d20
81000fda:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81000fdf:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000fe2:	89 42 08             	mov    %eax,0x8(%edx)
81000fe5:	8b 45 ec             	mov    -0x14(%ebp),%eax
81000fe8:	2b 45 f4             	sub    -0xc(%ebp),%eax
81000feb:	89 c2                	mov    %eax,%edx
81000fed:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000ff0:	01 d0                	add    %edx,%eax
81000ff2:	89 45 d0             	mov    %eax,-0x30(%ebp)
81000ff5:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81000ffa:	8b 40 08             	mov    0x8(%eax),%eax
81000ffd:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001000:	83 ca 01             	or     $0x1,%edx
81001003:	89 50 04             	mov    %edx,0x4(%eax)
81001006:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
8100100b:	39 45 e0             	cmp    %eax,-0x20(%ebp)
8100100e:	74 76                	je     81001086 <malloc_extend_top+0x25a>
81001010:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
81001014:	77 14                	ja     8100102a <malloc_extend_top+0x1fe>
81001016:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
8100101b:	8b 40 08             	mov    0x8(%eax),%eax
8100101e:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
81001025:	e9 93 00 00 00       	jmp    810010bd <malloc_extend_top+0x291>
8100102a:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100102d:	83 e8 0c             	sub    $0xc,%eax
81001030:	83 e0 f8             	and    $0xfffffff8,%eax
81001033:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001036:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001039:	8b 40 04             	mov    0x4(%eax),%eax
8100103c:	83 e0 01             	and    $0x1,%eax
8100103f:	0b 45 dc             	or     -0x24(%ebp),%eax
81001042:	89 c2                	mov    %eax,%edx
81001044:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001047:	89 50 04             	mov    %edx,0x4(%eax)
8100104a:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100104d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001050:	01 d0                	add    %edx,%eax
81001052:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81001059:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100105c:	8d 50 04             	lea    0x4(%eax),%edx
8100105f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001062:	01 d0                	add    %edx,%eax
81001064:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100106b:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100106f:	76 15                	jbe    81001086 <malloc_extend_top+0x25a>
81001071:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001074:	83 c0 08             	add    $0x8,%eax
81001077:	83 ec 08             	sub    $0x8,%esp
8100107a:	50                   	push   %eax
8100107b:	ff 75 08             	pushl  0x8(%ebp)
8100107e:	e8 5c 1a 00 00       	call   81002adf <_free_r>
81001083:	83 c4 10             	add    $0x10,%esp
81001086:	a1 20 3d 00 81       	mov    0x81003d20,%eax
8100108b:	89 c2                	mov    %eax,%edx
8100108d:	a1 04 3d 00 81       	mov    0x81003d04,%eax
81001092:	39 c2                	cmp    %eax,%edx
81001094:	76 0a                	jbe    810010a0 <malloc_extend_top+0x274>
81001096:	a1 20 3d 00 81       	mov    0x81003d20,%eax
8100109b:	a3 04 3d 00 81       	mov    %eax,0x81003d04
810010a0:	a1 20 3d 00 81       	mov    0x81003d20,%eax
810010a5:	89 c2                	mov    %eax,%edx
810010a7:	a1 08 3d 00 81       	mov    0x81003d08,%eax
810010ac:	39 c2                	cmp    %eax,%edx
810010ae:	76 0d                	jbe    810010bd <malloc_extend_top+0x291>
810010b0:	a1 20 3d 00 81       	mov    0x81003d20,%eax
810010b5:	a3 08 3d 00 81       	mov    %eax,0x81003d08
810010ba:	eb 01                	jmp    810010bd <malloc_extend_top+0x291>
810010bc:	90                   	nop
810010bd:	c9                   	leave  
810010be:	c3                   	ret    

810010bf <_malloc_r>:
810010bf:	55                   	push   %ebp
810010c0:	89 e5                	mov    %esp,%ebp
810010c2:	53                   	push   %ebx
810010c3:	83 ec 44             	sub    $0x44,%esp
810010c6:	8b 45 0c             	mov    0xc(%ebp),%eax
810010c9:	83 c0 0b             	add    $0xb,%eax
810010cc:	83 f8 16             	cmp    $0x16,%eax
810010cf:	76 0b                	jbe    810010dc <_malloc_r+0x1d>
810010d1:	8b 45 0c             	mov    0xc(%ebp),%eax
810010d4:	83 c0 0b             	add    $0xb,%eax
810010d7:	83 e0 f8             	and    $0xfffffff8,%eax
810010da:	eb 05                	jmp    810010e1 <_malloc_r+0x22>
810010dc:	b8 10 00 00 00       	mov    $0x10,%eax
810010e1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810010e4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810010e7:	85 c0                	test   %eax,%eax
810010e9:	78 08                	js     810010f3 <_malloc_r+0x34>
810010eb:	8b 45 d0             	mov    -0x30(%ebp),%eax
810010ee:	3b 45 0c             	cmp    0xc(%ebp),%eax
810010f1:	73 13                	jae    81001106 <_malloc_r+0x47>
810010f3:	8b 45 08             	mov    0x8(%ebp),%eax
810010f6:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810010fc:	b8 00 00 00 00       	mov    $0x0,%eax
81001101:	e9 d6 07 00 00       	jmp    810018dc <_malloc_r+0x81d>
81001106:	83 ec 0c             	sub    $0xc,%esp
81001109:	ff 75 08             	pushl  0x8(%ebp)
8100110c:	e8 d4 09 00 00       	call   81001ae5 <__malloc_lock>
81001111:	83 c4 10             	add    $0x10,%esp
81001114:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
8100111b:	0f 87 b0 00 00 00    	ja     810011d1 <_malloc_r+0x112>
81001121:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001124:	c1 e8 03             	shr    $0x3,%eax
81001127:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100112a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100112d:	83 c0 01             	add    $0x1,%eax
81001130:	01 c0                	add    %eax,%eax
81001132:	c1 e0 02             	shl    $0x2,%eax
81001135:	05 c0 38 00 81       	add    $0x810038c0,%eax
8100113a:	83 e8 08             	sub    $0x8,%eax
8100113d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001140:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001143:	8b 40 0c             	mov    0xc(%eax),%eax
81001146:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001149:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100114c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100114f:	75 0d                	jne    8100115e <_malloc_r+0x9f>
81001151:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81001155:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001158:	8b 40 0c             	mov    0xc(%eax),%eax
8100115b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100115e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001161:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81001164:	74 62                	je     810011c8 <_malloc_r+0x109>
81001166:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001169:	8b 40 04             	mov    0x4(%eax),%eax
8100116c:	83 e0 fc             	and    $0xfffffffc,%eax
8100116f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001172:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001175:	8b 40 0c             	mov    0xc(%eax),%eax
81001178:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100117b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100117e:	8b 40 08             	mov    0x8(%eax),%eax
81001181:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001184:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001187:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100118a:	89 50 0c             	mov    %edx,0xc(%eax)
8100118d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001190:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001193:	89 50 08             	mov    %edx,0x8(%eax)
81001196:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001199:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100119c:	01 d0                	add    %edx,%eax
8100119e:	8b 50 04             	mov    0x4(%eax),%edx
810011a1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810011a4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810011a7:	01 c8                	add    %ecx,%eax
810011a9:	83 ca 01             	or     $0x1,%edx
810011ac:	89 50 04             	mov    %edx,0x4(%eax)
810011af:	83 ec 0c             	sub    $0xc,%esp
810011b2:	ff 75 08             	pushl  0x8(%ebp)
810011b5:	e8 31 09 00 00       	call   81001aeb <__malloc_unlock>
810011ba:	83 c4 10             	add    $0x10,%esp
810011bd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810011c0:	83 c0 08             	add    $0x8,%eax
810011c3:	e9 14 07 00 00       	jmp    810018dc <_malloc_r+0x81d>
810011c8:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
810011cc:	e9 46 01 00 00       	jmp    81001317 <_malloc_r+0x258>
810011d1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011d4:	c1 e8 09             	shr    $0x9,%eax
810011d7:	85 c0                	test   %eax,%eax
810011d9:	75 08                	jne    810011e3 <_malloc_r+0x124>
810011db:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011de:	c1 e8 03             	shr    $0x3,%eax
810011e1:	eb 77                	jmp    8100125a <_malloc_r+0x19b>
810011e3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011e6:	c1 e8 09             	shr    $0x9,%eax
810011e9:	83 f8 04             	cmp    $0x4,%eax
810011ec:	77 0b                	ja     810011f9 <_malloc_r+0x13a>
810011ee:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011f1:	c1 e8 06             	shr    $0x6,%eax
810011f4:	83 c0 38             	add    $0x38,%eax
810011f7:	eb 61                	jmp    8100125a <_malloc_r+0x19b>
810011f9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810011fc:	c1 e8 09             	shr    $0x9,%eax
810011ff:	83 f8 14             	cmp    $0x14,%eax
81001202:	77 0b                	ja     8100120f <_malloc_r+0x150>
81001204:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001207:	c1 e8 09             	shr    $0x9,%eax
8100120a:	83 c0 5b             	add    $0x5b,%eax
8100120d:	eb 4b                	jmp    8100125a <_malloc_r+0x19b>
8100120f:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001212:	c1 e8 09             	shr    $0x9,%eax
81001215:	83 f8 54             	cmp    $0x54,%eax
81001218:	77 0b                	ja     81001225 <_malloc_r+0x166>
8100121a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100121d:	c1 e8 0c             	shr    $0xc,%eax
81001220:	83 c0 6e             	add    $0x6e,%eax
81001223:	eb 35                	jmp    8100125a <_malloc_r+0x19b>
81001225:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001228:	c1 e8 09             	shr    $0x9,%eax
8100122b:	3d 54 01 00 00       	cmp    $0x154,%eax
81001230:	77 0b                	ja     8100123d <_malloc_r+0x17e>
81001232:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001235:	c1 e8 0f             	shr    $0xf,%eax
81001238:	83 c0 77             	add    $0x77,%eax
8100123b:	eb 1d                	jmp    8100125a <_malloc_r+0x19b>
8100123d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001240:	c1 e8 09             	shr    $0x9,%eax
81001243:	3d 54 05 00 00       	cmp    $0x554,%eax
81001248:	77 0b                	ja     81001255 <_malloc_r+0x196>
8100124a:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100124d:	c1 e8 12             	shr    $0x12,%eax
81001250:	83 c0 7c             	add    $0x7c,%eax
81001253:	eb 05                	jmp    8100125a <_malloc_r+0x19b>
81001255:	b8 7e 00 00 00       	mov    $0x7e,%eax
8100125a:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100125d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001260:	83 c0 01             	add    $0x1,%eax
81001263:	01 c0                	add    %eax,%eax
81001265:	c1 e0 02             	shl    $0x2,%eax
81001268:	05 c0 38 00 81       	add    $0x810038c0,%eax
8100126d:	83 e8 08             	sub    $0x8,%eax
81001270:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001273:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001276:	8b 40 0c             	mov    0xc(%eax),%eax
81001279:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100127c:	e9 86 00 00 00       	jmp    81001307 <_malloc_r+0x248>
81001281:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001284:	8b 40 04             	mov    0x4(%eax),%eax
81001287:	83 e0 fc             	and    $0xfffffffc,%eax
8100128a:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100128d:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001290:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001293:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001296:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
8100129a:	7e 06                	jle    810012a2 <_malloc_r+0x1e3>
8100129c:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
810012a0:	eb 71                	jmp    81001313 <_malloc_r+0x254>
810012a2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810012a6:	78 56                	js     810012fe <_malloc_r+0x23f>
810012a8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012ab:	8b 40 0c             	mov    0xc(%eax),%eax
810012ae:	89 45 d8             	mov    %eax,-0x28(%ebp)
810012b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012b4:	8b 40 08             	mov    0x8(%eax),%eax
810012b7:	89 45 dc             	mov    %eax,-0x24(%ebp)
810012ba:	8b 45 dc             	mov    -0x24(%ebp),%eax
810012bd:	8b 55 d8             	mov    -0x28(%ebp),%edx
810012c0:	89 50 0c             	mov    %edx,0xc(%eax)
810012c3:	8b 45 d8             	mov    -0x28(%ebp),%eax
810012c6:	8b 55 dc             	mov    -0x24(%ebp),%edx
810012c9:	89 50 08             	mov    %edx,0x8(%eax)
810012cc:	8b 55 f4             	mov    -0xc(%ebp),%edx
810012cf:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012d2:	01 d0                	add    %edx,%eax
810012d4:	8b 50 04             	mov    0x4(%eax),%edx
810012d7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810012da:	8b 45 cc             	mov    -0x34(%ebp),%eax
810012dd:	01 c8                	add    %ecx,%eax
810012df:	83 ca 01             	or     $0x1,%edx
810012e2:	89 50 04             	mov    %edx,0x4(%eax)
810012e5:	83 ec 0c             	sub    $0xc,%esp
810012e8:	ff 75 08             	pushl  0x8(%ebp)
810012eb:	e8 fb 07 00 00       	call   81001aeb <__malloc_unlock>
810012f0:	83 c4 10             	add    $0x10,%esp
810012f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f6:	83 c0 08             	add    $0x8,%eax
810012f9:	e9 de 05 00 00       	jmp    810018dc <_malloc_r+0x81d>
810012fe:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001301:	8b 40 0c             	mov    0xc(%eax),%eax
81001304:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001307:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100130a:	3b 45 ec             	cmp    -0x14(%ebp),%eax
8100130d:	0f 85 6e ff ff ff    	jne    81001281 <_malloc_r+0x1c2>
81001313:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001317:	b8 c8 38 00 81       	mov    $0x810038c8,%eax
8100131c:	8b 40 08             	mov    0x8(%eax),%eax
8100131f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001322:	b8 c8 38 00 81       	mov    $0x810038c8,%eax
81001327:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100132a:	0f 84 9c 02 00 00    	je     810015cc <_malloc_r+0x50d>
81001330:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001333:	8b 40 04             	mov    0x4(%eax),%eax
81001336:	83 e0 fc             	and    $0xfffffffc,%eax
81001339:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100133c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100133f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001342:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001345:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001349:	7e 7a                	jle    810013c5 <_malloc_r+0x306>
8100134b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100134e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001351:	01 d0                	add    %edx,%eax
81001353:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001356:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001359:	83 c8 01             	or     $0x1,%eax
8100135c:	89 c2                	mov    %eax,%edx
8100135e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001361:	89 50 04             	mov    %edx,0x4(%eax)
81001364:	b8 c8 38 00 81       	mov    $0x810038c8,%eax
81001369:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100136c:	89 50 0c             	mov    %edx,0xc(%eax)
8100136f:	ba c8 38 00 81       	mov    $0x810038c8,%edx
81001374:	8b 40 0c             	mov    0xc(%eax),%eax
81001377:	89 42 08             	mov    %eax,0x8(%edx)
8100137a:	ba c8 38 00 81       	mov    $0x810038c8,%edx
8100137f:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001382:	89 50 0c             	mov    %edx,0xc(%eax)
81001385:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001388:	8b 50 0c             	mov    0xc(%eax),%edx
8100138b:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100138e:	89 50 08             	mov    %edx,0x8(%eax)
81001391:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001394:	83 c8 01             	or     $0x1,%eax
81001397:	89 c2                	mov    %eax,%edx
81001399:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100139c:	89 50 04             	mov    %edx,0x4(%eax)
8100139f:	8b 55 e8             	mov    -0x18(%ebp),%edx
810013a2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810013a5:	01 c2                	add    %eax,%edx
810013a7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810013aa:	89 02                	mov    %eax,(%edx)
810013ac:	83 ec 0c             	sub    $0xc,%esp
810013af:	ff 75 08             	pushl  0x8(%ebp)
810013b2:	e8 34 07 00 00       	call   81001aeb <__malloc_unlock>
810013b7:	83 c4 10             	add    $0x10,%esp
810013ba:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013bd:	83 c0 08             	add    $0x8,%eax
810013c0:	e9 17 05 00 00       	jmp    810018dc <_malloc_r+0x81d>
810013c5:	b8 c8 38 00 81       	mov    $0x810038c8,%eax
810013ca:	ba c8 38 00 81       	mov    $0x810038c8,%edx
810013cf:	89 50 0c             	mov    %edx,0xc(%eax)
810013d2:	ba c8 38 00 81       	mov    $0x810038c8,%edx
810013d7:	8b 40 0c             	mov    0xc(%eax),%eax
810013da:	89 42 08             	mov    %eax,0x8(%edx)
810013dd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810013e1:	78 32                	js     81001415 <_malloc_r+0x356>
810013e3:	8b 55 f4             	mov    -0xc(%ebp),%edx
810013e6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013e9:	01 d0                	add    %edx,%eax
810013eb:	8b 50 04             	mov    0x4(%eax),%edx
810013ee:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810013f1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810013f4:	01 c8                	add    %ecx,%eax
810013f6:	83 ca 01             	or     $0x1,%edx
810013f9:	89 50 04             	mov    %edx,0x4(%eax)
810013fc:	83 ec 0c             	sub    $0xc,%esp
810013ff:	ff 75 08             	pushl  0x8(%ebp)
81001402:	e8 e4 06 00 00       	call   81001aeb <__malloc_unlock>
81001407:	83 c4 10             	add    $0x10,%esp
8100140a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100140d:	83 c0 08             	add    $0x8,%eax
81001410:	e9 c7 04 00 00       	jmp    810018dc <_malloc_r+0x81d>
81001415:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
8100141c:	77 7f                	ja     8100149d <_malloc_r+0x3de>
8100141e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001421:	c1 e8 03             	shr    $0x3,%eax
81001424:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001427:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
8100142c:	8b 58 04             	mov    0x4(%eax),%ebx
8100142f:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001432:	8d 50 03             	lea    0x3(%eax),%edx
81001435:	85 c0                	test   %eax,%eax
81001437:	0f 48 c2             	cmovs  %edx,%eax
8100143a:	c1 f8 02             	sar    $0x2,%eax
8100143d:	ba 01 00 00 00       	mov    $0x1,%edx
81001442:	89 c1                	mov    %eax,%ecx
81001444:	d3 e2                	shl    %cl,%edx
81001446:	89 d0                	mov    %edx,%eax
81001448:	ba c0 38 00 81       	mov    $0x810038c0,%edx
8100144d:	09 d8                	or     %ebx,%eax
8100144f:	89 42 04             	mov    %eax,0x4(%edx)
81001452:	8b 45 c8             	mov    -0x38(%ebp),%eax
81001455:	83 c0 01             	add    $0x1,%eax
81001458:	01 c0                	add    %eax,%eax
8100145a:	c1 e0 02             	shl    $0x2,%eax
8100145d:	05 c0 38 00 81       	add    $0x810038c0,%eax
81001462:	83 e8 08             	sub    $0x8,%eax
81001465:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001468:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100146b:	8b 40 08             	mov    0x8(%eax),%eax
8100146e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001471:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001474:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001477:	89 50 0c             	mov    %edx,0xc(%eax)
8100147a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100147d:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001480:	89 50 08             	mov    %edx,0x8(%eax)
81001483:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001486:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001489:	89 50 08             	mov    %edx,0x8(%eax)
8100148c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100148f:	8b 50 08             	mov    0x8(%eax),%edx
81001492:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001495:	89 50 0c             	mov    %edx,0xc(%eax)
81001498:	e9 2f 01 00 00       	jmp    810015cc <_malloc_r+0x50d>
8100149d:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014a0:	c1 e8 09             	shr    $0x9,%eax
810014a3:	85 c0                	test   %eax,%eax
810014a5:	75 08                	jne    810014af <_malloc_r+0x3f0>
810014a7:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014aa:	c1 e8 03             	shr    $0x3,%eax
810014ad:	eb 77                	jmp    81001526 <_malloc_r+0x467>
810014af:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014b2:	c1 e8 09             	shr    $0x9,%eax
810014b5:	83 f8 04             	cmp    $0x4,%eax
810014b8:	77 0b                	ja     810014c5 <_malloc_r+0x406>
810014ba:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014bd:	c1 e8 06             	shr    $0x6,%eax
810014c0:	83 c0 38             	add    $0x38,%eax
810014c3:	eb 61                	jmp    81001526 <_malloc_r+0x467>
810014c5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014c8:	c1 e8 09             	shr    $0x9,%eax
810014cb:	83 f8 14             	cmp    $0x14,%eax
810014ce:	77 0b                	ja     810014db <_malloc_r+0x41c>
810014d0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014d3:	c1 e8 09             	shr    $0x9,%eax
810014d6:	83 c0 5b             	add    $0x5b,%eax
810014d9:	eb 4b                	jmp    81001526 <_malloc_r+0x467>
810014db:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014de:	c1 e8 09             	shr    $0x9,%eax
810014e1:	83 f8 54             	cmp    $0x54,%eax
810014e4:	77 0b                	ja     810014f1 <_malloc_r+0x432>
810014e6:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014e9:	c1 e8 0c             	shr    $0xc,%eax
810014ec:	83 c0 6e             	add    $0x6e,%eax
810014ef:	eb 35                	jmp    81001526 <_malloc_r+0x467>
810014f1:	8b 45 cc             	mov    -0x34(%ebp),%eax
810014f4:	c1 e8 09             	shr    $0x9,%eax
810014f7:	3d 54 01 00 00       	cmp    $0x154,%eax
810014fc:	77 0b                	ja     81001509 <_malloc_r+0x44a>
810014fe:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001501:	c1 e8 0f             	shr    $0xf,%eax
81001504:	83 c0 77             	add    $0x77,%eax
81001507:	eb 1d                	jmp    81001526 <_malloc_r+0x467>
81001509:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100150c:	c1 e8 09             	shr    $0x9,%eax
8100150f:	3d 54 05 00 00       	cmp    $0x554,%eax
81001514:	77 0b                	ja     81001521 <_malloc_r+0x462>
81001516:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001519:	c1 e8 12             	shr    $0x12,%eax
8100151c:	83 c0 7c             	add    $0x7c,%eax
8100151f:	eb 05                	jmp    81001526 <_malloc_r+0x467>
81001521:	b8 7e 00 00 00       	mov    $0x7e,%eax
81001526:	89 45 c8             	mov    %eax,-0x38(%ebp)
81001529:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100152c:	83 c0 01             	add    $0x1,%eax
8100152f:	01 c0                	add    %eax,%eax
81001531:	c1 e0 02             	shl    $0x2,%eax
81001534:	05 c0 38 00 81       	add    $0x810038c0,%eax
81001539:	83 e8 08             	sub    $0x8,%eax
8100153c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100153f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001542:	8b 40 08             	mov    0x8(%eax),%eax
81001545:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001548:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100154b:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100154e:	75 36                	jne    81001586 <_malloc_r+0x4c7>
81001550:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001555:	8b 58 04             	mov    0x4(%eax),%ebx
81001558:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100155b:	8d 50 03             	lea    0x3(%eax),%edx
8100155e:	85 c0                	test   %eax,%eax
81001560:	0f 48 c2             	cmovs  %edx,%eax
81001563:	c1 f8 02             	sar    $0x2,%eax
81001566:	ba 01 00 00 00       	mov    $0x1,%edx
8100156b:	89 c1                	mov    %eax,%ecx
8100156d:	d3 e2                	shl    %cl,%edx
8100156f:	89 d0                	mov    %edx,%eax
81001571:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81001576:	09 d8                	or     %ebx,%eax
81001578:	89 42 04             	mov    %eax,0x4(%edx)
8100157b:	eb 28                	jmp    810015a5 <_malloc_r+0x4e6>
8100157d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001580:	8b 40 08             	mov    0x8(%eax),%eax
81001583:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001586:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001589:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100158c:	74 0e                	je     8100159c <_malloc_r+0x4dd>
8100158e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001591:	8b 40 04             	mov    0x4(%eax),%eax
81001594:	83 e0 fc             	and    $0xfffffffc,%eax
81001597:	39 45 cc             	cmp    %eax,-0x34(%ebp)
8100159a:	72 e1                	jb     8100157d <_malloc_r+0x4be>
8100159c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100159f:	8b 40 0c             	mov    0xc(%eax),%eax
810015a2:	89 45 d8             	mov    %eax,-0x28(%ebp)
810015a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015a8:	8b 55 d8             	mov    -0x28(%ebp),%edx
810015ab:	89 50 0c             	mov    %edx,0xc(%eax)
810015ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810015b1:	8b 55 dc             	mov    -0x24(%ebp),%edx
810015b4:	89 50 08             	mov    %edx,0x8(%eax)
810015b7:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015ba:	8b 55 f4             	mov    -0xc(%ebp),%edx
810015bd:	89 50 08             	mov    %edx,0x8(%eax)
810015c0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810015c3:	8b 50 08             	mov    0x8(%eax),%edx
810015c6:	8b 45 dc             	mov    -0x24(%ebp),%eax
810015c9:	89 50 0c             	mov    %edx,0xc(%eax)
810015cc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015cf:	8d 50 03             	lea    0x3(%eax),%edx
810015d2:	85 c0                	test   %eax,%eax
810015d4:	0f 48 c2             	cmovs  %edx,%eax
810015d7:	c1 f8 02             	sar    $0x2,%eax
810015da:	ba 01 00 00 00       	mov    $0x1,%edx
810015df:	89 c1                	mov    %eax,%ecx
810015e1:	d3 e2                	shl    %cl,%edx
810015e3:	89 d0                	mov    %edx,%eax
810015e5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810015e8:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
810015ed:	8b 40 04             	mov    0x4(%eax),%eax
810015f0:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810015f3:	0f 87 13 02 00 00    	ja     8100180c <_malloc_r+0x74d>
810015f9:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
810015fe:	8b 40 04             	mov    0x4(%eax),%eax
81001601:	23 45 e4             	and    -0x1c(%ebp),%eax
81001604:	85 c0                	test   %eax,%eax
81001606:	75 27                	jne    8100162f <_malloc_r+0x570>
81001608:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100160b:	83 e0 fc             	and    $0xfffffffc,%eax
8100160e:	83 c0 04             	add    $0x4,%eax
81001611:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001614:	d1 65 e4             	shll   -0x1c(%ebp)
81001617:	eb 07                	jmp    81001620 <_malloc_r+0x561>
81001619:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
8100161d:	d1 65 e4             	shll   -0x1c(%ebp)
81001620:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001625:	8b 40 04             	mov    0x4(%eax),%eax
81001628:	23 45 e4             	and    -0x1c(%ebp),%eax
8100162b:	85 c0                	test   %eax,%eax
8100162d:	74 ea                	je     81001619 <_malloc_r+0x55a>
8100162f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001632:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001635:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001638:	83 c0 01             	add    $0x1,%eax
8100163b:	01 c0                	add    %eax,%eax
8100163d:	c1 e0 02             	shl    $0x2,%eax
81001640:	05 c0 38 00 81       	add    $0x810038c0,%eax
81001645:	83 e8 08             	sub    $0x8,%eax
81001648:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100164b:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100164e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001651:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001654:	8b 40 0c             	mov    0xc(%eax),%eax
81001657:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100165a:	e9 22 01 00 00       	jmp    81001781 <_malloc_r+0x6c2>
8100165f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001662:	8b 40 04             	mov    0x4(%eax),%eax
81001665:	83 e0 fc             	and    $0xfffffffc,%eax
81001668:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100166b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100166e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81001671:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001674:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001678:	0f 8e 9e 00 00 00    	jle    8100171c <_malloc_r+0x65d>
8100167e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001681:	8b 45 d0             	mov    -0x30(%ebp),%eax
81001684:	01 d0                	add    %edx,%eax
81001686:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001689:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100168c:	83 c8 01             	or     $0x1,%eax
8100168f:	89 c2                	mov    %eax,%edx
81001691:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001694:	89 50 04             	mov    %edx,0x4(%eax)
81001697:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100169a:	8b 40 0c             	mov    0xc(%eax),%eax
8100169d:	89 45 d8             	mov    %eax,-0x28(%ebp)
810016a0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810016a3:	8b 40 08             	mov    0x8(%eax),%eax
810016a6:	89 45 dc             	mov    %eax,-0x24(%ebp)
810016a9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810016ac:	8b 55 d8             	mov    -0x28(%ebp),%edx
810016af:	89 50 0c             	mov    %edx,0xc(%eax)
810016b2:	8b 45 d8             	mov    -0x28(%ebp),%eax
810016b5:	8b 55 dc             	mov    -0x24(%ebp),%edx
810016b8:	89 50 08             	mov    %edx,0x8(%eax)
810016bb:	b8 c8 38 00 81       	mov    $0x810038c8,%eax
810016c0:	8b 55 c4             	mov    -0x3c(%ebp),%edx
810016c3:	89 50 0c             	mov    %edx,0xc(%eax)
810016c6:	ba c8 38 00 81       	mov    $0x810038c8,%edx
810016cb:	8b 40 0c             	mov    0xc(%eax),%eax
810016ce:	89 42 08             	mov    %eax,0x8(%edx)
810016d1:	ba c8 38 00 81       	mov    $0x810038c8,%edx
810016d6:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016d9:	89 50 0c             	mov    %edx,0xc(%eax)
810016dc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016df:	8b 50 0c             	mov    0xc(%eax),%edx
810016e2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016e5:	89 50 08             	mov    %edx,0x8(%eax)
810016e8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810016eb:	83 c8 01             	or     $0x1,%eax
810016ee:	89 c2                	mov    %eax,%edx
810016f0:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016f3:	89 50 04             	mov    %edx,0x4(%eax)
810016f6:	8b 55 e8             	mov    -0x18(%ebp),%edx
810016f9:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810016fc:	01 c2                	add    %eax,%edx
810016fe:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001701:	89 02                	mov    %eax,(%edx)
81001703:	83 ec 0c             	sub    $0xc,%esp
81001706:	ff 75 08             	pushl  0x8(%ebp)
81001709:	e8 dd 03 00 00       	call   81001aeb <__malloc_unlock>
8100170e:	83 c4 10             	add    $0x10,%esp
81001711:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001714:	83 c0 08             	add    $0x8,%eax
81001717:	e9 c0 01 00 00       	jmp    810018dc <_malloc_r+0x81d>
8100171c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81001720:	78 56                	js     81001778 <_malloc_r+0x6b9>
81001722:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001725:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001728:	01 d0                	add    %edx,%eax
8100172a:	8b 50 04             	mov    0x4(%eax),%edx
8100172d:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001730:	8b 45 cc             	mov    -0x34(%ebp),%eax
81001733:	01 c8                	add    %ecx,%eax
81001735:	83 ca 01             	or     $0x1,%edx
81001738:	89 50 04             	mov    %edx,0x4(%eax)
8100173b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100173e:	8b 40 0c             	mov    0xc(%eax),%eax
81001741:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001744:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001747:	8b 40 08             	mov    0x8(%eax),%eax
8100174a:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100174d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001750:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001753:	89 50 0c             	mov    %edx,0xc(%eax)
81001756:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001759:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100175c:	89 50 08             	mov    %edx,0x8(%eax)
8100175f:	83 ec 0c             	sub    $0xc,%esp
81001762:	ff 75 08             	pushl  0x8(%ebp)
81001765:	e8 81 03 00 00       	call   81001aeb <__malloc_unlock>
8100176a:	83 c4 10             	add    $0x10,%esp
8100176d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001770:	83 c0 08             	add    $0x8,%eax
81001773:	e9 64 01 00 00       	jmp    810018dc <_malloc_r+0x81d>
81001778:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100177b:	8b 40 0c             	mov    0xc(%eax),%eax
8100177e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001781:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001784:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81001787:	0f 85 d2 fe ff ff    	jne    8100165f <_malloc_r+0x5a0>
8100178d:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81001791:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81001795:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001798:	83 e0 03             	and    $0x3,%eax
8100179b:	85 c0                	test   %eax,%eax
8100179d:	0f 85 ae fe ff ff    	jne    81001651 <_malloc_r+0x592>
810017a3:	8b 45 e0             	mov    -0x20(%ebp),%eax
810017a6:	83 e0 03             	and    $0x3,%eax
810017a9:	85 c0                	test   %eax,%eax
810017ab:	75 19                	jne    810017c6 <_malloc_r+0x707>
810017ad:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
810017b2:	8b 48 04             	mov    0x4(%eax),%ecx
810017b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810017b8:	f7 d0                	not    %eax
810017ba:	ba c0 38 00 81       	mov    $0x810038c0,%edx
810017bf:	21 c8                	and    %ecx,%eax
810017c1:	89 42 04             	mov    %eax,0x4(%edx)
810017c4:	eb 13                	jmp    810017d9 <_malloc_r+0x71a>
810017c6:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
810017ca:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
810017ce:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810017d1:	8b 40 08             	mov    0x8(%eax),%eax
810017d4:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810017d7:	74 ca                	je     810017a3 <_malloc_r+0x6e4>
810017d9:	d1 65 e4             	shll   -0x1c(%ebp)
810017dc:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
810017e1:	8b 40 04             	mov    0x4(%eax),%eax
810017e4:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810017e7:	77 23                	ja     8100180c <_malloc_r+0x74d>
810017e9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810017ed:	74 1d                	je     8100180c <_malloc_r+0x74d>
810017ef:	eb 07                	jmp    810017f8 <_malloc_r+0x739>
810017f1:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810017f5:	d1 65 e4             	shll   -0x1c(%ebp)
810017f8:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
810017fd:	8b 40 04             	mov    0x4(%eax),%eax
81001800:	23 45 e4             	and    -0x1c(%ebp),%eax
81001803:	85 c0                	test   %eax,%eax
81001805:	74 ea                	je     810017f1 <_malloc_r+0x732>
81001807:	e9 23 fe ff ff       	jmp    8100162f <_malloc_r+0x570>
8100180c:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001811:	8b 40 08             	mov    0x8(%eax),%eax
81001814:	8b 40 04             	mov    0x4(%eax),%eax
81001817:	83 e0 fc             	and    $0xfffffffc,%eax
8100181a:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100181d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001820:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001825:	8b 40 08             	mov    0x8(%eax),%eax
81001828:	8b 40 04             	mov    0x4(%eax),%eax
8100182b:	83 e0 fc             	and    $0xfffffffc,%eax
8100182e:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81001831:	77 06                	ja     81001839 <_malloc_r+0x77a>
81001833:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001837:	7f 53                	jg     8100188c <_malloc_r+0x7cd>
81001839:	83 ec 08             	sub    $0x8,%esp
8100183c:	ff 75 d0             	pushl  -0x30(%ebp)
8100183f:	ff 75 08             	pushl  0x8(%ebp)
81001842:	e8 e5 f5 ff ff       	call   81000e2c <malloc_extend_top>
81001847:	83 c4 10             	add    $0x10,%esp
8100184a:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
8100184f:	8b 40 08             	mov    0x8(%eax),%eax
81001852:	8b 40 04             	mov    0x4(%eax),%eax
81001855:	83 e0 fc             	and    $0xfffffffc,%eax
81001858:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100185b:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100185e:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001863:	8b 40 08             	mov    0x8(%eax),%eax
81001866:	8b 40 04             	mov    0x4(%eax),%eax
81001869:	83 e0 fc             	and    $0xfffffffc,%eax
8100186c:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100186f:	77 06                	ja     81001877 <_malloc_r+0x7b8>
81001871:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81001875:	7f 15                	jg     8100188c <_malloc_r+0x7cd>
81001877:	83 ec 0c             	sub    $0xc,%esp
8100187a:	ff 75 08             	pushl  0x8(%ebp)
8100187d:	e8 69 02 00 00       	call   81001aeb <__malloc_unlock>
81001882:	83 c4 10             	add    $0x10,%esp
81001885:	b8 00 00 00 00       	mov    $0x0,%eax
8100188a:	eb 50                	jmp    810018dc <_malloc_r+0x81d>
8100188c:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001891:	8b 40 08             	mov    0x8(%eax),%eax
81001894:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001897:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100189a:	83 c8 01             	or     $0x1,%eax
8100189d:	89 c2                	mov    %eax,%edx
8100189f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018a2:	89 50 04             	mov    %edx,0x4(%eax)
810018a5:	ba c0 38 00 81       	mov    $0x810038c0,%edx
810018aa:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810018ad:	8b 45 d0             	mov    -0x30(%ebp),%eax
810018b0:	01 c8                	add    %ecx,%eax
810018b2:	89 42 08             	mov    %eax,0x8(%edx)
810018b5:	8b 45 e8             	mov    -0x18(%ebp),%eax
810018b8:	83 c8 01             	or     $0x1,%eax
810018bb:	89 c2                	mov    %eax,%edx
810018bd:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
810018c2:	8b 40 08             	mov    0x8(%eax),%eax
810018c5:	89 50 04             	mov    %edx,0x4(%eax)
810018c8:	83 ec 0c             	sub    $0xc,%esp
810018cb:	ff 75 08             	pushl  0x8(%ebp)
810018ce:	e8 18 02 00 00       	call   81001aeb <__malloc_unlock>
810018d3:	83 c4 10             	add    $0x10,%esp
810018d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810018d9:	83 c0 08             	add    $0x8,%eax
810018dc:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810018df:	c9                   	leave  
810018e0:	c3                   	ret    
810018e1:	66 90                	xchg   %ax,%ax
810018e3:	66 90                	xchg   %ax,%ax
810018e5:	66 90                	xchg   %ax,%ax
810018e7:	66 90                	xchg   %ax,%ax
810018e9:	66 90                	xchg   %ax,%ax
810018eb:	66 90                	xchg   %ax,%ax
810018ed:	66 90                	xchg   %ax,%ax
810018ef:	90                   	nop

810018f0 <memchr>:
810018f0:	55                   	push   %ebp
810018f1:	89 e5                	mov    %esp,%ebp
810018f3:	57                   	push   %edi
810018f4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810018f8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810018fb:	8b 7d 08             	mov    0x8(%ebp),%edi
810018fe:	31 d2                	xor    %edx,%edx
81001900:	85 c9                	test   %ecx,%ecx
81001902:	74 79                	je     8100197d <L20>
81001904:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100190a:	74 28                	je     81001934 <L5>
8100190c:	3a 07                	cmp    (%edi),%al
8100190e:	74 6a                	je     8100197a <L15>
81001910:	47                   	inc    %edi
81001911:	49                   	dec    %ecx
81001912:	74 69                	je     8100197d <L20>
81001914:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100191a:	74 18                	je     81001934 <L5>
8100191c:	3a 07                	cmp    (%edi),%al
8100191e:	74 5a                	je     8100197a <L15>
81001920:	47                   	inc    %edi
81001921:	49                   	dec    %ecx
81001922:	74 59                	je     8100197d <L20>
81001924:	f7 c7 03 00 00 00    	test   $0x3,%edi
8100192a:	74 08                	je     81001934 <L5>
8100192c:	3a 07                	cmp    (%edi),%al
8100192e:	74 4a                	je     8100197a <L15>
81001930:	47                   	inc    %edi
81001931:	49                   	dec    %ecx
81001932:	74 49                	je     8100197d <L20>

81001934 <L5>:
81001934:	88 c4                	mov    %al,%ah
81001936:	89 c2                	mov    %eax,%edx
81001938:	c1 e2 10             	shl    $0x10,%edx
8100193b:	09 d0                	or     %edx,%eax
8100193d:	53                   	push   %ebx
8100193e:	66 90                	xchg   %ax,%ax

81001940 <L8>:
81001940:	83 e9 04             	sub    $0x4,%ecx
81001943:	72 1c                	jb     81001961 <L9>
81001945:	8b 17                	mov    (%edi),%edx
81001947:	83 c7 04             	add    $0x4,%edi
8100194a:	31 c2                	xor    %eax,%edx
8100194c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81001952:	f7 d2                	not    %edx
81001954:	21 d3                	and    %edx,%ebx
81001956:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
8100195c:	74 e2                	je     81001940 <L8>
8100195e:	83 ef 04             	sub    $0x4,%edi

81001961 <L9>:
81001961:	5b                   	pop    %ebx
81001962:	31 d2                	xor    %edx,%edx
81001964:	83 c1 04             	add    $0x4,%ecx
81001967:	74 14                	je     8100197d <L20>
81001969:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81001970 <L10>:
81001970:	3a 07                	cmp    (%edi),%al
81001972:	74 06                	je     8100197a <L15>
81001974:	47                   	inc    %edi
81001975:	49                   	dec    %ecx
81001976:	75 f8                	jne    81001970 <L10>
81001978:	31 ff                	xor    %edi,%edi

8100197a <L15>:
8100197a:	4a                   	dec    %edx
8100197b:	21 fa                	and    %edi,%edx

8100197d <L20>:
8100197d:	89 d0                	mov    %edx,%eax
8100197f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001982:	5f                   	pop    %edi
81001983:	c9                   	leave  
81001984:	c3                   	ret    
81001985:	66 90                	xchg   %ax,%ax
81001987:	90                   	nop

81001988 <memcpy>:
81001988:	55                   	push   %ebp
81001989:	89 e5                	mov    %esp,%ebp
8100198b:	56                   	push   %esi
8100198c:	57                   	push   %edi
8100198d:	53                   	push   %ebx
8100198e:	8b 7d 08             	mov    0x8(%ebp),%edi
81001991:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001994:	8b 75 0c             	mov    0xc(%ebp),%esi
81001997:	fc                   	cld    
81001998:	83 f9 08             	cmp    $0x8,%ecx
8100199b:	76 26                	jbe    810019c3 <memcpy+0x3b>
8100199d:	89 fa                	mov    %edi,%edx
8100199f:	89 cb                	mov    %ecx,%ebx
810019a1:	83 e2 03             	and    $0x3,%edx
810019a4:	74 10                	je     810019b6 <memcpy+0x2e>
810019a6:	b9 04 00 00 00       	mov    $0x4,%ecx
810019ab:	29 d1                	sub    %edx,%ecx
810019ad:	83 e1 03             	and    $0x3,%ecx
810019b0:	29 cb                	sub    %ecx,%ebx
810019b2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810019b4:	89 d9                	mov    %ebx,%ecx
810019b6:	c1 e9 02             	shr    $0x2,%ecx
810019b9:	8d 76 00             	lea    0x0(%esi),%esi
810019bc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
810019be:	89 d9                	mov    %ebx,%ecx
810019c0:	83 e1 03             	and    $0x3,%ecx
810019c3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
810019c5:	8b 45 08             	mov    0x8(%ebp),%eax
810019c8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810019cb:	5b                   	pop    %ebx
810019cc:	5f                   	pop    %edi
810019cd:	5e                   	pop    %esi
810019ce:	c9                   	leave  
810019cf:	c3                   	ret    

810019d0 <memmove>:
810019d0:	55                   	push   %ebp
810019d1:	89 e5                	mov    %esp,%ebp
810019d3:	56                   	push   %esi
810019d4:	57                   	push   %edi
810019d5:	53                   	push   %ebx
810019d6:	8b 7d 08             	mov    0x8(%ebp),%edi
810019d9:	8b 4d 10             	mov    0x10(%ebp),%ecx
810019dc:	8b 75 0c             	mov    0xc(%ebp),%esi
810019df:	fc                   	cld    
810019e0:	39 fe                	cmp    %edi,%esi
810019e2:	73 43                	jae    81001a27 <memmove+0x57>
810019e4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
810019e8:	39 df                	cmp    %ebx,%edi
810019ea:	77 3b                	ja     81001a27 <memmove+0x57>
810019ec:	01 ce                	add    %ecx,%esi
810019ee:	01 cf                	add    %ecx,%edi
810019f0:	fd                   	std    
810019f1:	83 f9 08             	cmp    $0x8,%ecx
810019f4:	76 2b                	jbe    81001a21 <memmove+0x51>
810019f6:	89 fa                	mov    %edi,%edx
810019f8:	89 cb                	mov    %ecx,%ebx
810019fa:	83 e2 03             	and    $0x3,%edx
810019fd:	74 0c                	je     81001a0b <memmove+0x3b>
810019ff:	89 d1                	mov    %edx,%ecx
81001a01:	4e                   	dec    %esi
81001a02:	4f                   	dec    %edi
81001a03:	29 cb                	sub    %ecx,%ebx
81001a05:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a07:	89 d9                	mov    %ebx,%ecx
81001a09:	46                   	inc    %esi
81001a0a:	47                   	inc    %edi
81001a0b:	c1 e9 02             	shr    $0x2,%ecx
81001a0e:	83 ee 04             	sub    $0x4,%esi
81001a11:	83 ef 04             	sub    $0x4,%edi
81001a14:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a16:	83 c6 04             	add    $0x4,%esi
81001a19:	83 c7 04             	add    $0x4,%edi
81001a1c:	89 d9                	mov    %ebx,%ecx
81001a1e:	83 e1 03             	and    $0x3,%ecx
81001a21:	4e                   	dec    %esi
81001a22:	4f                   	dec    %edi
81001a23:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a25:	eb 2a                	jmp    81001a51 <memmove+0x81>
81001a27:	83 f9 08             	cmp    $0x8,%ecx
81001a2a:	76 23                	jbe    81001a4f <memmove+0x7f>
81001a2c:	89 fa                	mov    %edi,%edx
81001a2e:	89 cb                	mov    %ecx,%ebx
81001a30:	83 e2 03             	and    $0x3,%edx
81001a33:	74 10                	je     81001a45 <memmove+0x75>
81001a35:	b9 04 00 00 00       	mov    $0x4,%ecx
81001a3a:	29 d1                	sub    %edx,%ecx
81001a3c:	83 e1 03             	and    $0x3,%ecx
81001a3f:	29 cb                	sub    %ecx,%ebx
81001a41:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a43:	89 d9                	mov    %ebx,%ecx
81001a45:	c1 e9 02             	shr    $0x2,%ecx
81001a48:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81001a4a:	89 d9                	mov    %ebx,%ecx
81001a4c:	83 e1 03             	and    $0x3,%ecx
81001a4f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81001a51:	8b 45 08             	mov    0x8(%ebp),%eax
81001a54:	fc                   	cld    
81001a55:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001a58:	5b                   	pop    %ebx
81001a59:	5f                   	pop    %edi
81001a5a:	5e                   	pop    %esi
81001a5b:	c9                   	leave  
81001a5c:	c3                   	ret    

81001a5d <memset>:
81001a5d:	55                   	push   %ebp
81001a5e:	89 e5                	mov    %esp,%ebp
81001a60:	57                   	push   %edi
81001a61:	8b 7d 08             	mov    0x8(%ebp),%edi
81001a64:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81001a68:	8b 4d 10             	mov    0x10(%ebp),%ecx
81001a6b:	fc                   	cld    
81001a6c:	83 f9 10             	cmp    $0x10,%ecx
81001a6f:	76 69                	jbe    81001ada <memset+0x7d>
81001a71:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a77:	74 4c                	je     81001ac5 <memset+0x68>
81001a79:	88 07                	mov    %al,(%edi)
81001a7b:	47                   	inc    %edi
81001a7c:	49                   	dec    %ecx
81001a7d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a83:	74 40                	je     81001ac5 <memset+0x68>
81001a85:	88 07                	mov    %al,(%edi)
81001a87:	47                   	inc    %edi
81001a88:	49                   	dec    %ecx
81001a89:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a8f:	74 34                	je     81001ac5 <memset+0x68>
81001a91:	88 07                	mov    %al,(%edi)
81001a93:	47                   	inc    %edi
81001a94:	49                   	dec    %ecx
81001a95:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001a9b:	74 28                	je     81001ac5 <memset+0x68>
81001a9d:	88 07                	mov    %al,(%edi)
81001a9f:	47                   	inc    %edi
81001aa0:	49                   	dec    %ecx
81001aa1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001aa7:	74 1c                	je     81001ac5 <memset+0x68>
81001aa9:	88 07                	mov    %al,(%edi)
81001aab:	47                   	inc    %edi
81001aac:	49                   	dec    %ecx
81001aad:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001ab3:	74 10                	je     81001ac5 <memset+0x68>
81001ab5:	88 07                	mov    %al,(%edi)
81001ab7:	47                   	inc    %edi
81001ab8:	49                   	dec    %ecx
81001ab9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81001abf:	74 04                	je     81001ac5 <memset+0x68>
81001ac1:	88 07                	mov    %al,(%edi)
81001ac3:	47                   	inc    %edi
81001ac4:	49                   	dec    %ecx
81001ac5:	88 c4                	mov    %al,%ah
81001ac7:	89 c2                	mov    %eax,%edx
81001ac9:	c1 e2 10             	shl    $0x10,%edx
81001acc:	09 d0                	or     %edx,%eax
81001ace:	89 ca                	mov    %ecx,%edx
81001ad0:	c1 e9 02             	shr    $0x2,%ecx
81001ad3:	83 e2 03             	and    $0x3,%edx
81001ad6:	f3 ab                	rep stos %eax,%es:(%edi)
81001ad8:	89 d1                	mov    %edx,%ecx
81001ada:	f3 aa                	rep stos %al,%es:(%edi)
81001adc:	8b 45 08             	mov    0x8(%ebp),%eax
81001adf:	8d 65 fc             	lea    -0x4(%ebp),%esp
81001ae2:	5f                   	pop    %edi
81001ae3:	c9                   	leave  
81001ae4:	c3                   	ret    

81001ae5 <__malloc_lock>:
81001ae5:	55                   	push   %ebp
81001ae6:	89 e5                	mov    %esp,%ebp
81001ae8:	90                   	nop
81001ae9:	5d                   	pop    %ebp
81001aea:	c3                   	ret    

81001aeb <__malloc_unlock>:
81001aeb:	55                   	push   %ebp
81001aec:	89 e5                	mov    %esp,%ebp
81001aee:	90                   	nop
81001aef:	5d                   	pop    %ebp
81001af0:	c3                   	ret    

81001af1 <_realloc_r>:
81001af1:	55                   	push   %ebp
81001af2:	89 e5                	mov    %esp,%ebp
81001af4:	83 ec 78             	sub    $0x78,%esp
81001af7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001afb:	75 16                	jne    81001b13 <_realloc_r+0x22>
81001afd:	83 ec 08             	sub    $0x8,%esp
81001b00:	ff 75 10             	pushl  0x10(%ebp)
81001b03:	ff 75 08             	pushl  0x8(%ebp)
81001b06:	e8 b4 f5 ff ff       	call   810010bf <_malloc_r>
81001b0b:	83 c4 10             	add    $0x10,%esp
81001b0e:	e9 b6 08 00 00       	jmp    810023c9 <_realloc_r+0x8d8>
81001b13:	83 ec 0c             	sub    $0xc,%esp
81001b16:	ff 75 08             	pushl  0x8(%ebp)
81001b19:	e8 c7 ff ff ff       	call   81001ae5 <__malloc_lock>
81001b1e:	83 c4 10             	add    $0x10,%esp
81001b21:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b24:	83 e8 08             	sub    $0x8,%eax
81001b27:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81001b2a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b2d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b30:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001b33:	8b 40 04             	mov    0x4(%eax),%eax
81001b36:	83 e0 fc             	and    $0xfffffffc,%eax
81001b39:	89 45 c0             	mov    %eax,-0x40(%ebp)
81001b3c:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001b3f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001b42:	8b 45 10             	mov    0x10(%ebp),%eax
81001b45:	83 c0 0b             	add    $0xb,%eax
81001b48:	83 f8 16             	cmp    $0x16,%eax
81001b4b:	76 0b                	jbe    81001b58 <_realloc_r+0x67>
81001b4d:	8b 45 10             	mov    0x10(%ebp),%eax
81001b50:	83 c0 0b             	add    $0xb,%eax
81001b53:	83 e0 f8             	and    $0xfffffff8,%eax
81001b56:	eb 05                	jmp    81001b5d <_realloc_r+0x6c>
81001b58:	b8 10 00 00 00       	mov    $0x10,%eax
81001b5d:	89 45 bc             	mov    %eax,-0x44(%ebp)
81001b60:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001b63:	85 c0                	test   %eax,%eax
81001b65:	78 08                	js     81001b6f <_realloc_r+0x7e>
81001b67:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001b6a:	3b 45 10             	cmp    0x10(%ebp),%eax
81001b6d:	73 13                	jae    81001b82 <_realloc_r+0x91>
81001b6f:	8b 45 08             	mov    0x8(%ebp),%eax
81001b72:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81001b78:	b8 00 00 00 00       	mov    $0x0,%eax
81001b7d:	e9 47 08 00 00       	jmp    810023c9 <_realloc_r+0x8d8>
81001b82:	8b 55 c0             	mov    -0x40(%ebp),%edx
81001b85:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001b88:	39 c2                	cmp    %eax,%edx
81001b8a:	0f 8d 8b 07 00 00    	jge    8100231b <_realloc_r+0x82a>
81001b90:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81001b93:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001b96:	01 d0                	add    %edx,%eax
81001b98:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b9b:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001ba0:	8b 40 08             	mov    0x8(%eax),%eax
81001ba3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001ba6:	74 1e                	je     81001bc6 <_realloc_r+0xd5>
81001ba8:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001bab:	8b 40 04             	mov    0x4(%eax),%eax
81001bae:	83 e0 fe             	and    $0xfffffffe,%eax
81001bb1:	89 c2                	mov    %eax,%edx
81001bb3:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001bb6:	01 d0                	add    %edx,%eax
81001bb8:	8b 40 04             	mov    0x4(%eax),%eax
81001bbb:	83 e0 01             	and    $0x1,%eax
81001bbe:	85 c0                	test   %eax,%eax
81001bc0:	0f 85 ca 00 00 00    	jne    81001c90 <_realloc_r+0x19f>
81001bc6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001bc9:	8b 40 04             	mov    0x4(%eax),%eax
81001bcc:	83 e0 fc             	and    $0xfffffffc,%eax
81001bcf:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001bd2:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001bd7:	8b 40 08             	mov    0x8(%eax),%eax
81001bda:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001bdd:	75 71                	jne    81001c50 <_realloc_r+0x15f>
81001bdf:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001be2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001be5:	01 d0                	add    %edx,%eax
81001be7:	89 c2                	mov    %eax,%edx
81001be9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001bec:	83 c0 10             	add    $0x10,%eax
81001bef:	39 c2                	cmp    %eax,%edx
81001bf1:	0f 8c a9 00 00 00    	jl     81001ca0 <_realloc_r+0x1af>
81001bf7:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001bfa:	01 45 f0             	add    %eax,-0x10(%ebp)
81001bfd:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81001c02:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
81001c05:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c08:	01 c8                	add    %ecx,%eax
81001c0a:	89 42 08             	mov    %eax,0x8(%edx)
81001c0d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c10:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001c13:	89 c2                	mov    %eax,%edx
81001c15:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001c1a:	8b 40 08             	mov    0x8(%eax),%eax
81001c1d:	83 ca 01             	or     $0x1,%edx
81001c20:	89 50 04             	mov    %edx,0x4(%eax)
81001c23:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c26:	8b 40 04             	mov    0x4(%eax),%eax
81001c29:	83 e0 01             	and    $0x1,%eax
81001c2c:	0b 45 bc             	or     -0x44(%ebp),%eax
81001c2f:	89 c2                	mov    %eax,%edx
81001c31:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c34:	89 50 04             	mov    %edx,0x4(%eax)
81001c37:	83 ec 0c             	sub    $0xc,%esp
81001c3a:	ff 75 08             	pushl  0x8(%ebp)
81001c3d:	e8 a9 fe ff ff       	call   81001aeb <__malloc_unlock>
81001c42:	83 c4 10             	add    $0x10,%esp
81001c45:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001c48:	83 c0 08             	add    $0x8,%eax
81001c4b:	e9 79 07 00 00       	jmp    810023c9 <_realloc_r+0x8d8>
81001c50:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001c53:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001c56:	01 d0                	add    %edx,%eax
81001c58:	89 c2                	mov    %eax,%edx
81001c5a:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001c5d:	39 c2                	cmp    %eax,%edx
81001c5f:	7c 3f                	jl     81001ca0 <_realloc_r+0x1af>
81001c61:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c64:	8b 40 0c             	mov    0xc(%eax),%eax
81001c67:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001c6a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001c6d:	8b 40 08             	mov    0x8(%eax),%eax
81001c70:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001c73:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001c76:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001c79:	89 50 0c             	mov    %edx,0xc(%eax)
81001c7c:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001c7f:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001c82:	89 50 08             	mov    %edx,0x8(%eax)
81001c85:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001c88:	01 45 f0             	add    %eax,-0x10(%ebp)
81001c8b:	e9 8c 06 00 00       	jmp    8100231c <_realloc_r+0x82b>
81001c90:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81001c97:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81001c9e:	eb 01                	jmp    81001ca1 <_realloc_r+0x1b0>
81001ca0:	90                   	nop
81001ca1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001ca4:	8b 40 04             	mov    0x4(%eax),%eax
81001ca7:	83 e0 01             	and    $0x1,%eax
81001caa:	85 c0                	test   %eax,%eax
81001cac:	0f 85 d6 04 00 00    	jne    81002188 <_realloc_r+0x697>
81001cb2:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cb5:	8b 00                	mov    (%eax),%eax
81001cb7:	f7 d8                	neg    %eax
81001cb9:	89 c2                	mov    %eax,%edx
81001cbb:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81001cbe:	01 d0                	add    %edx,%eax
81001cc0:	89 45 b0             	mov    %eax,-0x50(%ebp)
81001cc3:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001cc6:	8b 40 04             	mov    0x4(%eax),%eax
81001cc9:	83 e0 fc             	and    $0xfffffffc,%eax
81001ccc:	89 45 ac             	mov    %eax,-0x54(%ebp)
81001ccf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001cd3:	0f 84 4a 03 00 00    	je     81002023 <_realloc_r+0x532>
81001cd9:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001cde:	8b 40 08             	mov    0x8(%eax),%eax
81001ce1:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81001ce4:	0f 85 b0 01 00 00    	jne    81001e9a <_realloc_r+0x3a9>
81001cea:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001ced:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001cf0:	01 c2                	add    %eax,%edx
81001cf2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001cf5:	01 d0                	add    %edx,%eax
81001cf7:	89 c2                	mov    %eax,%edx
81001cf9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001cfc:	83 c0 10             	add    $0x10,%eax
81001cff:	39 c2                	cmp    %eax,%edx
81001d01:	0f 8c 1c 03 00 00    	jl     81002023 <_realloc_r+0x532>
81001d07:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001d0a:	8b 40 0c             	mov    0xc(%eax),%eax
81001d0d:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001d10:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001d13:	8b 40 08             	mov    0x8(%eax),%eax
81001d16:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001d19:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001d1c:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001d1f:	89 50 0c             	mov    %edx,0xc(%eax)
81001d22:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001d25:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001d28:	89 50 08             	mov    %edx,0x8(%eax)
81001d2b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001d2e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001d31:	8b 55 ac             	mov    -0x54(%ebp),%edx
81001d34:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001d37:	01 d0                	add    %edx,%eax
81001d39:	01 45 f0             	add    %eax,-0x10(%ebp)
81001d3c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001d3f:	83 c0 08             	add    $0x8,%eax
81001d42:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001d45:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001d48:	83 e8 04             	sub    $0x4,%eax
81001d4b:	89 45 a0             	mov    %eax,-0x60(%ebp)
81001d4e:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81001d52:	0f 87 de 00 00 00    	ja     81001e36 <_realloc_r+0x345>
81001d58:	8b 45 0c             	mov    0xc(%ebp),%eax
81001d5b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d5e:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001d61:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001d64:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81001d68:	0f 86 90 00 00 00    	jbe    81001dfe <_realloc_r+0x30d>
81001d6e:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001d71:	8d 42 04             	lea    0x4(%edx),%eax
81001d74:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d77:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d7a:	8d 48 04             	lea    0x4(%eax),%ecx
81001d7d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001d80:	8b 12                	mov    (%edx),%edx
81001d82:	89 10                	mov    %edx,(%eax)
81001d84:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001d87:	8d 42 04             	lea    0x4(%edx),%eax
81001d8a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001d8d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001d90:	8d 48 04             	lea    0x4(%eax),%ecx
81001d93:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001d96:	8b 12                	mov    (%edx),%edx
81001d98:	89 10                	mov    %edx,(%eax)
81001d9a:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81001d9e:	76 5e                	jbe    81001dfe <_realloc_r+0x30d>
81001da0:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001da3:	8d 42 04             	lea    0x4(%edx),%eax
81001da6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001da9:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dac:	8d 48 04             	lea    0x4(%eax),%ecx
81001daf:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001db2:	8b 12                	mov    (%edx),%edx
81001db4:	89 10                	mov    %edx,(%eax)
81001db6:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001db9:	8d 42 04             	lea    0x4(%edx),%eax
81001dbc:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001dbf:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dc2:	8d 48 04             	lea    0x4(%eax),%ecx
81001dc5:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001dc8:	8b 12                	mov    (%edx),%edx
81001dca:	89 10                	mov    %edx,(%eax)
81001dcc:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81001dd0:	76 2c                	jbe    81001dfe <_realloc_r+0x30d>
81001dd2:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001dd5:	8d 42 04             	lea    0x4(%edx),%eax
81001dd8:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001ddb:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001dde:	8d 48 04             	lea    0x4(%eax),%ecx
81001de1:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001de4:	8b 12                	mov    (%edx),%edx
81001de6:	89 10                	mov    %edx,(%eax)
81001de8:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001deb:	8d 42 04             	lea    0x4(%edx),%eax
81001dee:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001df1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001df4:	8d 48 04             	lea    0x4(%eax),%ecx
81001df7:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001dfa:	8b 12                	mov    (%edx),%edx
81001dfc:	89 10                	mov    %edx,(%eax)
81001dfe:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e01:	8d 42 04             	lea    0x4(%edx),%eax
81001e04:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e07:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e0a:	8d 48 04             	lea    0x4(%eax),%ecx
81001e0d:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e10:	8b 12                	mov    (%edx),%edx
81001e12:	89 10                	mov    %edx,(%eax)
81001e14:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81001e17:	8d 42 04             	lea    0x4(%edx),%eax
81001e1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001e1d:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e20:	8d 48 04             	lea    0x4(%eax),%ecx
81001e23:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81001e26:	8b 12                	mov    (%edx),%edx
81001e28:	89 10                	mov    %edx,(%eax)
81001e2a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001e2d:	8b 10                	mov    (%eax),%edx
81001e2f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e32:	89 10                	mov    %edx,(%eax)
81001e34:	eb 14                	jmp    81001e4a <_realloc_r+0x359>
81001e36:	83 ec 04             	sub    $0x4,%esp
81001e39:	ff 75 a0             	pushl  -0x60(%ebp)
81001e3c:	ff 75 0c             	pushl  0xc(%ebp)
81001e3f:	ff 75 a8             	pushl  -0x58(%ebp)
81001e42:	e8 89 fb ff ff       	call   810019d0 <memmove>
81001e47:	83 c4 10             	add    $0x10,%esp
81001e4a:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81001e4f:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81001e52:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001e55:	01 c8                	add    %ecx,%eax
81001e57:	89 42 08             	mov    %eax,0x8(%edx)
81001e5a:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001e5d:	2b 45 bc             	sub    -0x44(%ebp),%eax
81001e60:	89 c2                	mov    %eax,%edx
81001e62:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81001e67:	8b 40 08             	mov    0x8(%eax),%eax
81001e6a:	83 ca 01             	or     $0x1,%edx
81001e6d:	89 50 04             	mov    %edx,0x4(%eax)
81001e70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e73:	8b 40 04             	mov    0x4(%eax),%eax
81001e76:	83 e0 01             	and    $0x1,%eax
81001e79:	0b 45 bc             	or     -0x44(%ebp),%eax
81001e7c:	89 c2                	mov    %eax,%edx
81001e7e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001e81:	89 50 04             	mov    %edx,0x4(%eax)
81001e84:	83 ec 0c             	sub    $0xc,%esp
81001e87:	ff 75 08             	pushl  0x8(%ebp)
81001e8a:	e8 5c fc ff ff       	call   81001aeb <__malloc_unlock>
81001e8f:	83 c4 10             	add    $0x10,%esp
81001e92:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001e95:	e9 2f 05 00 00       	jmp    810023c9 <_realloc_r+0x8d8>
81001e9a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001e9d:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001ea0:	01 c2                	add    %eax,%edx
81001ea2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ea5:	01 d0                	add    %edx,%eax
81001ea7:	89 c2                	mov    %eax,%edx
81001ea9:	8b 45 bc             	mov    -0x44(%ebp),%eax
81001eac:	39 c2                	cmp    %eax,%edx
81001eae:	0f 8c 6f 01 00 00    	jl     81002023 <_realloc_r+0x532>
81001eb4:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001eb7:	8b 40 0c             	mov    0xc(%eax),%eax
81001eba:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001ebd:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001ec0:	8b 40 08             	mov    0x8(%eax),%eax
81001ec3:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001ec6:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001ec9:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001ecc:	89 50 0c             	mov    %edx,0xc(%eax)
81001ecf:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001ed2:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001ed5:	89 50 08             	mov    %edx,0x8(%eax)
81001ed8:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001edb:	8b 40 0c             	mov    0xc(%eax),%eax
81001ede:	89 45 b8             	mov    %eax,-0x48(%ebp)
81001ee1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001ee4:	8b 40 08             	mov    0x8(%eax),%eax
81001ee7:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81001eea:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81001eed:	8b 55 b8             	mov    -0x48(%ebp),%edx
81001ef0:	89 50 0c             	mov    %edx,0xc(%eax)
81001ef3:	8b 45 b8             	mov    -0x48(%ebp),%eax
81001ef6:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81001ef9:	89 50 08             	mov    %edx,0x8(%eax)
81001efc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81001eff:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001f02:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f05:	8b 45 ac             	mov    -0x54(%ebp),%eax
81001f08:	01 d0                	add    %edx,%eax
81001f0a:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f0d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f10:	83 c0 08             	add    $0x8,%eax
81001f13:	89 45 a8             	mov    %eax,-0x58(%ebp)
81001f16:	8b 45 c0             	mov    -0x40(%ebp),%eax
81001f19:	83 e8 04             	sub    $0x4,%eax
81001f1c:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81001f1f:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81001f23:	0f 87 e1 00 00 00    	ja     8100200a <_realloc_r+0x519>
81001f29:	8b 45 0c             	mov    0xc(%ebp),%eax
81001f2c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f2f:	8b 45 a8             	mov    -0x58(%ebp),%eax
81001f32:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001f35:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81001f39:	0f 86 90 00 00 00    	jbe    81001fcf <_realloc_r+0x4de>
81001f3f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f42:	8d 42 04             	lea    0x4(%edx),%eax
81001f45:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f48:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f4b:	8d 48 04             	lea    0x4(%eax),%ecx
81001f4e:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001f51:	8b 12                	mov    (%edx),%edx
81001f53:	89 10                	mov    %edx,(%eax)
81001f55:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f58:	8d 42 04             	lea    0x4(%edx),%eax
81001f5b:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f5e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f61:	8d 48 04             	lea    0x4(%eax),%ecx
81001f64:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001f67:	8b 12                	mov    (%edx),%edx
81001f69:	89 10                	mov    %edx,(%eax)
81001f6b:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81001f6f:	76 5e                	jbe    81001fcf <_realloc_r+0x4de>
81001f71:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f74:	8d 42 04             	lea    0x4(%edx),%eax
81001f77:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f7a:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f7d:	8d 48 04             	lea    0x4(%eax),%ecx
81001f80:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001f83:	8b 12                	mov    (%edx),%edx
81001f85:	89 10                	mov    %edx,(%eax)
81001f87:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001f8a:	8d 42 04             	lea    0x4(%edx),%eax
81001f8d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001f90:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001f93:	8d 48 04             	lea    0x4(%eax),%ecx
81001f96:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001f99:	8b 12                	mov    (%edx),%edx
81001f9b:	89 10                	mov    %edx,(%eax)
81001f9d:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81001fa1:	76 2c                	jbe    81001fcf <_realloc_r+0x4de>
81001fa3:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fa6:	8d 42 04             	lea    0x4(%edx),%eax
81001fa9:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fac:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001faf:	8d 48 04             	lea    0x4(%eax),%ecx
81001fb2:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001fb5:	8b 12                	mov    (%edx),%edx
81001fb7:	89 10                	mov    %edx,(%eax)
81001fb9:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fbc:	8d 42 04             	lea    0x4(%edx),%eax
81001fbf:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fc2:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fc5:	8d 48 04             	lea    0x4(%eax),%ecx
81001fc8:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001fcb:	8b 12                	mov    (%edx),%edx
81001fcd:	89 10                	mov    %edx,(%eax)
81001fcf:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fd2:	8d 42 04             	lea    0x4(%edx),%eax
81001fd5:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fd8:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fdb:	8d 48 04             	lea    0x4(%eax),%ecx
81001fde:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001fe1:	8b 12                	mov    (%edx),%edx
81001fe3:	89 10                	mov    %edx,(%eax)
81001fe5:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fe8:	8d 42 04             	lea    0x4(%edx),%eax
81001feb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001fee:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ff1:	8d 48 04             	lea    0x4(%eax),%ecx
81001ff4:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81001ff7:	8b 12                	mov    (%edx),%edx
81001ff9:	89 10                	mov    %edx,(%eax)
81001ffb:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ffe:	8b 10                	mov    (%eax),%edx
81002000:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002003:	89 10                	mov    %edx,(%eax)
81002005:	e9 12 03 00 00       	jmp    8100231c <_realloc_r+0x82b>
8100200a:	83 ec 04             	sub    $0x4,%esp
8100200d:	ff 75 a4             	pushl  -0x5c(%ebp)
81002010:	ff 75 0c             	pushl  0xc(%ebp)
81002013:	ff 75 a8             	pushl  -0x58(%ebp)
81002016:	e8 b5 f9 ff ff       	call   810019d0 <memmove>
8100201b:	83 c4 10             	add    $0x10,%esp
8100201e:	e9 f9 02 00 00       	jmp    8100231c <_realloc_r+0x82b>
81002023:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81002027:	0f 84 5b 01 00 00    	je     81002188 <_realloc_r+0x697>
8100202d:	8b 55 ac             	mov    -0x54(%ebp),%edx
81002030:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002033:	01 d0                	add    %edx,%eax
81002035:	89 c2                	mov    %eax,%edx
81002037:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100203a:	39 c2                	cmp    %eax,%edx
8100203c:	0f 8c 46 01 00 00    	jl     81002188 <_realloc_r+0x697>
81002042:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002045:	8b 40 0c             	mov    0xc(%eax),%eax
81002048:	89 45 b8             	mov    %eax,-0x48(%ebp)
8100204b:	8b 45 b0             	mov    -0x50(%ebp),%eax
8100204e:	8b 40 08             	mov    0x8(%eax),%eax
81002051:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81002054:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81002057:	8b 55 b8             	mov    -0x48(%ebp),%edx
8100205a:	89 50 0c             	mov    %edx,0xc(%eax)
8100205d:	8b 45 b8             	mov    -0x48(%ebp),%eax
81002060:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81002063:	89 50 08             	mov    %edx,0x8(%eax)
81002066:	8b 45 b0             	mov    -0x50(%ebp),%eax
81002069:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100206c:	8b 45 ac             	mov    -0x54(%ebp),%eax
8100206f:	01 45 f0             	add    %eax,-0x10(%ebp)
81002072:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002075:	83 c0 08             	add    $0x8,%eax
81002078:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100207b:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100207e:	83 e8 04             	sub    $0x4,%eax
81002081:	89 45 9c             	mov    %eax,-0x64(%ebp)
81002084:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81002088:	0f 87 e1 00 00 00    	ja     8100216f <_realloc_r+0x67e>
8100208e:	8b 45 0c             	mov    0xc(%ebp),%eax
81002091:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002094:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002097:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100209a:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
8100209e:	0f 86 90 00 00 00    	jbe    81002134 <_realloc_r+0x643>
810020a4:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020a7:	8d 42 04             	lea    0x4(%edx),%eax
810020aa:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020ad:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020b0:	8d 48 04             	lea    0x4(%eax),%ecx
810020b3:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810020b6:	8b 12                	mov    (%edx),%edx
810020b8:	89 10                	mov    %edx,(%eax)
810020ba:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020bd:	8d 42 04             	lea    0x4(%edx),%eax
810020c0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020c3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020c6:	8d 48 04             	lea    0x4(%eax),%ecx
810020c9:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810020cc:	8b 12                	mov    (%edx),%edx
810020ce:	89 10                	mov    %edx,(%eax)
810020d0:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
810020d4:	76 5e                	jbe    81002134 <_realloc_r+0x643>
810020d6:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020d9:	8d 42 04             	lea    0x4(%edx),%eax
810020dc:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020df:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020e2:	8d 48 04             	lea    0x4(%eax),%ecx
810020e5:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810020e8:	8b 12                	mov    (%edx),%edx
810020ea:	89 10                	mov    %edx,(%eax)
810020ec:	8b 55 d4             	mov    -0x2c(%ebp),%edx
810020ef:	8d 42 04             	lea    0x4(%edx),%eax
810020f2:	89 45 d4             	mov    %eax,-0x2c(%ebp)
810020f5:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020f8:	8d 48 04             	lea    0x4(%eax),%ecx
810020fb:	89 4d d0             	mov    %ecx,-0x30(%ebp)
810020fe:	8b 12                	mov    (%edx),%edx
81002100:	89 10                	mov    %edx,(%eax)
81002102:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81002106:	76 2c                	jbe    81002134 <_realloc_r+0x643>
81002108:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100210b:	8d 42 04             	lea    0x4(%edx),%eax
8100210e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002111:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002114:	8d 48 04             	lea    0x4(%eax),%ecx
81002117:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100211a:	8b 12                	mov    (%edx),%edx
8100211c:	89 10                	mov    %edx,(%eax)
8100211e:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002121:	8d 42 04             	lea    0x4(%edx),%eax
81002124:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002127:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100212a:	8d 48 04             	lea    0x4(%eax),%ecx
8100212d:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002130:	8b 12                	mov    (%edx),%edx
81002132:	89 10                	mov    %edx,(%eax)
81002134:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81002137:	8d 42 04             	lea    0x4(%edx),%eax
8100213a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100213d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002140:	8d 48 04             	lea    0x4(%eax),%ecx
81002143:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81002146:	8b 12                	mov    (%edx),%edx
81002148:	89 10                	mov    %edx,(%eax)
8100214a:	8b 55 d4             	mov    -0x2c(%ebp),%edx
8100214d:	8d 42 04             	lea    0x4(%edx),%eax
81002150:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002153:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002156:	8d 48 04             	lea    0x4(%eax),%ecx
81002159:	89 4d d0             	mov    %ecx,-0x30(%ebp)
8100215c:	8b 12                	mov    (%edx),%edx
8100215e:	89 10                	mov    %edx,(%eax)
81002160:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002163:	8b 10                	mov    (%eax),%edx
81002165:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002168:	89 10                	mov    %edx,(%eax)
8100216a:	e9 ad 01 00 00       	jmp    8100231c <_realloc_r+0x82b>
8100216f:	83 ec 04             	sub    $0x4,%esp
81002172:	ff 75 9c             	pushl  -0x64(%ebp)
81002175:	ff 75 0c             	pushl  0xc(%ebp)
81002178:	ff 75 a8             	pushl  -0x58(%ebp)
8100217b:	e8 50 f8 ff ff       	call   810019d0 <memmove>
81002180:	83 c4 10             	add    $0x10,%esp
81002183:	e9 94 01 00 00       	jmp    8100231c <_realloc_r+0x82b>
81002188:	83 ec 08             	sub    $0x8,%esp
8100218b:	ff 75 10             	pushl  0x10(%ebp)
8100218e:	ff 75 08             	pushl  0x8(%ebp)
81002191:	e8 29 ef ff ff       	call   810010bf <_malloc_r>
81002196:	83 c4 10             	add    $0x10,%esp
81002199:	89 45 a8             	mov    %eax,-0x58(%ebp)
8100219c:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
810021a0:	75 18                	jne    810021ba <_realloc_r+0x6c9>
810021a2:	83 ec 0c             	sub    $0xc,%esp
810021a5:	ff 75 08             	pushl  0x8(%ebp)
810021a8:	e8 3e f9 ff ff       	call   81001aeb <__malloc_unlock>
810021ad:	83 c4 10             	add    $0x10,%esp
810021b0:	b8 00 00 00 00       	mov    $0x0,%eax
810021b5:	e9 0f 02 00 00       	jmp    810023c9 <_realloc_r+0x8d8>
810021ba:	8b 45 a8             	mov    -0x58(%ebp),%eax
810021bd:	83 e8 08             	sub    $0x8,%eax
810021c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810021c3:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810021c6:	8b 40 04             	mov    0x4(%eax),%eax
810021c9:	83 e0 fe             	and    $0xfffffffe,%eax
810021cc:	89 c2                	mov    %eax,%edx
810021ce:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810021d1:	01 d0                	add    %edx,%eax
810021d3:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810021d6:	75 17                	jne    810021ef <_realloc_r+0x6fe>
810021d8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810021db:	8b 40 04             	mov    0x4(%eax),%eax
810021de:	83 e0 fc             	and    $0xfffffffc,%eax
810021e1:	01 45 f0             	add    %eax,-0x10(%ebp)
810021e4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810021e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
810021ea:	e9 2d 01 00 00       	jmp    8100231c <_realloc_r+0x82b>
810021ef:	8b 45 c0             	mov    -0x40(%ebp),%eax
810021f2:	83 e8 04             	sub    $0x4,%eax
810021f5:	89 45 98             	mov    %eax,-0x68(%ebp)
810021f8:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
810021fc:	0f 87 de 00 00 00    	ja     810022e0 <_realloc_r+0x7ef>
81002202:	8b 45 0c             	mov    0xc(%ebp),%eax
81002205:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002208:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100220b:	89 45 c8             	mov    %eax,-0x38(%ebp)
8100220e:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
81002212:	0f 86 90 00 00 00    	jbe    810022a8 <_realloc_r+0x7b7>
81002218:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100221b:	8d 42 04             	lea    0x4(%edx),%eax
8100221e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002221:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002224:	8d 48 04             	lea    0x4(%eax),%ecx
81002227:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100222a:	8b 12                	mov    (%edx),%edx
8100222c:	89 10                	mov    %edx,(%eax)
8100222e:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002231:	8d 42 04             	lea    0x4(%edx),%eax
81002234:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002237:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100223a:	8d 48 04             	lea    0x4(%eax),%ecx
8100223d:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002240:	8b 12                	mov    (%edx),%edx
81002242:	89 10                	mov    %edx,(%eax)
81002244:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81002248:	76 5e                	jbe    810022a8 <_realloc_r+0x7b7>
8100224a:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100224d:	8d 42 04             	lea    0x4(%edx),%eax
81002250:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002253:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002256:	8d 48 04             	lea    0x4(%eax),%ecx
81002259:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100225c:	8b 12                	mov    (%edx),%edx
8100225e:	89 10                	mov    %edx,(%eax)
81002260:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002263:	8d 42 04             	lea    0x4(%edx),%eax
81002266:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002269:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100226c:	8d 48 04             	lea    0x4(%eax),%ecx
8100226f:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81002272:	8b 12                	mov    (%edx),%edx
81002274:	89 10                	mov    %edx,(%eax)
81002276:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
8100227a:	76 2c                	jbe    810022a8 <_realloc_r+0x7b7>
8100227c:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100227f:	8d 42 04             	lea    0x4(%edx),%eax
81002282:	89 45 cc             	mov    %eax,-0x34(%ebp)
81002285:	8b 45 c8             	mov    -0x38(%ebp),%eax
81002288:	8d 48 04             	lea    0x4(%eax),%ecx
8100228b:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100228e:	8b 12                	mov    (%edx),%edx
81002290:	89 10                	mov    %edx,(%eax)
81002292:	8b 55 cc             	mov    -0x34(%ebp),%edx
81002295:	8d 42 04             	lea    0x4(%edx),%eax
81002298:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100229b:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100229e:	8d 48 04             	lea    0x4(%eax),%ecx
810022a1:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022a4:	8b 12                	mov    (%edx),%edx
810022a6:	89 10                	mov    %edx,(%eax)
810022a8:	8b 55 cc             	mov    -0x34(%ebp),%edx
810022ab:	8d 42 04             	lea    0x4(%edx),%eax
810022ae:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022b1:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022b4:	8d 48 04             	lea    0x4(%eax),%ecx
810022b7:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022ba:	8b 12                	mov    (%edx),%edx
810022bc:	89 10                	mov    %edx,(%eax)
810022be:	8b 55 cc             	mov    -0x34(%ebp),%edx
810022c1:	8d 42 04             	lea    0x4(%edx),%eax
810022c4:	89 45 cc             	mov    %eax,-0x34(%ebp)
810022c7:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022ca:	8d 48 04             	lea    0x4(%eax),%ecx
810022cd:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810022d0:	8b 12                	mov    (%edx),%edx
810022d2:	89 10                	mov    %edx,(%eax)
810022d4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810022d7:	8b 10                	mov    (%eax),%edx
810022d9:	8b 45 c8             	mov    -0x38(%ebp),%eax
810022dc:	89 10                	mov    %edx,(%eax)
810022de:	eb 14                	jmp    810022f4 <_realloc_r+0x803>
810022e0:	83 ec 04             	sub    $0x4,%esp
810022e3:	ff 75 98             	pushl  -0x68(%ebp)
810022e6:	ff 75 0c             	pushl  0xc(%ebp)
810022e9:	ff 75 a8             	pushl  -0x58(%ebp)
810022ec:	e8 df f6 ff ff       	call   810019d0 <memmove>
810022f1:	83 c4 10             	add    $0x10,%esp
810022f4:	83 ec 08             	sub    $0x8,%esp
810022f7:	ff 75 0c             	pushl  0xc(%ebp)
810022fa:	ff 75 08             	pushl  0x8(%ebp)
810022fd:	e8 dd 07 00 00       	call   81002adf <_free_r>
81002302:	83 c4 10             	add    $0x10,%esp
81002305:	83 ec 0c             	sub    $0xc,%esp
81002308:	ff 75 08             	pushl  0x8(%ebp)
8100230b:	e8 db f7 ff ff       	call   81001aeb <__malloc_unlock>
81002310:	83 c4 10             	add    $0x10,%esp
81002313:	8b 45 a8             	mov    -0x58(%ebp),%eax
81002316:	e9 ae 00 00 00       	jmp    810023c9 <_realloc_r+0x8d8>
8100231b:	90                   	nop
8100231c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100231f:	2b 45 bc             	sub    -0x44(%ebp),%eax
81002322:	89 45 94             	mov    %eax,-0x6c(%ebp)
81002325:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81002329:	76 5d                	jbe    81002388 <_realloc_r+0x897>
8100232b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100232e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81002331:	01 d0                	add    %edx,%eax
81002333:	89 45 90             	mov    %eax,-0x70(%ebp)
81002336:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002339:	8b 40 04             	mov    0x4(%eax),%eax
8100233c:	83 e0 01             	and    $0x1,%eax
8100233f:	0b 45 bc             	or     -0x44(%ebp),%eax
81002342:	89 c2                	mov    %eax,%edx
81002344:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002347:	89 50 04             	mov    %edx,0x4(%eax)
8100234a:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100234d:	83 c8 01             	or     $0x1,%eax
81002350:	89 c2                	mov    %eax,%edx
81002352:	8b 45 90             	mov    -0x70(%ebp),%eax
81002355:	89 50 04             	mov    %edx,0x4(%eax)
81002358:	8b 55 90             	mov    -0x70(%ebp),%edx
8100235b:	8b 45 94             	mov    -0x6c(%ebp),%eax
8100235e:	01 d0                	add    %edx,%eax
81002360:	8b 50 04             	mov    0x4(%eax),%edx
81002363:	8b 4d 90             	mov    -0x70(%ebp),%ecx
81002366:	8b 45 94             	mov    -0x6c(%ebp),%eax
81002369:	01 c8                	add    %ecx,%eax
8100236b:	83 ca 01             	or     $0x1,%edx
8100236e:	89 50 04             	mov    %edx,0x4(%eax)
81002371:	8b 45 90             	mov    -0x70(%ebp),%eax
81002374:	83 c0 08             	add    $0x8,%eax
81002377:	83 ec 08             	sub    $0x8,%esp
8100237a:	50                   	push   %eax
8100237b:	ff 75 08             	pushl  0x8(%ebp)
8100237e:	e8 5c 07 00 00       	call   81002adf <_free_r>
81002383:	83 c4 10             	add    $0x10,%esp
81002386:	eb 2d                	jmp    810023b5 <_realloc_r+0x8c4>
81002388:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100238b:	8b 40 04             	mov    0x4(%eax),%eax
8100238e:	83 e0 01             	and    $0x1,%eax
81002391:	0b 45 f0             	or     -0x10(%ebp),%eax
81002394:	89 c2                	mov    %eax,%edx
81002396:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002399:	89 50 04             	mov    %edx,0x4(%eax)
8100239c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100239f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810023a2:	01 d0                	add    %edx,%eax
810023a4:	8b 50 04             	mov    0x4(%eax),%edx
810023a7:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810023aa:	8b 45 f0             	mov    -0x10(%ebp),%eax
810023ad:	01 c8                	add    %ecx,%eax
810023af:	83 ca 01             	or     $0x1,%edx
810023b2:	89 50 04             	mov    %edx,0x4(%eax)
810023b5:	83 ec 0c             	sub    $0xc,%esp
810023b8:	ff 75 08             	pushl  0x8(%ebp)
810023bb:	e8 2b f7 ff ff       	call   81001aeb <__malloc_unlock>
810023c0:	83 c4 10             	add    $0x10,%esp
810023c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810023c6:	83 c0 08             	add    $0x8,%eax
810023c9:	c9                   	leave  
810023ca:	c3                   	ret    

810023cb <_sbrk_r>:
810023cb:	55                   	push   %ebp
810023cc:	89 e5                	mov    %esp,%ebp
810023ce:	83 ec 18             	sub    $0x18,%esp
810023d1:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
810023d8:	00 00 00 
810023db:	83 ec 0c             	sub    $0xc,%esp
810023de:	ff 75 0c             	pushl  0xc(%ebp)
810023e1:	e8 43 df ff ff       	call   81000329 <sbrk>
810023e6:	83 c4 10             	add    $0x10,%esp
810023e9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810023ec:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810023f0:	75 14                	jne    81002406 <_sbrk_r+0x3b>
810023f2:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
810023f7:	85 c0                	test   %eax,%eax
810023f9:	74 0b                	je     81002406 <_sbrk_r+0x3b>
810023fb:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
81002401:	8b 45 08             	mov    0x8(%ebp),%eax
81002404:	89 10                	mov    %edx,(%eax)
81002406:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002409:	c9                   	leave  
8100240a:	c3                   	ret    

8100240b <__sread>:
8100240b:	55                   	push   %ebp
8100240c:	89 e5                	mov    %esp,%ebp
8100240e:	56                   	push   %esi
8100240f:	53                   	push   %ebx
81002410:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002413:	8b 55 14             	mov    0x14(%ebp),%edx
81002416:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100241a:	98                   	cwtl   
8100241b:	52                   	push   %edx
8100241c:	ff 75 10             	pushl  0x10(%ebp)
8100241f:	50                   	push   %eax
81002420:	ff 75 08             	pushl  0x8(%ebp)
81002423:	e8 b9 0d 00 00       	call   810031e1 <_read_r>
81002428:	83 c4 10             	add    $0x10,%esp
8100242b:	89 c6                	mov    %eax,%esi
8100242d:	85 f6                	test   %esi,%esi
8100242f:	78 0a                	js     8100243b <__sread+0x30>
81002431:	8b 43 50             	mov    0x50(%ebx),%eax
81002434:	01 f0                	add    %esi,%eax
81002436:	89 43 50             	mov    %eax,0x50(%ebx)
81002439:	eb 0b                	jmp    81002446 <__sread+0x3b>
8100243b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100243f:	80 e4 ef             	and    $0xef,%ah
81002442:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002446:	89 f0                	mov    %esi,%eax
81002448:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100244b:	5b                   	pop    %ebx
8100244c:	5e                   	pop    %esi
8100244d:	5d                   	pop    %ebp
8100244e:	c3                   	ret    

8100244f <__seofread>:
8100244f:	55                   	push   %ebp
81002450:	89 e5                	mov    %esp,%ebp
81002452:	b8 00 00 00 00       	mov    $0x0,%eax
81002457:	5d                   	pop    %ebp
81002458:	c3                   	ret    

81002459 <__swrite>:
81002459:	55                   	push   %ebp
8100245a:	89 e5                	mov    %esp,%ebp
8100245c:	53                   	push   %ebx
8100245d:	83 ec 14             	sub    $0x14,%esp
81002460:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002463:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002467:	98                   	cwtl   
81002468:	25 00 01 00 00       	and    $0x100,%eax
8100246d:	85 c0                	test   %eax,%eax
8100246f:	74 15                	je     81002486 <__swrite+0x2d>
81002471:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002475:	98                   	cwtl   
81002476:	6a 02                	push   $0x2
81002478:	6a 00                	push   $0x0
8100247a:	50                   	push   %eax
8100247b:	ff 75 08             	pushl  0x8(%ebp)
8100247e:	e8 98 0b 00 00       	call   8100301b <_lseek_r>
81002483:	83 c4 10             	add    $0x10,%esp
81002486:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100248a:	80 e4 ef             	and    $0xef,%ah
8100248d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002491:	8b 55 14             	mov    0x14(%ebp),%edx
81002494:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002498:	98                   	cwtl   
81002499:	52                   	push   %edx
8100249a:	ff 75 10             	pushl  0x10(%ebp)
8100249d:	50                   	push   %eax
8100249e:	ff 75 08             	pushl  0x8(%ebp)
810024a1:	e8 7d 00 00 00       	call   81002523 <_write_r>
810024a6:	83 c4 10             	add    $0x10,%esp
810024a9:	89 45 f4             	mov    %eax,-0xc(%ebp)
810024ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
810024af:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810024b2:	c9                   	leave  
810024b3:	c3                   	ret    

810024b4 <__sseek>:
810024b4:	55                   	push   %ebp
810024b5:	89 e5                	mov    %esp,%ebp
810024b7:	56                   	push   %esi
810024b8:	53                   	push   %ebx
810024b9:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810024bc:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810024c0:	98                   	cwtl   
810024c1:	ff 75 14             	pushl  0x14(%ebp)
810024c4:	ff 75 10             	pushl  0x10(%ebp)
810024c7:	50                   	push   %eax
810024c8:	ff 75 08             	pushl  0x8(%ebp)
810024cb:	e8 4b 0b 00 00       	call   8100301b <_lseek_r>
810024d0:	83 c4 10             	add    $0x10,%esp
810024d3:	89 c6                	mov    %eax,%esi
810024d5:	83 fe ff             	cmp    $0xffffffff,%esi
810024d8:	75 0d                	jne    810024e7 <__sseek+0x33>
810024da:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024de:	80 e4 ef             	and    $0xef,%ah
810024e1:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810024e5:	eb 0e                	jmp    810024f5 <__sseek+0x41>
810024e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024eb:	80 cc 10             	or     $0x10,%ah
810024ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810024f2:	89 73 50             	mov    %esi,0x50(%ebx)
810024f5:	89 f0                	mov    %esi,%eax
810024f7:	8d 65 f8             	lea    -0x8(%ebp),%esp
810024fa:	5b                   	pop    %ebx
810024fb:	5e                   	pop    %esi
810024fc:	5d                   	pop    %ebp
810024fd:	c3                   	ret    

810024fe <__sclose>:
810024fe:	55                   	push   %ebp
810024ff:	89 e5                	mov    %esp,%ebp
81002501:	83 ec 18             	sub    $0x18,%esp
81002504:	8b 45 0c             	mov    0xc(%ebp),%eax
81002507:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100250a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100250d:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81002511:	98                   	cwtl   
81002512:	83 ec 08             	sub    $0x8,%esp
81002515:	50                   	push   %eax
81002516:	ff 75 08             	pushl  0x8(%ebp)
81002519:	e8 a6 01 00 00       	call   810026c4 <_close_r>
8100251e:	83 c4 10             	add    $0x10,%esp
81002521:	c9                   	leave  
81002522:	c3                   	ret    

81002523 <_write_r>:
81002523:	55                   	push   %ebp
81002524:	89 e5                	mov    %esp,%ebp
81002526:	83 ec 18             	sub    $0x18,%esp
81002529:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
81002530:	00 00 00 
81002533:	83 ec 04             	sub    $0x4,%esp
81002536:	ff 75 14             	pushl  0x14(%ebp)
81002539:	ff 75 10             	pushl  0x10(%ebp)
8100253c:	ff 75 0c             	pushl  0xc(%ebp)
8100253f:	e8 0e dd ff ff       	call   81000252 <write>
81002544:	83 c4 10             	add    $0x10,%esp
81002547:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100254a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100254e:	75 14                	jne    81002564 <_write_r+0x41>
81002550:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
81002555:	85 c0                	test   %eax,%eax
81002557:	74 0b                	je     81002564 <_write_r+0x41>
81002559:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
8100255f:	8b 45 08             	mov    0x8(%ebp),%eax
81002562:	89 10                	mov    %edx,(%eax)
81002564:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002567:	c9                   	leave  
81002568:	c3                   	ret    

81002569 <__swsetup_r>:
81002569:	55                   	push   %ebp
8100256a:	89 e5                	mov    %esp,%ebp
8100256c:	53                   	push   %ebx
8100256d:	83 ec 14             	sub    $0x14,%esp
81002570:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002573:	a1 a4 38 00 81       	mov    0x810038a4,%eax
81002578:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100257b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100257f:	74 18                	je     81002599 <__swsetup_r+0x30>
81002581:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002584:	8b 40 38             	mov    0x38(%eax),%eax
81002587:	85 c0                	test   %eax,%eax
81002589:	75 0e                	jne    81002599 <__swsetup_r+0x30>
8100258b:	83 ec 0c             	sub    $0xc,%esp
8100258e:	ff 75 f4             	pushl  -0xc(%ebp)
81002591:	e8 18 e2 ff ff       	call   810007ae <__sinit>
81002596:	83 c4 10             	add    $0x10,%esp
81002599:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100259d:	98                   	cwtl   
8100259e:	83 e0 08             	and    $0x8,%eax
810025a1:	85 c0                	test   %eax,%eax
810025a3:	0f 85 82 00 00 00    	jne    8100262b <__swsetup_r+0xc2>
810025a9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025ad:	98                   	cwtl   
810025ae:	83 e0 10             	and    $0x10,%eax
810025b1:	85 c0                	test   %eax,%eax
810025b3:	75 1e                	jne    810025d3 <__swsetup_r+0x6a>
810025b5:	8b 45 08             	mov    0x8(%ebp),%eax
810025b8:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810025be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025c2:	83 c8 40             	or     $0x40,%eax
810025c5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025c9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810025ce:	e9 ec 00 00 00       	jmp    810026bf <__swsetup_r+0x156>
810025d3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025d7:	98                   	cwtl   
810025d8:	83 e0 04             	and    $0x4,%eax
810025db:	85 c0                	test   %eax,%eax
810025dd:	74 41                	je     81002620 <__swsetup_r+0xb7>
810025df:	8b 43 30             	mov    0x30(%ebx),%eax
810025e2:	85 c0                	test   %eax,%eax
810025e4:	74 23                	je     81002609 <__swsetup_r+0xa0>
810025e6:	8b 53 30             	mov    0x30(%ebx),%edx
810025e9:	8d 43 40             	lea    0x40(%ebx),%eax
810025ec:	39 c2                	cmp    %eax,%edx
810025ee:	74 12                	je     81002602 <__swsetup_r+0x99>
810025f0:	8b 43 30             	mov    0x30(%ebx),%eax
810025f3:	83 ec 08             	sub    $0x8,%esp
810025f6:	50                   	push   %eax
810025f7:	ff 75 08             	pushl  0x8(%ebp)
810025fa:	e8 e0 04 00 00       	call   81002adf <_free_r>
810025ff:	83 c4 10             	add    $0x10,%esp
81002602:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002609:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100260d:	83 e0 db             	and    $0xffffffdb,%eax
81002610:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002614:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100261b:	8b 43 10             	mov    0x10(%ebx),%eax
8100261e:	89 03                	mov    %eax,(%ebx)
81002620:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002624:	83 c8 08             	or     $0x8,%eax
81002627:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100262b:	8b 43 10             	mov    0x10(%ebx),%eax
8100262e:	85 c0                	test   %eax,%eax
81002630:	75 2b                	jne    8100265d <__swsetup_r+0xf4>
81002632:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002636:	98                   	cwtl   
81002637:	25 00 02 00 00       	and    $0x200,%eax
8100263c:	85 c0                	test   %eax,%eax
8100263e:	74 0e                	je     8100264e <__swsetup_r+0xe5>
81002640:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002644:	98                   	cwtl   
81002645:	25 80 00 00 00       	and    $0x80,%eax
8100264a:	85 c0                	test   %eax,%eax
8100264c:	74 0f                	je     8100265d <__swsetup_r+0xf4>
8100264e:	83 ec 08             	sub    $0x8,%esp
81002651:	53                   	push   %ebx
81002652:	ff 75 08             	pushl  0x8(%ebp)
81002655:	e8 07 0a 00 00       	call   81003061 <__smakebuf_r>
8100265a:	83 c4 10             	add    $0x10,%esp
8100265d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002661:	98                   	cwtl   
81002662:	83 e0 01             	and    $0x1,%eax
81002665:	85 c0                	test   %eax,%eax
81002667:	74 11                	je     8100267a <__swsetup_r+0x111>
81002669:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81002670:	8b 43 14             	mov    0x14(%ebx),%eax
81002673:	f7 d8                	neg    %eax
81002675:	89 43 18             	mov    %eax,0x18(%ebx)
81002678:	eb 19                	jmp    81002693 <__swsetup_r+0x12a>
8100267a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100267e:	98                   	cwtl   
8100267f:	83 e0 02             	and    $0x2,%eax
81002682:	85 c0                	test   %eax,%eax
81002684:	75 05                	jne    8100268b <__swsetup_r+0x122>
81002686:	8b 43 14             	mov    0x14(%ebx),%eax
81002689:	eb 05                	jmp    81002690 <__swsetup_r+0x127>
8100268b:	b8 00 00 00 00       	mov    $0x0,%eax
81002690:	89 43 08             	mov    %eax,0x8(%ebx)
81002693:	8b 43 10             	mov    0x10(%ebx),%eax
81002696:	85 c0                	test   %eax,%eax
81002698:	75 20                	jne    810026ba <__swsetup_r+0x151>
8100269a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100269e:	98                   	cwtl   
8100269f:	25 80 00 00 00       	and    $0x80,%eax
810026a4:	85 c0                	test   %eax,%eax
810026a6:	74 12                	je     810026ba <__swsetup_r+0x151>
810026a8:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810026ac:	83 c8 40             	or     $0x40,%eax
810026af:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810026b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810026b8:	eb 05                	jmp    810026bf <__swsetup_r+0x156>
810026ba:	b8 00 00 00 00       	mov    $0x0,%eax
810026bf:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810026c2:	c9                   	leave  
810026c3:	c3                   	ret    

810026c4 <_close_r>:
810026c4:	55                   	push   %ebp
810026c5:	89 e5                	mov    %esp,%ebp
810026c7:	83 ec 18             	sub    $0x18,%esp
810026ca:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
810026d1:	00 00 00 
810026d4:	83 ec 0c             	sub    $0xc,%esp
810026d7:	ff 75 0c             	pushl  0xc(%ebp)
810026da:	e8 a4 db ff ff       	call   81000283 <close>
810026df:	83 c4 10             	add    $0x10,%esp
810026e2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810026e5:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810026e9:	75 14                	jne    810026ff <_close_r+0x3b>
810026eb:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
810026f0:	85 c0                	test   %eax,%eax
810026f2:	74 0b                	je     810026ff <_close_r+0x3b>
810026f4:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
810026fa:	8b 45 08             	mov    0x8(%ebp),%eax
810026fd:	89 10                	mov    %edx,(%eax)
810026ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002702:	c9                   	leave  
81002703:	c3                   	ret    

81002704 <_fclose_r>:
81002704:	55                   	push   %ebp
81002705:	89 e5                	mov    %esp,%ebp
81002707:	53                   	push   %ebx
81002708:	83 ec 14             	sub    $0x14,%esp
8100270b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100270e:	85 db                	test   %ebx,%ebx
81002710:	75 0a                	jne    8100271c <_fclose_r+0x18>
81002712:	b8 00 00 00 00       	mov    $0x0,%eax
81002717:	e9 ea 00 00 00       	jmp    81002806 <_fclose_r+0x102>
8100271c:	8b 45 08             	mov    0x8(%ebp),%eax
8100271f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002722:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002726:	74 18                	je     81002740 <_fclose_r+0x3c>
81002728:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100272b:	8b 40 38             	mov    0x38(%eax),%eax
8100272e:	85 c0                	test   %eax,%eax
81002730:	75 0e                	jne    81002740 <_fclose_r+0x3c>
81002732:	83 ec 0c             	sub    $0xc,%esp
81002735:	ff 75 f0             	pushl  -0x10(%ebp)
81002738:	e8 71 e0 ff ff       	call   810007ae <__sinit>
8100273d:	83 c4 10             	add    $0x10,%esp
81002740:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002744:	66 85 c0             	test   %ax,%ax
81002747:	75 0a                	jne    81002753 <_fclose_r+0x4f>
81002749:	b8 00 00 00 00       	mov    $0x0,%eax
8100274e:	e9 b3 00 00 00       	jmp    81002806 <_fclose_r+0x102>
81002753:	83 ec 08             	sub    $0x8,%esp
81002756:	53                   	push   %ebx
81002757:	ff 75 08             	pushl  0x8(%ebp)
8100275a:	e8 c9 00 00 00       	call   81002828 <__sflush_r>
8100275f:	83 c4 10             	add    $0x10,%esp
81002762:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002765:	8b 43 2c             	mov    0x2c(%ebx),%eax
81002768:	85 c0                	test   %eax,%eax
8100276a:	74 1d                	je     81002789 <_fclose_r+0x85>
8100276c:	8b 43 2c             	mov    0x2c(%ebx),%eax
8100276f:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002772:	83 ec 08             	sub    $0x8,%esp
81002775:	52                   	push   %edx
81002776:	ff 75 08             	pushl  0x8(%ebp)
81002779:	ff d0                	call   *%eax
8100277b:	83 c4 10             	add    $0x10,%esp
8100277e:	85 c0                	test   %eax,%eax
81002780:	79 07                	jns    81002789 <_fclose_r+0x85>
81002782:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81002789:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100278d:	98                   	cwtl   
8100278e:	25 80 00 00 00       	and    $0x80,%eax
81002793:	85 c0                	test   %eax,%eax
81002795:	74 12                	je     810027a9 <_fclose_r+0xa5>
81002797:	8b 43 10             	mov    0x10(%ebx),%eax
8100279a:	83 ec 08             	sub    $0x8,%esp
8100279d:	50                   	push   %eax
8100279e:	ff 75 08             	pushl  0x8(%ebp)
810027a1:	e8 39 03 00 00       	call   81002adf <_free_r>
810027a6:	83 c4 10             	add    $0x10,%esp
810027a9:	8b 43 30             	mov    0x30(%ebx),%eax
810027ac:	85 c0                	test   %eax,%eax
810027ae:	74 23                	je     810027d3 <_fclose_r+0xcf>
810027b0:	8b 53 30             	mov    0x30(%ebx),%edx
810027b3:	8d 43 40             	lea    0x40(%ebx),%eax
810027b6:	39 c2                	cmp    %eax,%edx
810027b8:	74 12                	je     810027cc <_fclose_r+0xc8>
810027ba:	8b 43 30             	mov    0x30(%ebx),%eax
810027bd:	83 ec 08             	sub    $0x8,%esp
810027c0:	50                   	push   %eax
810027c1:	ff 75 08             	pushl  0x8(%ebp)
810027c4:	e8 16 03 00 00       	call   81002adf <_free_r>
810027c9:	83 c4 10             	add    $0x10,%esp
810027cc:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810027d3:	8b 43 44             	mov    0x44(%ebx),%eax
810027d6:	85 c0                	test   %eax,%eax
810027d8:	74 19                	je     810027f3 <_fclose_r+0xef>
810027da:	8b 43 44             	mov    0x44(%ebx),%eax
810027dd:	83 ec 08             	sub    $0x8,%esp
810027e0:	50                   	push   %eax
810027e1:	ff 75 08             	pushl  0x8(%ebp)
810027e4:	e8 f6 02 00 00       	call   81002adf <_free_r>
810027e9:	83 c4 10             	add    $0x10,%esp
810027ec:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
810027f3:	e8 4f e0 ff ff       	call   81000847 <__sfp_lock_acquire>
810027f8:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
810027fe:	e8 4a e0 ff ff       	call   8100084d <__sfp_lock_release>
81002803:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002806:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002809:	c9                   	leave  
8100280a:	c3                   	ret    

8100280b <fclose>:
8100280b:	55                   	push   %ebp
8100280c:	89 e5                	mov    %esp,%ebp
8100280e:	83 ec 08             	sub    $0x8,%esp
81002811:	8b 55 08             	mov    0x8(%ebp),%edx
81002814:	a1 a4 38 00 81       	mov    0x810038a4,%eax
81002819:	83 ec 08             	sub    $0x8,%esp
8100281c:	52                   	push   %edx
8100281d:	50                   	push   %eax
8100281e:	e8 e1 fe ff ff       	call   81002704 <_fclose_r>
81002823:	83 c4 10             	add    $0x10,%esp
81002826:	c9                   	leave  
81002827:	c3                   	ret    

81002828 <__sflush_r>:
81002828:	55                   	push   %ebp
81002829:	89 e5                	mov    %esp,%ebp
8100282b:	57                   	push   %edi
8100282c:	56                   	push   %esi
8100282d:	53                   	push   %ebx
8100282e:	83 ec 1c             	sub    $0x1c,%esp
81002831:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002834:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002838:	66 89 45 de          	mov    %ax,-0x22(%ebp)
8100283c:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81002840:	83 e0 08             	and    $0x8,%eax
81002843:	85 c0                	test   %eax,%eax
81002845:	0f 85 93 01 00 00    	jne    810029de <__sflush_r+0x1b6>
8100284b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100284f:	80 cc 08             	or     $0x8,%ah
81002852:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002856:	8b 43 04             	mov    0x4(%ebx),%eax
81002859:	85 c0                	test   %eax,%eax
8100285b:	7f 0b                	jg     81002868 <__sflush_r+0x40>
8100285d:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002860:	85 c0                	test   %eax,%eax
81002862:	0f 8e 6f 01 00 00    	jle    810029d7 <__sflush_r+0x1af>
81002868:	8b 43 28             	mov    0x28(%ebx),%eax
8100286b:	85 c0                	test   %eax,%eax
8100286d:	0f 84 64 01 00 00    	je     810029d7 <__sflush_r+0x1af>
81002873:	8b 45 08             	mov    0x8(%ebp),%eax
81002876:	8b 00                	mov    (%eax),%eax
81002878:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100287b:	8b 45 08             	mov    0x8(%ebp),%eax
8100287e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81002884:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002888:	98                   	cwtl   
81002889:	25 00 10 00 00       	and    $0x1000,%eax
8100288e:	85 c0                	test   %eax,%eax
81002890:	74 08                	je     8100289a <__sflush_r+0x72>
81002892:	8b 43 50             	mov    0x50(%ebx),%eax
81002895:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002898:	eb 64                	jmp    810028fe <__sflush_r+0xd6>
8100289a:	8b 43 28             	mov    0x28(%ebx),%eax
8100289d:	8b 53 1c             	mov    0x1c(%ebx),%edx
810028a0:	6a 01                	push   $0x1
810028a2:	6a 00                	push   $0x0
810028a4:	52                   	push   %edx
810028a5:	ff 75 08             	pushl  0x8(%ebp)
810028a8:	ff d0                	call   *%eax
810028aa:	83 c4 10             	add    $0x10,%esp
810028ad:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810028b0:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810028b4:	75 48                	jne    810028fe <__sflush_r+0xd6>
810028b6:	8b 45 08             	mov    0x8(%ebp),%eax
810028b9:	8b 00                	mov    (%eax),%eax
810028bb:	85 c0                	test   %eax,%eax
810028bd:	74 3f                	je     810028fe <__sflush_r+0xd6>
810028bf:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
810028c6:	8b 45 08             	mov    0x8(%ebp),%eax
810028c9:	8b 00                	mov    (%eax),%eax
810028cb:	83 f8 1d             	cmp    $0x1d,%eax
810028ce:	74 0a                	je     810028da <__sflush_r+0xb2>
810028d0:	8b 45 08             	mov    0x8(%ebp),%eax
810028d3:	8b 00                	mov    (%eax),%eax
810028d5:	83 f8 16             	cmp    $0x16,%eax
810028d8:	75 11                	jne    810028eb <__sflush_r+0xc3>
810028da:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
810028e1:	8b 45 08             	mov    0x8(%ebp),%eax
810028e4:	8b 55 d8             	mov    -0x28(%ebp),%edx
810028e7:	89 10                	mov    %edx,(%eax)
810028e9:	eb 0b                	jmp    810028f6 <__sflush_r+0xce>
810028eb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810028ef:	83 c8 40             	or     $0x40,%eax
810028f2:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810028f6:	8b 45 e0             	mov    -0x20(%ebp),%eax
810028f9:	e9 48 01 00 00       	jmp    81002a46 <__sflush_r+0x21e>
810028fe:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002902:	98                   	cwtl   
81002903:	83 e0 04             	and    $0x4,%eax
81002906:	85 c0                	test   %eax,%eax
81002908:	74 13                	je     8100291d <__sflush_r+0xf5>
8100290a:	8b 43 04             	mov    0x4(%ebx),%eax
8100290d:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81002910:	8b 43 30             	mov    0x30(%ebx),%eax
81002913:	85 c0                	test   %eax,%eax
81002915:	74 06                	je     8100291d <__sflush_r+0xf5>
81002917:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100291a:	29 45 e4             	sub    %eax,-0x1c(%ebp)
8100291d:	8b 43 28             	mov    0x28(%ebx),%eax
81002920:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002923:	6a 00                	push   $0x0
81002925:	ff 75 e4             	pushl  -0x1c(%ebp)
81002928:	52                   	push   %edx
81002929:	ff 75 08             	pushl  0x8(%ebp)
8100292c:	ff d0                	call   *%eax
8100292e:	83 c4 10             	add    $0x10,%esp
81002931:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002934:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002938:	75 1d                	jne    81002957 <__sflush_r+0x12f>
8100293a:	8b 45 08             	mov    0x8(%ebp),%eax
8100293d:	8b 00                	mov    (%eax),%eax
8100293f:	85 c0                	test   %eax,%eax
81002941:	74 14                	je     81002957 <__sflush_r+0x12f>
81002943:	8b 45 08             	mov    0x8(%ebp),%eax
81002946:	8b 00                	mov    (%eax),%eax
81002948:	83 f8 1d             	cmp    $0x1d,%eax
8100294b:	74 0a                	je     81002957 <__sflush_r+0x12f>
8100294d:	8b 45 08             	mov    0x8(%ebp),%eax
81002950:	8b 00                	mov    (%eax),%eax
81002952:	83 f8 16             	cmp    $0x16,%eax
81002955:	75 6e                	jne    810029c5 <__sflush_r+0x19d>
81002957:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100295b:	80 e4 f7             	and    $0xf7,%ah
8100295e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002962:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002969:	8b 43 10             	mov    0x10(%ebx),%eax
8100296c:	89 03                	mov    %eax,(%ebx)
8100296e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002972:	98                   	cwtl   
81002973:	25 00 10 00 00       	and    $0x1000,%eax
81002978:	85 c0                	test   %eax,%eax
8100297a:	74 15                	je     81002991 <__sflush_r+0x169>
8100297c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002980:	75 09                	jne    8100298b <__sflush_r+0x163>
81002982:	8b 45 08             	mov    0x8(%ebp),%eax
81002985:	8b 00                	mov    (%eax),%eax
81002987:	85 c0                	test   %eax,%eax
81002989:	75 06                	jne    81002991 <__sflush_r+0x169>
8100298b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
8100298e:	89 43 50             	mov    %eax,0x50(%ebx)
81002991:	8b 45 08             	mov    0x8(%ebp),%eax
81002994:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002997:	89 10                	mov    %edx,(%eax)
81002999:	8b 43 30             	mov    0x30(%ebx),%eax
8100299c:	85 c0                	test   %eax,%eax
8100299e:	74 37                	je     810029d7 <__sflush_r+0x1af>
810029a0:	8b 53 30             	mov    0x30(%ebx),%edx
810029a3:	8d 43 40             	lea    0x40(%ebx),%eax
810029a6:	39 c2                	cmp    %eax,%edx
810029a8:	74 12                	je     810029bc <__sflush_r+0x194>
810029aa:	8b 43 30             	mov    0x30(%ebx),%eax
810029ad:	83 ec 08             	sub    $0x8,%esp
810029b0:	50                   	push   %eax
810029b1:	ff 75 08             	pushl  0x8(%ebp)
810029b4:	e8 26 01 00 00       	call   81002adf <_free_r>
810029b9:	83 c4 10             	add    $0x10,%esp
810029bc:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810029c3:	eb 12                	jmp    810029d7 <__sflush_r+0x1af>
810029c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029c9:	83 c8 40             	or     $0x40,%eax
810029cc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810029d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810029d5:	eb 6f                	jmp    81002a46 <__sflush_r+0x21e>
810029d7:	b8 00 00 00 00       	mov    $0x0,%eax
810029dc:	eb 68                	jmp    81002a46 <__sflush_r+0x21e>
810029de:	8b 73 10             	mov    0x10(%ebx),%esi
810029e1:	85 f6                	test   %esi,%esi
810029e3:	75 07                	jne    810029ec <__sflush_r+0x1c4>
810029e5:	b8 00 00 00 00       	mov    $0x0,%eax
810029ea:	eb 5a                	jmp    81002a46 <__sflush_r+0x21e>
810029ec:	8b 03                	mov    (%ebx),%eax
810029ee:	29 f0                	sub    %esi,%eax
810029f0:	89 c7                	mov    %eax,%edi
810029f2:	89 33                	mov    %esi,(%ebx)
810029f4:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810029f8:	83 e0 03             	and    $0x3,%eax
810029fb:	85 c0                	test   %eax,%eax
810029fd:	75 05                	jne    81002a04 <__sflush_r+0x1dc>
810029ff:	8b 43 14             	mov    0x14(%ebx),%eax
81002a02:	eb 05                	jmp    81002a09 <__sflush_r+0x1e1>
81002a04:	b8 00 00 00 00       	mov    $0x0,%eax
81002a09:	89 43 08             	mov    %eax,0x8(%ebx)
81002a0c:	eb 2f                	jmp    81002a3d <__sflush_r+0x215>
81002a0e:	8b 43 24             	mov    0x24(%ebx),%eax
81002a11:	8b 53 1c             	mov    0x1c(%ebx),%edx
81002a14:	57                   	push   %edi
81002a15:	56                   	push   %esi
81002a16:	52                   	push   %edx
81002a17:	ff 75 08             	pushl  0x8(%ebp)
81002a1a:	ff d0                	call   *%eax
81002a1c:	83 c4 10             	add    $0x10,%esp
81002a1f:	85 c0                	test   %eax,%eax
81002a21:	7f 12                	jg     81002a35 <__sflush_r+0x20d>
81002a23:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a27:	83 c8 40             	or     $0x40,%eax
81002a2a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002a2e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002a33:	eb 11                	jmp    81002a46 <__sflush_r+0x21e>
81002a35:	89 c1                	mov    %eax,%ecx
81002a37:	89 c8                	mov    %ecx,%eax
81002a39:	01 c6                	add    %eax,%esi
81002a3b:	29 cf                	sub    %ecx,%edi
81002a3d:	85 ff                	test   %edi,%edi
81002a3f:	7f cd                	jg     81002a0e <__sflush_r+0x1e6>
81002a41:	b8 00 00 00 00       	mov    $0x0,%eax
81002a46:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002a49:	5b                   	pop    %ebx
81002a4a:	5e                   	pop    %esi
81002a4b:	5f                   	pop    %edi
81002a4c:	5d                   	pop    %ebp
81002a4d:	c3                   	ret    

81002a4e <_fflush_r>:
81002a4e:	55                   	push   %ebp
81002a4f:	89 e5                	mov    %esp,%ebp
81002a51:	53                   	push   %ebx
81002a52:	83 ec 14             	sub    $0x14,%esp
81002a55:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002a58:	8b 45 08             	mov    0x8(%ebp),%eax
81002a5b:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002a5e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81002a62:	74 18                	je     81002a7c <_fflush_r+0x2e>
81002a64:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002a67:	8b 40 38             	mov    0x38(%eax),%eax
81002a6a:	85 c0                	test   %eax,%eax
81002a6c:	75 0e                	jne    81002a7c <_fflush_r+0x2e>
81002a6e:	83 ec 0c             	sub    $0xc,%esp
81002a71:	ff 75 f4             	pushl  -0xc(%ebp)
81002a74:	e8 35 dd ff ff       	call   810007ae <__sinit>
81002a79:	83 c4 10             	add    $0x10,%esp
81002a7c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a80:	66 85 c0             	test   %ax,%ax
81002a83:	75 07                	jne    81002a8c <_fflush_r+0x3e>
81002a85:	b8 00 00 00 00       	mov    $0x0,%eax
81002a8a:	eb 15                	jmp    81002aa1 <_fflush_r+0x53>
81002a8c:	83 ec 08             	sub    $0x8,%esp
81002a8f:	53                   	push   %ebx
81002a90:	ff 75 08             	pushl  0x8(%ebp)
81002a93:	e8 90 fd ff ff       	call   81002828 <__sflush_r>
81002a98:	83 c4 10             	add    $0x10,%esp
81002a9b:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002a9e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002aa1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002aa4:	c9                   	leave  
81002aa5:	c3                   	ret    

81002aa6 <fflush>:
81002aa6:	55                   	push   %ebp
81002aa7:	89 e5                	mov    %esp,%ebp
81002aa9:	83 ec 08             	sub    $0x8,%esp
81002aac:	8b 55 08             	mov    0x8(%ebp),%edx
81002aaf:	85 d2                	test   %edx,%edx
81002ab1:	75 18                	jne    81002acb <fflush+0x25>
81002ab3:	a1 68 34 00 81       	mov    0x81003468,%eax
81002ab8:	83 ec 08             	sub    $0x8,%esp
81002abb:	68 4e 2a 00 81       	push   $0x81002a4e
81002ac0:	50                   	push   %eax
81002ac1:	e8 fb e2 ff ff       	call   81000dc1 <_fwalk_reent>
81002ac6:	83 c4 10             	add    $0x10,%esp
81002ac9:	eb 12                	jmp    81002add <fflush+0x37>
81002acb:	a1 a4 38 00 81       	mov    0x810038a4,%eax
81002ad0:	83 ec 08             	sub    $0x8,%esp
81002ad3:	52                   	push   %edx
81002ad4:	50                   	push   %eax
81002ad5:	e8 74 ff ff ff       	call   81002a4e <_fflush_r>
81002ada:	83 c4 10             	add    $0x10,%esp
81002add:	c9                   	leave  
81002ade:	c3                   	ret    

81002adf <_free_r>:
81002adf:	55                   	push   %ebp
81002ae0:	89 e5                	mov    %esp,%ebp
81002ae2:	53                   	push   %ebx
81002ae3:	83 ec 34             	sub    $0x34,%esp
81002ae6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81002aea:	0f 84 c4 03 00 00    	je     81002eb4 <_free_r+0x3d5>
81002af0:	83 ec 0c             	sub    $0xc,%esp
81002af3:	ff 75 08             	pushl  0x8(%ebp)
81002af6:	e8 ea ef ff ff       	call   81001ae5 <__malloc_lock>
81002afb:	83 c4 10             	add    $0x10,%esp
81002afe:	8b 45 0c             	mov    0xc(%ebp),%eax
81002b01:	83 e8 08             	sub    $0x8,%eax
81002b04:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002b07:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b0a:	8b 40 04             	mov    0x4(%eax),%eax
81002b0d:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002b10:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b13:	83 e0 fe             	and    $0xfffffffe,%eax
81002b16:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002b19:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002b1c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b1f:	01 d0                	add    %edx,%eax
81002b21:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002b24:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b27:	8b 40 04             	mov    0x4(%eax),%eax
81002b2a:	83 e0 fc             	and    $0xfffffffc,%eax
81002b2d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002b30:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002b35:	8b 40 08             	mov    0x8(%eax),%eax
81002b38:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81002b3b:	0f 85 94 00 00 00    	jne    81002bd5 <_free_r+0xf6>
81002b41:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b44:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b47:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002b4a:	83 e0 01             	and    $0x1,%eax
81002b4d:	85 c0                	test   %eax,%eax
81002b4f:	75 3a                	jne    81002b8b <_free_r+0xac>
81002b51:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b54:	8b 00                	mov    (%eax),%eax
81002b56:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002b59:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b5c:	f7 d8                	neg    %eax
81002b5e:	01 45 f4             	add    %eax,-0xc(%ebp)
81002b61:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002b64:	01 45 f0             	add    %eax,-0x10(%ebp)
81002b67:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b6a:	8b 40 0c             	mov    0xc(%eax),%eax
81002b6d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002b70:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b73:	8b 40 08             	mov    0x8(%eax),%eax
81002b76:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002b79:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002b7c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002b7f:	89 50 0c             	mov    %edx,0xc(%eax)
81002b82:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002b85:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002b88:	89 50 08             	mov    %edx,0x8(%eax)
81002b8b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002b8e:	83 c8 01             	or     $0x1,%eax
81002b91:	89 c2                	mov    %eax,%edx
81002b93:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002b96:	89 50 04             	mov    %edx,0x4(%eax)
81002b99:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81002b9e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ba1:	89 42 08             	mov    %eax,0x8(%edx)
81002ba4:	a1 c8 3c 00 81       	mov    0x81003cc8,%eax
81002ba9:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002bac:	72 14                	jb     81002bc2 <_free_r+0xe3>
81002bae:	a1 00 3d 00 81       	mov    0x81003d00,%eax
81002bb3:	83 ec 08             	sub    $0x8,%esp
81002bb6:	50                   	push   %eax
81002bb7:	ff 75 08             	pushl  0x8(%ebp)
81002bba:	e8 fb 02 00 00       	call   81002eba <_malloc_trim_r>
81002bbf:	83 c4 10             	add    $0x10,%esp
81002bc2:	83 ec 0c             	sub    $0xc,%esp
81002bc5:	ff 75 08             	pushl  0x8(%ebp)
81002bc8:	e8 1e ef ff ff       	call   81001aeb <__malloc_unlock>
81002bcd:	83 c4 10             	add    $0x10,%esp
81002bd0:	e9 e0 02 00 00       	jmp    81002eb5 <_free_r+0x3d6>
81002bd5:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002bd8:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002bdb:	89 50 04             	mov    %edx,0x4(%eax)
81002bde:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002be5:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002be8:	83 e0 01             	and    $0x1,%eax
81002beb:	85 c0                	test   %eax,%eax
81002bed:	75 52                	jne    81002c41 <_free_r+0x162>
81002bef:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002bf2:	8b 00                	mov    (%eax),%eax
81002bf4:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002bf7:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002bfa:	f7 d8                	neg    %eax
81002bfc:	01 45 f4             	add    %eax,-0xc(%ebp)
81002bff:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c02:	01 45 f0             	add    %eax,-0x10(%ebp)
81002c05:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c08:	8b 40 08             	mov    0x8(%eax),%eax
81002c0b:	ba c8 38 00 81       	mov    $0x810038c8,%edx
81002c10:	39 d0                	cmp    %edx,%eax
81002c12:	75 09                	jne    81002c1d <_free_r+0x13e>
81002c14:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002c1b:	eb 24                	jmp    81002c41 <_free_r+0x162>
81002c1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c20:	8b 40 0c             	mov    0xc(%eax),%eax
81002c23:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002c26:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c29:	8b 40 08             	mov    0x8(%eax),%eax
81002c2c:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002c2f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002c32:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002c35:	89 50 0c             	mov    %edx,0xc(%eax)
81002c38:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002c3b:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002c3e:	89 50 08             	mov    %edx,0x8(%eax)
81002c41:	8b 55 dc             	mov    -0x24(%ebp),%edx
81002c44:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c47:	01 d0                	add    %edx,%eax
81002c49:	8b 40 04             	mov    0x4(%eax),%eax
81002c4c:	83 e0 01             	and    $0x1,%eax
81002c4f:	85 c0                	test   %eax,%eax
81002c51:	75 75                	jne    81002cc8 <_free_r+0x1e9>
81002c53:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002c56:	01 45 f0             	add    %eax,-0x10(%ebp)
81002c59:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c5d:	75 45                	jne    81002ca4 <_free_r+0x1c5>
81002c5f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002c62:	8b 40 08             	mov    0x8(%eax),%eax
81002c65:	ba c8 38 00 81       	mov    $0x810038c8,%edx
81002c6a:	39 d0                	cmp    %edx,%eax
81002c6c:	75 36                	jne    81002ca4 <_free_r+0x1c5>
81002c6e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002c75:	b8 c8 38 00 81       	mov    $0x810038c8,%eax
81002c7a:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002c7d:	89 50 0c             	mov    %edx,0xc(%eax)
81002c80:	ba c8 38 00 81       	mov    $0x810038c8,%edx
81002c85:	8b 40 0c             	mov    0xc(%eax),%eax
81002c88:	89 42 08             	mov    %eax,0x8(%edx)
81002c8b:	ba c8 38 00 81       	mov    $0x810038c8,%edx
81002c90:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c93:	89 50 0c             	mov    %edx,0xc(%eax)
81002c96:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c99:	8b 50 0c             	mov    0xc(%eax),%edx
81002c9c:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002c9f:	89 50 08             	mov    %edx,0x8(%eax)
81002ca2:	eb 24                	jmp    81002cc8 <_free_r+0x1e9>
81002ca4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002ca7:	8b 40 0c             	mov    0xc(%eax),%eax
81002caa:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002cad:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002cb0:	8b 40 08             	mov    0x8(%eax),%eax
81002cb3:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002cb6:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002cb9:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002cbc:	89 50 0c             	mov    %edx,0xc(%eax)
81002cbf:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002cc2:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002cc5:	89 50 08             	mov    %edx,0x8(%eax)
81002cc8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ccb:	83 c8 01             	or     $0x1,%eax
81002cce:	89 c2                	mov    %eax,%edx
81002cd0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002cd3:	89 50 04             	mov    %edx,0x4(%eax)
81002cd6:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002cd9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cdc:	01 c2                	add    %eax,%edx
81002cde:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ce1:	89 02                	mov    %eax,(%edx)
81002ce3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002ce7:	0f 85 b7 01 00 00    	jne    81002ea4 <_free_r+0x3c5>
81002ced:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
81002cf4:	77 7f                	ja     81002d75 <_free_r+0x296>
81002cf6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002cf9:	c1 e8 03             	shr    $0x3,%eax
81002cfc:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002cff:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002d04:	8b 58 04             	mov    0x4(%eax),%ebx
81002d07:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d0a:	8d 50 03             	lea    0x3(%eax),%edx
81002d0d:	85 c0                	test   %eax,%eax
81002d0f:	0f 48 c2             	cmovs  %edx,%eax
81002d12:	c1 f8 02             	sar    $0x2,%eax
81002d15:	ba 01 00 00 00       	mov    $0x1,%edx
81002d1a:	89 c1                	mov    %eax,%ecx
81002d1c:	d3 e2                	shl    %cl,%edx
81002d1e:	89 d0                	mov    %edx,%eax
81002d20:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81002d25:	09 d8                	or     %ebx,%eax
81002d27:	89 42 04             	mov    %eax,0x4(%edx)
81002d2a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002d2d:	83 c0 01             	add    $0x1,%eax
81002d30:	01 c0                	add    %eax,%eax
81002d32:	c1 e0 02             	shl    $0x2,%eax
81002d35:	05 c0 38 00 81       	add    $0x810038c0,%eax
81002d3a:	83 e8 08             	sub    $0x8,%eax
81002d3d:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002d40:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d43:	8b 40 08             	mov    0x8(%eax),%eax
81002d46:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002d49:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d4c:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002d4f:	89 50 0c             	mov    %edx,0xc(%eax)
81002d52:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002d55:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002d58:	89 50 08             	mov    %edx,0x8(%eax)
81002d5b:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d5e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002d61:	89 50 08             	mov    %edx,0x8(%eax)
81002d64:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002d67:	8b 50 08             	mov    0x8(%eax),%edx
81002d6a:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002d6d:	89 50 0c             	mov    %edx,0xc(%eax)
81002d70:	e9 2f 01 00 00       	jmp    81002ea4 <_free_r+0x3c5>
81002d75:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d78:	c1 e8 09             	shr    $0x9,%eax
81002d7b:	85 c0                	test   %eax,%eax
81002d7d:	75 08                	jne    81002d87 <_free_r+0x2a8>
81002d7f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d82:	c1 e8 03             	shr    $0x3,%eax
81002d85:	eb 77                	jmp    81002dfe <_free_r+0x31f>
81002d87:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d8a:	c1 e8 09             	shr    $0x9,%eax
81002d8d:	83 f8 04             	cmp    $0x4,%eax
81002d90:	77 0b                	ja     81002d9d <_free_r+0x2be>
81002d92:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002d95:	c1 e8 06             	shr    $0x6,%eax
81002d98:	83 c0 38             	add    $0x38,%eax
81002d9b:	eb 61                	jmp    81002dfe <_free_r+0x31f>
81002d9d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002da0:	c1 e8 09             	shr    $0x9,%eax
81002da3:	83 f8 14             	cmp    $0x14,%eax
81002da6:	77 0b                	ja     81002db3 <_free_r+0x2d4>
81002da8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dab:	c1 e8 09             	shr    $0x9,%eax
81002dae:	83 c0 5b             	add    $0x5b,%eax
81002db1:	eb 4b                	jmp    81002dfe <_free_r+0x31f>
81002db3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002db6:	c1 e8 09             	shr    $0x9,%eax
81002db9:	83 f8 54             	cmp    $0x54,%eax
81002dbc:	77 0b                	ja     81002dc9 <_free_r+0x2ea>
81002dbe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dc1:	c1 e8 0c             	shr    $0xc,%eax
81002dc4:	83 c0 6e             	add    $0x6e,%eax
81002dc7:	eb 35                	jmp    81002dfe <_free_r+0x31f>
81002dc9:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dcc:	c1 e8 09             	shr    $0x9,%eax
81002dcf:	3d 54 01 00 00       	cmp    $0x154,%eax
81002dd4:	77 0b                	ja     81002de1 <_free_r+0x302>
81002dd6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002dd9:	c1 e8 0f             	shr    $0xf,%eax
81002ddc:	83 c0 77             	add    $0x77,%eax
81002ddf:	eb 1d                	jmp    81002dfe <_free_r+0x31f>
81002de1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002de4:	c1 e8 09             	shr    $0x9,%eax
81002de7:	3d 54 05 00 00       	cmp    $0x554,%eax
81002dec:	77 0b                	ja     81002df9 <_free_r+0x31a>
81002dee:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002df1:	c1 e8 12             	shr    $0x12,%eax
81002df4:	83 c0 7c             	add    $0x7c,%eax
81002df7:	eb 05                	jmp    81002dfe <_free_r+0x31f>
81002df9:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002dfe:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002e01:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e04:	83 c0 01             	add    $0x1,%eax
81002e07:	01 c0                	add    %eax,%eax
81002e09:	c1 e0 02             	shl    $0x2,%eax
81002e0c:	05 c0 38 00 81       	add    $0x810038c0,%eax
81002e11:	83 e8 08             	sub    $0x8,%eax
81002e14:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e17:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e1a:	8b 40 08             	mov    0x8(%eax),%eax
81002e1d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e20:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e23:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002e26:	75 36                	jne    81002e5e <_free_r+0x37f>
81002e28:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002e2d:	8b 58 04             	mov    0x4(%eax),%ebx
81002e30:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002e33:	8d 50 03             	lea    0x3(%eax),%edx
81002e36:	85 c0                	test   %eax,%eax
81002e38:	0f 48 c2             	cmovs  %edx,%eax
81002e3b:	c1 f8 02             	sar    $0x2,%eax
81002e3e:	ba 01 00 00 00       	mov    $0x1,%edx
81002e43:	89 c1                	mov    %eax,%ecx
81002e45:	d3 e2                	shl    %cl,%edx
81002e47:	89 d0                	mov    %edx,%eax
81002e49:	ba c0 38 00 81       	mov    $0x810038c0,%edx
81002e4e:	09 d8                	or     %ebx,%eax
81002e50:	89 42 04             	mov    %eax,0x4(%edx)
81002e53:	eb 28                	jmp    81002e7d <_free_r+0x39e>
81002e55:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e58:	8b 40 08             	mov    0x8(%eax),%eax
81002e5b:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002e5e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e61:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81002e64:	74 0e                	je     81002e74 <_free_r+0x395>
81002e66:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e69:	8b 40 04             	mov    0x4(%eax),%eax
81002e6c:	83 e0 fc             	and    $0xfffffffc,%eax
81002e6f:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81002e72:	72 e1                	jb     81002e55 <_free_r+0x376>
81002e74:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002e77:	8b 40 0c             	mov    0xc(%eax),%eax
81002e7a:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e7d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e80:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002e83:	89 50 0c             	mov    %edx,0xc(%eax)
81002e86:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e89:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002e8c:	89 50 08             	mov    %edx,0x8(%eax)
81002e8f:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e92:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002e95:	89 50 08             	mov    %edx,0x8(%eax)
81002e98:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002e9b:	8b 50 08             	mov    0x8(%eax),%edx
81002e9e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002ea1:	89 50 0c             	mov    %edx,0xc(%eax)
81002ea4:	83 ec 0c             	sub    $0xc,%esp
81002ea7:	ff 75 08             	pushl  0x8(%ebp)
81002eaa:	e8 3c ec ff ff       	call   81001aeb <__malloc_unlock>
81002eaf:	83 c4 10             	add    $0x10,%esp
81002eb2:	eb 01                	jmp    81002eb5 <_free_r+0x3d6>
81002eb4:	90                   	nop
81002eb5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002eb8:	c9                   	leave  
81002eb9:	c3                   	ret    

81002eba <_malloc_trim_r>:
81002eba:	55                   	push   %ebp
81002ebb:	89 e5                	mov    %esp,%ebp
81002ebd:	83 ec 28             	sub    $0x28,%esp
81002ec0:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002ec7:	83 ec 0c             	sub    $0xc,%esp
81002eca:	ff 75 08             	pushl  0x8(%ebp)
81002ecd:	e8 13 ec ff ff       	call   81001ae5 <__malloc_lock>
81002ed2:	83 c4 10             	add    $0x10,%esp
81002ed5:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002eda:	8b 40 08             	mov    0x8(%eax),%eax
81002edd:	8b 40 04             	mov    0x4(%eax),%eax
81002ee0:	83 e0 fc             	and    $0xfffffffc,%eax
81002ee3:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002ee6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002ee9:	2b 45 0c             	sub    0xc(%ebp),%eax
81002eec:	89 c2                	mov    %eax,%edx
81002eee:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002ef1:	01 d0                	add    %edx,%eax
81002ef3:	83 e8 11             	sub    $0x11,%eax
81002ef6:	ba 00 00 00 00       	mov    $0x0,%edx
81002efb:	f7 75 f4             	divl   -0xc(%ebp)
81002efe:	83 e8 01             	sub    $0x1,%eax
81002f01:	0f af 45 f4          	imul   -0xc(%ebp),%eax
81002f05:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002f08:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f0b:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81002f0e:	7d 18                	jge    81002f28 <_malloc_trim_r+0x6e>
81002f10:	83 ec 0c             	sub    $0xc,%esp
81002f13:	ff 75 08             	pushl  0x8(%ebp)
81002f16:	e8 d0 eb ff ff       	call   81001aeb <__malloc_unlock>
81002f1b:	83 c4 10             	add    $0x10,%esp
81002f1e:	b8 00 00 00 00       	mov    $0x0,%eax
81002f23:	e9 f1 00 00 00       	jmp    81003019 <_malloc_trim_r+0x15f>
81002f28:	83 ec 08             	sub    $0x8,%esp
81002f2b:	6a 00                	push   $0x0
81002f2d:	ff 75 08             	pushl  0x8(%ebp)
81002f30:	e8 96 f4 ff ff       	call   810023cb <_sbrk_r>
81002f35:	83 c4 10             	add    $0x10,%esp
81002f38:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f3b:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002f40:	8b 50 08             	mov    0x8(%eax),%edx
81002f43:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002f46:	01 d0                	add    %edx,%eax
81002f48:	39 45 e8             	cmp    %eax,-0x18(%ebp)
81002f4b:	74 18                	je     81002f65 <_malloc_trim_r+0xab>
81002f4d:	83 ec 0c             	sub    $0xc,%esp
81002f50:	ff 75 08             	pushl  0x8(%ebp)
81002f53:	e8 93 eb ff ff       	call   81001aeb <__malloc_unlock>
81002f58:	83 c4 10             	add    $0x10,%esp
81002f5b:	b8 00 00 00 00       	mov    $0x0,%eax
81002f60:	e9 b4 00 00 00       	jmp    81003019 <_malloc_trim_r+0x15f>
81002f65:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002f68:	f7 d8                	neg    %eax
81002f6a:	83 ec 08             	sub    $0x8,%esp
81002f6d:	50                   	push   %eax
81002f6e:	ff 75 08             	pushl  0x8(%ebp)
81002f71:	e8 55 f4 ff ff       	call   810023cb <_sbrk_r>
81002f76:	83 c4 10             	add    $0x10,%esp
81002f79:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002f7c:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81002f80:	75 61                	jne    81002fe3 <_malloc_trim_r+0x129>
81002f82:	83 ec 08             	sub    $0x8,%esp
81002f85:	6a 00                	push   $0x0
81002f87:	ff 75 08             	pushl  0x8(%ebp)
81002f8a:	e8 3c f4 ff ff       	call   810023cb <_sbrk_r>
81002f8f:	83 c4 10             	add    $0x10,%esp
81002f92:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002f95:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002f9a:	8b 50 08             	mov    0x8(%eax),%edx
81002f9d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fa0:	29 d0                	sub    %edx,%eax
81002fa2:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002fa5:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002fa9:	7e 23                	jle    81002fce <_malloc_trim_r+0x114>
81002fab:	8b 15 cc 3c 00 81    	mov    0x81003ccc,%edx
81002fb1:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002fb4:	29 d0                	sub    %edx,%eax
81002fb6:	a3 20 3d 00 81       	mov    %eax,0x81003d20
81002fbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fbe:	83 c8 01             	or     $0x1,%eax
81002fc1:	89 c2                	mov    %eax,%edx
81002fc3:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002fc8:	8b 40 08             	mov    0x8(%eax),%eax
81002fcb:	89 50 04             	mov    %edx,0x4(%eax)
81002fce:	83 ec 0c             	sub    $0xc,%esp
81002fd1:	ff 75 08             	pushl  0x8(%ebp)
81002fd4:	e8 12 eb ff ff       	call   81001aeb <__malloc_unlock>
81002fd9:	83 c4 10             	add    $0x10,%esp
81002fdc:	b8 00 00 00 00       	mov    $0x0,%eax
81002fe1:	eb 36                	jmp    81003019 <_malloc_trim_r+0x15f>
81002fe3:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002fe6:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002fe9:	83 c8 01             	or     $0x1,%eax
81002fec:	89 c2                	mov    %eax,%edx
81002fee:	b8 c0 38 00 81       	mov    $0x810038c0,%eax
81002ff3:	8b 40 08             	mov    0x8(%eax),%eax
81002ff6:	89 50 04             	mov    %edx,0x4(%eax)
81002ff9:	a1 20 3d 00 81       	mov    0x81003d20,%eax
81002ffe:	2b 45 ec             	sub    -0x14(%ebp),%eax
81003001:	a3 20 3d 00 81       	mov    %eax,0x81003d20
81003006:	83 ec 0c             	sub    $0xc,%esp
81003009:	ff 75 08             	pushl  0x8(%ebp)
8100300c:	e8 da ea ff ff       	call   81001aeb <__malloc_unlock>
81003011:	83 c4 10             	add    $0x10,%esp
81003014:	b8 01 00 00 00       	mov    $0x1,%eax
81003019:	c9                   	leave  
8100301a:	c3                   	ret    

8100301b <_lseek_r>:
8100301b:	55                   	push   %ebp
8100301c:	89 e5                	mov    %esp,%ebp
8100301e:	83 ec 18             	sub    $0x18,%esp
81003021:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
81003028:	00 00 00 
8100302b:	83 ec 04             	sub    $0x4,%esp
8100302e:	ff 75 14             	pushl  0x14(%ebp)
81003031:	ff 75 10             	pushl  0x10(%ebp)
81003034:	ff 75 0c             	pushl  0xc(%ebp)
81003037:	e8 6c d2 ff ff       	call   810002a8 <lseek>
8100303c:	83 c4 10             	add    $0x10,%esp
8100303f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003042:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003046:	75 14                	jne    8100305c <_lseek_r+0x41>
81003048:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
8100304d:	85 c0                	test   %eax,%eax
8100304f:	74 0b                	je     8100305c <_lseek_r+0x41>
81003051:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
81003057:	8b 45 08             	mov    0x8(%ebp),%eax
8100305a:	89 10                	mov    %edx,(%eax)
8100305c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100305f:	c9                   	leave  
81003060:	c3                   	ret    

81003061 <__smakebuf_r>:
81003061:	55                   	push   %ebp
81003062:	89 e5                	mov    %esp,%ebp
81003064:	56                   	push   %esi
81003065:	53                   	push   %ebx
81003066:	83 ec 10             	sub    $0x10,%esp
81003069:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100306c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003070:	98                   	cwtl   
81003071:	83 e0 02             	and    $0x2,%eax
81003074:	85 c0                	test   %eax,%eax
81003076:	74 16                	je     8100308e <__smakebuf_r+0x2d>
81003078:	8d 43 43             	lea    0x43(%ebx),%eax
8100307b:	89 03                	mov    %eax,(%ebx)
8100307d:	8b 03                	mov    (%ebx),%eax
8100307f:	89 43 10             	mov    %eax,0x10(%ebx)
81003082:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003089:	e9 b9 00 00 00       	jmp    81003147 <__smakebuf_r+0xe6>
8100308e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003091:	50                   	push   %eax
81003092:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003095:	50                   	push   %eax
81003096:	53                   	push   %ebx
81003097:	ff 75 08             	pushl  0x8(%ebp)
8100309a:	e8 af 00 00 00       	call   8100314e <__swhatbuf_r>
8100309f:	83 c4 10             	add    $0x10,%esp
810030a2:	89 45 f4             	mov    %eax,-0xc(%ebp)
810030a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810030a8:	83 ec 08             	sub    $0x8,%esp
810030ab:	50                   	push   %eax
810030ac:	ff 75 08             	pushl  0x8(%ebp)
810030af:	e8 0b e0 ff ff       	call   810010bf <_malloc_r>
810030b4:	83 c4 10             	add    $0x10,%esp
810030b7:	89 c6                	mov    %eax,%esi
810030b9:	85 f6                	test   %esi,%esi
810030bb:	75 2f                	jne    810030ec <__smakebuf_r+0x8b>
810030bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030c1:	98                   	cwtl   
810030c2:	25 00 02 00 00       	and    $0x200,%eax
810030c7:	85 c0                	test   %eax,%eax
810030c9:	75 7c                	jne    81003147 <__smakebuf_r+0xe6>
810030cb:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030cf:	83 e0 fc             	and    $0xfffffffc,%eax
810030d2:	83 c8 02             	or     $0x2,%eax
810030d5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810030d9:	8d 43 43             	lea    0x43(%ebx),%eax
810030dc:	89 03                	mov    %eax,(%ebx)
810030de:	8b 03                	mov    (%ebx),%eax
810030e0:	89 43 10             	mov    %eax,0x10(%ebx)
810030e3:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810030ea:	eb 5b                	jmp    81003147 <__smakebuf_r+0xe6>
810030ec:	8b 45 08             	mov    0x8(%ebp),%eax
810030ef:	c7 40 3c 73 07 00 81 	movl   $0x81000773,0x3c(%eax)
810030f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810030fa:	0c 80                	or     $0x80,%al
810030fc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003100:	89 33                	mov    %esi,(%ebx)
81003102:	8b 03                	mov    (%ebx),%eax
81003104:	89 43 10             	mov    %eax,0x10(%ebx)
81003107:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100310a:	89 43 14             	mov    %eax,0x14(%ebx)
8100310d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003110:	85 c0                	test   %eax,%eax
81003112:	74 26                	je     8100313a <__smakebuf_r+0xd9>
81003114:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003118:	98                   	cwtl   
81003119:	83 ec 08             	sub    $0x8,%esp
8100311c:	50                   	push   %eax
8100311d:	ff 75 08             	pushl  0x8(%ebp)
81003120:	e8 dc 02 00 00       	call   81003401 <_isatty_r>
81003125:	83 c4 10             	add    $0x10,%esp
81003128:	85 c0                	test   %eax,%eax
8100312a:	74 0e                	je     8100313a <__smakebuf_r+0xd9>
8100312c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003130:	83 e0 fc             	and    $0xfffffffc,%eax
81003133:	83 c8 01             	or     $0x1,%eax
81003136:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100313a:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100313e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003141:	09 d0                	or     %edx,%eax
81003143:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003147:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100314a:	5b                   	pop    %ebx
8100314b:	5e                   	pop    %esi
8100314c:	5d                   	pop    %ebp
8100314d:	c3                   	ret    

8100314e <__swhatbuf_r>:
8100314e:	55                   	push   %ebp
8100314f:	89 e5                	mov    %esp,%ebp
81003151:	83 ec 58             	sub    $0x58,%esp
81003154:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
8100315b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100315e:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003162:	66 85 c0             	test   %ax,%ax
81003165:	78 1f                	js     81003186 <__swhatbuf_r+0x38>
81003167:	8b 45 0c             	mov    0xc(%ebp),%eax
8100316a:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
8100316e:	98                   	cwtl   
8100316f:	83 ec 04             	sub    $0x4,%esp
81003172:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003175:	52                   	push   %edx
81003176:	50                   	push   %eax
81003177:	ff 75 08             	pushl  0x8(%ebp)
8100317a:	e8 3f 02 00 00       	call   810033be <_fstat_r>
8100317f:	83 c4 10             	add    $0x10,%esp
81003182:	85 c0                	test   %eax,%eax
81003184:	79 35                	jns    810031bb <__swhatbuf_r+0x6d>
81003186:	8b 45 14             	mov    0x14(%ebp),%eax
81003189:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100318f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003192:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003196:	98                   	cwtl   
81003197:	25 80 00 00 00       	and    $0x80,%eax
8100319c:	85 c0                	test   %eax,%eax
8100319e:	74 0b                	je     810031ab <__swhatbuf_r+0x5d>
810031a0:	8b 45 10             	mov    0x10(%ebp),%eax
810031a3:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
810031a9:	eb 09                	jmp    810031b4 <__swhatbuf_r+0x66>
810031ab:	8b 45 10             	mov    0x10(%ebp),%eax
810031ae:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810031b4:	b8 00 00 00 00       	mov    $0x0,%eax
810031b9:	eb 24                	jmp    810031df <__swhatbuf_r+0x91>
810031bb:	8b 45 b0             	mov    -0x50(%ebp),%eax
810031be:	25 00 f0 00 00       	and    $0xf000,%eax
810031c3:	3d 00 20 00 00       	cmp    $0x2000,%eax
810031c8:	0f 94 c0             	sete   %al
810031cb:	0f b6 d0             	movzbl %al,%edx
810031ce:	8b 45 14             	mov    0x14(%ebp),%eax
810031d1:	89 10                	mov    %edx,(%eax)
810031d3:	8b 45 10             	mov    0x10(%ebp),%eax
810031d6:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
810031dc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810031df:	c9                   	leave  
810031e0:	c3                   	ret    

810031e1 <_read_r>:
810031e1:	55                   	push   %ebp
810031e2:	89 e5                	mov    %esp,%ebp
810031e4:	83 ec 18             	sub    $0x18,%esp
810031e7:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
810031ee:	00 00 00 
810031f1:	83 ec 04             	sub    $0x4,%esp
810031f4:	ff 75 14             	pushl  0x14(%ebp)
810031f7:	ff 75 10             	pushl  0x10(%ebp)
810031fa:	ff 75 0c             	pushl  0xc(%ebp)
810031fd:	e8 1f d0 ff ff       	call   81000221 <read>
81003202:	83 c4 10             	add    $0x10,%esp
81003205:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003208:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100320c:	75 14                	jne    81003222 <_read_r+0x41>
8100320e:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
81003213:	85 c0                	test   %eax,%eax
81003215:	74 0b                	je     81003222 <_read_r+0x41>
81003217:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
8100321d:	8b 45 08             	mov    0x8(%ebp),%eax
81003220:	89 10                	mov    %edx,(%eax)
81003222:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003225:	c9                   	leave  
81003226:	c3                   	ret    

81003227 <cleanup_glue>:
81003227:	55                   	push   %ebp
81003228:	89 e5                	mov    %esp,%ebp
8100322a:	83 ec 08             	sub    $0x8,%esp
8100322d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003230:	8b 00                	mov    (%eax),%eax
81003232:	85 c0                	test   %eax,%eax
81003234:	74 14                	je     8100324a <cleanup_glue+0x23>
81003236:	8b 45 0c             	mov    0xc(%ebp),%eax
81003239:	8b 00                	mov    (%eax),%eax
8100323b:	83 ec 08             	sub    $0x8,%esp
8100323e:	50                   	push   %eax
8100323f:	ff 75 08             	pushl  0x8(%ebp)
81003242:	e8 e0 ff ff ff       	call   81003227 <cleanup_glue>
81003247:	83 c4 10             	add    $0x10,%esp
8100324a:	83 ec 08             	sub    $0x8,%esp
8100324d:	ff 75 0c             	pushl  0xc(%ebp)
81003250:	ff 75 08             	pushl  0x8(%ebp)
81003253:	e8 87 f8 ff ff       	call   81002adf <_free_r>
81003258:	83 c4 10             	add    $0x10,%esp
8100325b:	90                   	nop
8100325c:	c9                   	leave  
8100325d:	c3                   	ret    

8100325e <_reclaim_reent>:
8100325e:	55                   	push   %ebp
8100325f:	89 e5                	mov    %esp,%ebp
81003261:	83 ec 28             	sub    $0x28,%esp
81003264:	a1 a4 38 00 81       	mov    0x810038a4,%eax
81003269:	39 45 08             	cmp    %eax,0x8(%ebp)
8100326c:	0f 84 49 01 00 00    	je     810033bb <_reclaim_reent+0x15d>
81003272:	8b 45 08             	mov    0x8(%ebp),%eax
81003275:	8b 40 4c             	mov    0x4c(%eax),%eax
81003278:	85 c0                	test   %eax,%eax
8100327a:	74 64                	je     810032e0 <_reclaim_reent+0x82>
8100327c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81003283:	eb 3e                	jmp    810032c3 <_reclaim_reent+0x65>
81003285:	8b 45 08             	mov    0x8(%ebp),%eax
81003288:	8b 50 4c             	mov    0x4c(%eax),%edx
8100328b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100328e:	c1 e0 02             	shl    $0x2,%eax
81003291:	01 d0                	add    %edx,%eax
81003293:	8b 00                	mov    (%eax),%eax
81003295:	89 45 f0             	mov    %eax,-0x10(%ebp)
81003298:	eb 1f                	jmp    810032b9 <_reclaim_reent+0x5b>
8100329a:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100329d:	89 45 e8             	mov    %eax,-0x18(%ebp)
810032a0:	8b 45 f0             	mov    -0x10(%ebp),%eax
810032a3:	8b 00                	mov    (%eax),%eax
810032a5:	89 45 f0             	mov    %eax,-0x10(%ebp)
810032a8:	83 ec 08             	sub    $0x8,%esp
810032ab:	ff 75 e8             	pushl  -0x18(%ebp)
810032ae:	ff 75 08             	pushl  0x8(%ebp)
810032b1:	e8 29 f8 ff ff       	call   81002adf <_free_r>
810032b6:	83 c4 10             	add    $0x10,%esp
810032b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810032bd:	75 db                	jne    8100329a <_reclaim_reent+0x3c>
810032bf:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
810032c3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810032c6:	83 f8 1f             	cmp    $0x1f,%eax
810032c9:	76 ba                	jbe    81003285 <_reclaim_reent+0x27>
810032cb:	8b 45 08             	mov    0x8(%ebp),%eax
810032ce:	8b 40 4c             	mov    0x4c(%eax),%eax
810032d1:	83 ec 08             	sub    $0x8,%esp
810032d4:	50                   	push   %eax
810032d5:	ff 75 08             	pushl  0x8(%ebp)
810032d8:	e8 02 f8 ff ff       	call   81002adf <_free_r>
810032dd:	83 c4 10             	add    $0x10,%esp
810032e0:	8b 45 08             	mov    0x8(%ebp),%eax
810032e3:	8b 40 40             	mov    0x40(%eax),%eax
810032e6:	85 c0                	test   %eax,%eax
810032e8:	74 15                	je     810032ff <_reclaim_reent+0xa1>
810032ea:	8b 45 08             	mov    0x8(%ebp),%eax
810032ed:	8b 40 40             	mov    0x40(%eax),%eax
810032f0:	83 ec 08             	sub    $0x8,%esp
810032f3:	50                   	push   %eax
810032f4:	ff 75 08             	pushl  0x8(%ebp)
810032f7:	e8 e3 f7 ff ff       	call   81002adf <_free_r>
810032fc:	83 c4 10             	add    $0x10,%esp
810032ff:	8b 45 08             	mov    0x8(%ebp),%eax
81003302:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003308:	85 c0                	test   %eax,%eax
8100330a:	74 50                	je     8100335c <_reclaim_reent+0xfe>
8100330c:	8b 45 08             	mov    0x8(%ebp),%eax
8100330f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
81003315:	8b 55 08             	mov    0x8(%ebp),%edx
81003318:	81 c2 4c 01 00 00    	add    $0x14c,%edx
8100331e:	39 d0                	cmp    %edx,%eax
81003320:	74 3a                	je     8100335c <_reclaim_reent+0xfe>
81003322:	8b 45 08             	mov    0x8(%ebp),%eax
81003325:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
8100332b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100332e:	eb 1f                	jmp    8100334f <_reclaim_reent+0xf1>
81003330:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003333:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81003336:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003339:	8b 00                	mov    (%eax),%eax
8100333b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100333e:	83 ec 08             	sub    $0x8,%esp
81003341:	ff 75 e4             	pushl  -0x1c(%ebp)
81003344:	ff 75 08             	pushl  0x8(%ebp)
81003347:	e8 93 f7 ff ff       	call   81002adf <_free_r>
8100334c:	83 c4 10             	add    $0x10,%esp
8100334f:	8b 45 08             	mov    0x8(%ebp),%eax
81003352:	05 4c 01 00 00       	add    $0x14c,%eax
81003357:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100335a:	75 d4                	jne    81003330 <_reclaim_reent+0xd2>
8100335c:	8b 45 08             	mov    0x8(%ebp),%eax
8100335f:	8b 40 54             	mov    0x54(%eax),%eax
81003362:	85 c0                	test   %eax,%eax
81003364:	74 15                	je     8100337b <_reclaim_reent+0x11d>
81003366:	8b 45 08             	mov    0x8(%ebp),%eax
81003369:	8b 40 54             	mov    0x54(%eax),%eax
8100336c:	83 ec 08             	sub    $0x8,%esp
8100336f:	50                   	push   %eax
81003370:	ff 75 08             	pushl  0x8(%ebp)
81003373:	e8 67 f7 ff ff       	call   81002adf <_free_r>
81003378:	83 c4 10             	add    $0x10,%esp
8100337b:	8b 45 08             	mov    0x8(%ebp),%eax
8100337e:	8b 40 38             	mov    0x38(%eax),%eax
81003381:	85 c0                	test   %eax,%eax
81003383:	74 36                	je     810033bb <_reclaim_reent+0x15d>
81003385:	8b 45 08             	mov    0x8(%ebp),%eax
81003388:	8b 40 3c             	mov    0x3c(%eax),%eax
8100338b:	83 ec 0c             	sub    $0xc,%esp
8100338e:	ff 75 08             	pushl  0x8(%ebp)
81003391:	ff d0                	call   *%eax
81003393:	83 c4 10             	add    $0x10,%esp
81003396:	8b 45 08             	mov    0x8(%ebp),%eax
81003399:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100339f:	85 c0                	test   %eax,%eax
810033a1:	74 18                	je     810033bb <_reclaim_reent+0x15d>
810033a3:	8b 45 08             	mov    0x8(%ebp),%eax
810033a6:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
810033ac:	83 ec 08             	sub    $0x8,%esp
810033af:	50                   	push   %eax
810033b0:	ff 75 08             	pushl  0x8(%ebp)
810033b3:	e8 6f fe ff ff       	call   81003227 <cleanup_glue>
810033b8:	83 c4 10             	add    $0x10,%esp
810033bb:	90                   	nop
810033bc:	c9                   	leave  
810033bd:	c3                   	ret    

810033be <_fstat_r>:
810033be:	55                   	push   %ebp
810033bf:	89 e5                	mov    %esp,%ebp
810033c1:	83 ec 18             	sub    $0x18,%esp
810033c4:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
810033cb:	00 00 00 
810033ce:	83 ec 08             	sub    $0x8,%esp
810033d1:	ff 75 10             	pushl  0x10(%ebp)
810033d4:	ff 75 0c             	pushl  0xc(%ebp)
810033d7:	e8 22 cf ff ff       	call   810002fe <fstat>
810033dc:	83 c4 10             	add    $0x10,%esp
810033df:	89 45 f4             	mov    %eax,-0xc(%ebp)
810033e2:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810033e6:	75 14                	jne    810033fc <_fstat_r+0x3e>
810033e8:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
810033ed:	85 c0                	test   %eax,%eax
810033ef:	74 0b                	je     810033fc <_fstat_r+0x3e>
810033f1:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
810033f7:	8b 45 08             	mov    0x8(%ebp),%eax
810033fa:	89 10                	mov    %edx,(%eax)
810033fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810033ff:	c9                   	leave  
81003400:	c3                   	ret    

81003401 <_isatty_r>:
81003401:	55                   	push   %ebp
81003402:	89 e5                	mov    %esp,%ebp
81003404:	83 ec 18             	sub    $0x18,%esp
81003407:	c7 05 4c 3d 00 81 00 	movl   $0x0,0x81003d4c
8100340e:	00 00 00 
81003411:	83 ec 0c             	sub    $0xc,%esp
81003414:	ff 75 0c             	pushl  0xc(%ebp)
81003417:	e8 bd ce ff ff       	call   810002d9 <isatty>
8100341c:	83 c4 10             	add    $0x10,%esp
8100341f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003422:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003426:	75 14                	jne    8100343c <_isatty_r+0x3b>
81003428:	a1 4c 3d 00 81       	mov    0x81003d4c,%eax
8100342d:	85 c0                	test   %eax,%eax
8100342f:	74 0b                	je     8100343c <_isatty_r+0x3b>
81003431:	8b 15 4c 3d 00 81    	mov    0x81003d4c,%edx
81003437:	8b 45 08             	mov    0x8(%ebp),%eax
8100343a:	89 10                	mov    %edx,(%eax)
8100343c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100343f:	c9                   	leave  
81003440:	c3                   	ret    
